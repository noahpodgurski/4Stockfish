"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdatemeleelight"]("main",{

/***/ "./src/input/gamepad/gamepadCalibration.ts":
/*!*************************************************!*\
  !*** ./src/input/gamepad/gamepadCalibration.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// @flow\n/*eslint indent:0*/\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.customGamepadInfoIsUsable = void 0;\nexports.setClickObject = setClickObject;\nexports.setClickObjectNumber = setClickObjectNumber;\nexports.setCustomGamepadInfoIsUsable = setCustomGamepadInfoIsUsable;\nexports.runCalibration = runCalibration;\nconst Vec2D_js_1 = __webpack_require__(Object(function webpackMissingModule() { var e = new Error(\"Cannot find module '../../main/util/Vec2D.js'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }()));\nconst deepCopy_js_1 = __webpack_require__(Object(function webpackMissingModule() { var e = new Error(\"Cannot find module '../../main/util/deepCopy.js'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }()));\nconst main_js_1 = __webpack_require__(Object(function webpackMissingModule() { var e = new Error(\"Cannot find module '../../main/main.js'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }()));\nconst controllermenu_js_1 = __webpack_require__(Object(function webpackMissingModule() { var e = new Error(\"Cannot find module '../../menus/controllermenu.js'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }()));\nconst gamepadInfo_js_1 = __webpack_require__(Object(function webpackMissingModule() { var e = new Error(\"Cannot find module './gamepadInfo.js'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }()));\nconst gamepad_js_1 = __webpack_require__(Object(function webpackMissingModule() { var e = new Error(\"Cannot find module './gamepad.js'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }()));\nconst custom_js_1 = __webpack_require__(/*! ./gamepads/custom.js */ \"./src/input/gamepad/gamepads/custom.js\");\nconst findGamepadInfo_js_1 = __webpack_require__(Object(function webpackMissingModule() { var e = new Error(\"Cannot find module './findGamepadInfo.js'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }()));\nconst sfx_js_1 = __webpack_require__(Object(function webpackMissingModule() { var e = new Error(\"Cannot find module '../../main/sfx.js'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }()));\nconst calibrationInProgress = [false, false, false, false];\nfunction setCalibrationInProgress(i, boolean) {\n    calibrationInProgress[i] = boolean;\n}\nconst nullSnapshots = {\n    b0: [], bL: [], bR: [], bU: [],\n    a0: [], aL: [], aR: [], aU: []\n};\nlet clickObject = null;\nfunction setClickObject(click) {\n    if (clickObject === null) {\n        clickObject = click;\n    }\n}\nlet clickObjectNumber = 0;\nfunction setClickObjectNumber(k) {\n    clickObjectNumber = k;\n}\nexports.customGamepadInfoIsUsable = [true, null, null, null, null, null, null, null];\nlet listening = false;\nconst ids = [\"a\", \"b\", \"x\", \"y\", \"s\", \"r\", \"l\", \"z\", \"dpad\", \"icon\", \"ls\", \"cs\"];\n// add listeners for click\n// these turn off when the SVG is not displayed, so shouldn't impact performance\nfunction listen() {\n    var _a, _b;\n    // $FlowFixMe ignore the following type error\n    const svgDoc = (_a = document.getElementById(\"gamepadSVGCalibration\")) === null || _a === void 0 ? void 0 : _a.ownerDocument;\n    for (let i = 0; i < ids.length; i++) {\n        const id = ids[i];\n        if (id === null) {\n            throw \"id is null\";\n        }\n        // eslint-disable-next-line no-loop-func\n        (_b = svgDoc === null || svgDoc === void 0 ? void 0 : svgDoc.getElementById(id)) === null || _b === void 0 ? void 0 : _b.addEventListener('click', () => {\n            clickObject = id;\n        });\n    }\n    listening = true;\n}\nconst defaultTexts = [\"Click button, trigger or analog stick to rebind.\"];\nconst errorText = [\"Error: no controller detected\"];\n// figure out which custom gamepad infos are usable by the current controller\n// sets the value for customGamepadInfoIsUsable\nfunction setCustomGamepadInfoIsUsable(j) {\n    const currentGamepad = (0, gamepad_js_1.getGamepad)(j);\n    if (currentGamepad) {\n        const currentGamepadId = currentGamepad.id;\n        if ((0, findGamepadInfo_js_1.getGamepadNameAndInfo)(currentGamepadId) === null) {\n            exports.customGamepadInfoIsUsable[0] = null;\n        }\n        else {\n            exports.customGamepadInfoIsUsable[0] = true;\n        }\n        for (let k = 1; k < 8; k++) {\n            const maybeCustomGamepadInfo = (0, custom_js_1.getCustomGamepadInfo)(k);\n            if (maybeCustomGamepadInfo === null) {\n                exports.customGamepadInfoIsUsable[k] = null;\n            }\n            else {\n                if (currentGamepadId === maybeCustomGamepadInfo.fullID) {\n                    exports.customGamepadInfoIsUsable[k] = true;\n                }\n                else {\n                    exports.customGamepadInfoIsUsable[k] = false;\n                }\n            }\n        }\n    }\n    else {\n        exports.customGamepadInfoIsUsable[0] = null;\n    }\n}\nfunction runCalibration(i) {\n    if (!calibrationInProgress[i]) {\n        setCalibrationInProgress(i, true);\n        const interval = 2000;\n        const j = main_js_1.currentPlayers[i];\n        const prevGamepadInfo = main_js_1.mType[i] === null || main_js_1.mType[i] === \"keyboard\" ? gamepadInfo_js_1.nullGamepadInfo : main_js_1.mType[i];\n        const gamepadInfo = (0, deepCopy_js_1.deepCopyObject)(true, prevGamepadInfo);\n        setCustomGamepadInfoIsUsable(j);\n        clickObject = null;\n        if (listening === false) {\n            listen();\n        }\n        (0, controllermenu_js_1.updateControllerMenu)(false, [\"Mouse-click the start button to begin calibration.\"], 0);\n        preCalibrationLoop(i, j, gamepadInfo, interval);\n    }\n}\nfunction resetGamepadInfo(j) {\n    const gamepad = (0, gamepad_js_1.getGamepad)(j);\n    let baseGamepadInfo = gamepadInfo_js_1.nullGamepadInfo;\n    if (gamepad !== undefined && gamepad !== null && gamepad.id !== undefined && gamepad.id !== null) {\n        const maybeNameAndInfo = (0, findGamepadInfo_js_1.getGamepadNameAndInfo)(gamepad.id);\n        if (maybeNameAndInfo !== null) {\n            baseGamepadInfo = (0, deepCopy_js_1.deepCopyObject)(true, maybeNameAndInfo[1]);\n        }\n    }\n    return baseGamepadInfo;\n}\nfunction saveSound() {\n    sfx_js_1.sounds.star.play();\n}\nfunction preCalibrationLoop(i, j, gamepadInfo, interval) {\n    if (clickObject === \"s\") {\n        sfx_js_1.sounds.blunthit.play();\n        (0, custom_js_1.setCustomGamepadInfo)(j, gamepadInfo);\n        (0, main_js_1.setUsingCustomControls)(i, true);\n        (0, controllermenu_js_1.updateControllerMenu)(false, [\"Finding controller neutral point.\", \"Do not press anything.\"], interval);\n        // take null snapshot\n        setTimeout(() => {\n            (0, main_js_1.setControllerReset)(i);\n            saveSound();\n            const gamepad = (0, gamepad_js_1.getGamepad)(j);\n            if (gamepad !== undefined && gamepad !== null) {\n                const snapshots = nullSnapshots;\n                snapshots.b0 = (0, deepCopy_js_1.deepCopyArray)(true, gamepad.buttons);\n                snapshots.a0 = (0, deepCopy_js_1.deepCopyArray)(true, gamepad.axes);\n                calibrationLoop(i, j, gamepadInfo, snapshots, interval);\n                (0, controllermenu_js_1.updateControllerMenu)(false, defaultTexts, 0);\n            }\n            else {\n                (0, controllermenu_js_1.updateControllerMenu)(false, errorText, 0);\n            }\n        }, interval);\n    }\n    else if (clickObject === \"exit\") {\n        sfx_js_1.sounds.menuBack.play();\n        (0, controllermenu_js_1.updateControllerMenu)(true, [\"Quitting calibration menu.\"], interval);\n        setCalibrationInProgress(i, false);\n    }\n    else if (clickObject === \"reset\") {\n        sfx_js_1.sounds.loudelectricfizz.play();\n        (0, controllermenu_js_1.setCustomInUse)(0);\n        const baseGamepadInfo = resetGamepadInfo(j);\n        (0, main_js_1.setUsingCustomControls)(i, false, baseGamepadInfo);\n        (0, controllermenu_js_1.updateControllerMenu)(false, [\"Controller bindings have been reset.\", \"Click the start button to begin calibration.\"], 0);\n        setTimeout(() => preCalibrationLoop(i, j, baseGamepadInfo, interval), 16);\n    }\n    else if (clickObject === \"center\") {\n        saveSound();\n        (0, main_js_1.setControllerReset)(i);\n        (0, controllermenu_js_1.updateControllerMenu)(false, [\"Controller has been re-centered.\", \"Click the start button to begin calibration.\"], 0);\n        setTimeout(() => preCalibrationLoop(i, j, gamepadInfo, interval), 16);\n    }\n    else if (clickObject === \"loadCustom\") {\n        if (clickObjectNumber === 0) {\n            (0, controllermenu_js_1.setCustomInUse)(0);\n            const baseGamepadInfo = resetGamepadInfo(j);\n            (0, main_js_1.setUsingCustomControls)(i, false, baseGamepadInfo);\n            (0, controllermenu_js_1.updateControllerMenu)(false, [\"Now using default controller bindings.\", \"Click the start button to begin calibration.\"], 0);\n            setTimeout(() => preCalibrationLoop(i, j, baseGamepadInfo, interval), 16);\n        }\n        else {\n            const newCustomGamepadInfo = (0, custom_js_1.getCustomGamepadInfo)(clickObjectNumber);\n            if (newCustomGamepadInfo === null || exports.customGamepadInfoIsUsable[clickObjectNumber] !== true) {\n                sfx_js_1.sounds.deny.play();\n                setTimeout(() => preCalibrationLoop(i, j, gamepadInfo, interval), 16);\n            }\n            else {\n                const newGamepadInfo = newCustomGamepadInfo.gamepadInfo;\n                (0, controllermenu_js_1.setCustomInUse)(clickObjectNumber);\n                (0, custom_js_1.setCustomGamepadInfo)(j, newGamepadInfo);\n                (0, main_js_1.setUsingCustomControls)(i, true);\n                (0, controllermenu_js_1.updateControllerMenu)(false, [\"Now using custom bindings #\" + clickObjectNumber + \".\", \"Click the start button to begin calibration.\"], 0);\n                setTimeout(() => preCalibrationLoop(i, j, newGamepadInfo, interval), 16);\n            }\n        }\n    }\n    else if (clickObject === \"saveCustom\") {\n        if (clickObjectNumber < 1) {\n            sfx_js_1.sounds.deny.play();\n        }\n        else {\n            exports.customGamepadInfoIsUsable[clickObjectNumber] = true;\n            (0, custom_js_1.storeCustomGamepadInfo)(gamepadInfo, (0, gamepad_js_1.getGamepad)(j).id, (\"custom\" + clickObjectNumber), clickObjectNumber);\n            (0, controllermenu_js_1.setCustomInUse)(clickObjectNumber);\n        }\n        setTimeout(() => preCalibrationLoop(i, j, gamepadInfo, interval), 16);\n    }\n    else {\n        if (clickObject === \"icon\") {\n            sfx_js_1.sounds.shout8.play();\n            sfx_js_1.sounds.sword3.play();\n        }\n        setTimeout(() => preCalibrationLoop(i, j, gamepadInfo, interval), 16);\n    }\n    clickObject = null;\n}\n;\nfunction calibrationLoop(i, j, gamepadInfo, snapshots, interval) {\n    if (clickObject === null) {\n        setTimeout(() => {\n            calibrationLoop(i, j, gamepadInfo, snapshots, interval);\n        }, 16);\n    }\n    else {\n        calibrateObject(i, j, gamepadInfo, snapshots, interval);\n    }\n}\n;\nfunction calibrateObject(i, j, gamepadInfo, snapshots, interval) {\n    let texts;\n    let gamepad;\n    let totalInterval = interval + 16;\n    if (clickObject === null) {\n        console.log(\"error in function 'calibrateObject': calibration called on null object\");\n    }\n    else if (clickObject === \"icon\") {\n        sfx_js_1.sounds.shout8.play();\n        sfx_js_1.sounds.sword3.play();\n    }\n    else if (clickObject === \"exit\") {\n        sfx_js_1.sounds.menuBack.play();\n        setCalibrationInProgress(i, false);\n        (0, controllermenu_js_1.updateControllerMenu)(true, [\"Quitting calibration menu.\"], interval);\n    }\n    else if (clickObject === \"reset\") {\n        sfx_js_1.sounds.loudelectricfizz.play();\n        (0, controllermenu_js_1.setCustomInUse)(0);\n        const baseGamepadInfo = resetGamepadInfo(j);\n        (0, custom_js_1.setCustomGamepadInfo)(j, baseGamepadInfo);\n        (0, main_js_1.setUsingCustomControls)(i, false, baseGamepadInfo);\n        (0, controllermenu_js_1.updateControllerMenu)(false, [\"Controller bindings have been reset.\", \"Click the start button to begin calibration.\"], 0);\n        setTimeout(() => preCalibrationLoop(i, j, baseGamepadInfo, interval), 16);\n    }\n    else if (clickObject === \"center\") {\n        saveSound();\n        (0, main_js_1.setControllerReset)(i);\n        (0, controllermenu_js_1.updateControllerMenu)(false, [\"Controller has been re-centered.\", \"Click the start button to continue calibration.\"], 0);\n        setTimeout(() => preCalibrationLoop(i, j, gamepadInfo, interval), 16);\n        totalInterval = 16;\n    }\n    else if (clickObject === \"loadCustom\") {\n        if (clickObjectNumber === 0) {\n            (0, controllermenu_js_1.setCustomInUse)(0);\n            const baseGamepadInfo = resetGamepadInfo(j);\n            (0, main_js_1.setUsingCustomControls)(i, false, baseGamepadInfo);\n            (0, controllermenu_js_1.updateControllerMenu)(false, [\"Now using default controller bindings.\", \"Click the start button to begin calibration.\"], 0);\n            setTimeout(() => preCalibrationLoop(i, j, baseGamepadInfo, interval), 16);\n        }\n        else {\n            const newCustomGamepadInfo = (0, custom_js_1.getCustomGamepadInfo)(clickObjectNumber);\n            if (newCustomGamepadInfo === null || exports.customGamepadInfoIsUsable[clickObjectNumber] !== true) {\n                sfx_js_1.sounds.deny.play();\n                setTimeout(() => preCalibrationLoop(i, j, gamepadInfo, interval), 16);\n            }\n            else {\n                const newGamepadInfo = newCustomGamepadInfo.gamepadInfo;\n                (0, controllermenu_js_1.setCustomInUse)(clickObjectNumber);\n                (0, custom_js_1.setCustomGamepadInfo)(j, newGamepadInfo);\n                (0, main_js_1.setUsingCustomControls)(i, true);\n                (0, controllermenu_js_1.updateControllerMenu)(false, [\"Now using custom bindings #\" + clickObjectNumber + \".\", \"Click the start button to begin calibration.\"], 0);\n                setTimeout(() => preCalibrationLoop(i, j, newGamepadInfo, interval), 16);\n            }\n        }\n    }\n    else if (clickObject === \"saveCustom\") {\n        if (clickObjectNumber < 1) {\n            sfx_js_1.sounds.deny.play();\n        }\n        else {\n            exports.customGamepadInfoIsUsable[clickObjectNumber] = true;\n            (0, custom_js_1.storeCustomGamepadInfo)(gamepadInfo, (0, gamepad_js_1.getGamepad)(j).id, (\"custom\" + clickObjectNumber), clickObjectNumber);\n            (0, controllermenu_js_1.setCustomInUse)(clickObjectNumber);\n        }\n    }\n    else if (clickObject === \"l\" || clickObject === \"r\") {\n        texts = [\"Fully depress \" + clickObject.toUpperCase() + \" trigger.\", \"Keep holding down the trigger.\"];\n        const t = clickObject; // passed as-is in the closure\n        const tA = clickObject + \"A\";\n        (0, controllermenu_js_1.updateControllerMenu)(false, texts, interval);\n        setTimeout(() => {\n            saveSound();\n            gamepad = (0, gamepad_js_1.getGamepad)(j);\n            gamepadInfo[t] = scanForButton(snapshots.b0, gamepad.buttons, snapshots.a0, gamepad.axes, true);\n            gamepadInfo[tA] = scanForTrigger(snapshots.b0, gamepad.buttons, snapshots.a0, gamepad.axes);\n            (0, controllermenu_js_1.updateControllerMenu)(false, defaultTexts, 0);\n            if (t === \"l\" && gamepadInfo.lA !== null && (gamepadInfo.lA.kind === \"value\" || gamepadInfo.lA.kind === \"axis\")) {\n                gamepadInfo.isGC = Math.abs(gamepadInfo.lA.min + 0.866) < 0.01 ? true : false; // hacky but hey\n            }\n        }, interval);\n    }\n    else if (clickObject === \"ls\" || clickObject === \"cs\" || clickObject === \"dpad\") {\n        let sep = \",\";\n        if (clickObject === \"ls\") {\n            texts = [\"Move left analog stick all the way \", \"and keep it there.\"];\n        }\n        else if (clickObject === \"cs\") {\n            texts = [\"Move c-stick all the way \", \"and keep it there.\"];\n        }\n        else {\n            sep = \".\";\n            texts = [\"Press and hold d-pad \"];\n        }\n        totalInterval += 5 * interval;\n        (0, controllermenu_js_1.updateControllerMenu)(false, [texts[0] + \"left\" + sep, texts[1]], 1.5 * interval);\n        setTimeout(() => {\n            saveSound();\n            gamepad = (0, gamepad_js_1.getGamepad)(j);\n            snapshots.bL = (0, deepCopy_js_1.deepCopyArray)(true, gamepad.buttons);\n            snapshots.aL = (0, deepCopy_js_1.deepCopyArray)(true, gamepad.axes);\n            (0, controllermenu_js_1.updateControllerMenu)(false, [texts[0] + \"right\" + sep, texts[1]], 1.5 * interval);\n        }, 1.5 * interval);\n        setTimeout(() => {\n            saveSound();\n            gamepad = (0, gamepad_js_1.getGamepad)(j);\n            snapshots.bR = (0, deepCopy_js_1.deepCopyArray)(true, gamepad.buttons);\n            snapshots.aR = (0, deepCopy_js_1.deepCopyArray)(true, gamepad.axes);\n            (0, controllermenu_js_1.updateControllerMenu)(false, [texts[0] + \"up\" + sep, texts[1]], 1.5 * interval);\n        }, 3 * interval);\n        setTimeout(() => {\n            saveSound();\n            gamepad = (0, gamepad_js_1.getGamepad)(j);\n            snapshots.bU = (0, deepCopy_js_1.deepCopyArray)(true, gamepad.buttons);\n            snapshots.aU = (0, deepCopy_js_1.deepCopyArray)(true, gamepad.axes);\n            (0, controllermenu_js_1.updateControllerMenu)(false, [texts[0] + \"down\" + sep, texts[1]], 1.5 * interval);\n        }, 4.5 * interval);\n        if (clickObject === \"dpad\") {\n            setTimeout(() => {\n                saveSound();\n                gamepad = (0, gamepad_js_1.getGamepad)(j);\n                gamepadInfo.dpad = scanForDPad(snapshots.b0, snapshots.bL, snapshots.bR, snapshots.bU, gamepad.buttons, snapshots.a0, snapshots.aL, snapshots.aR, snapshots.aU, gamepad.axes);\n                (0, controllermenu_js_1.updateControllerMenu)(false, defaultTexts, 0);\n            }, 6 * interval);\n        }\n        else {\n            const clickNow = clickObject; // passed as-is in the closure\n            setTimeout(() => {\n                saveSound();\n                gamepad = (0, gamepad_js_1.getGamepad)(j);\n                gamepadInfo[clickNow] = scanForStick(snapshots.b0, snapshots.bL, snapshots.bR, snapshots.bU, gamepad.buttons, snapshots.a0, snapshots.aL, snapshots.aR, snapshots.aU, gamepad.axes);\n                (0, controllermenu_js_1.updateControllerMenu)(false, defaultTexts, 0);\n            }, 6 * interval);\n        }\n    }\n    else { // only plain buttons left now\n        const buttonName = clickObject === \"s\" ? \"start\" : clickObject.toUpperCase();\n        texts = [\"Press and hold \" + buttonName + \".\"];\n        const clickNow = clickObject;\n        (0, controllermenu_js_1.updateControllerMenu)(false, texts, interval);\n        setTimeout(() => {\n            saveSound();\n            gamepad = (0, gamepad_js_1.getGamepad)(j);\n            gamepadInfo[clickNow] = scanForButton(snapshots.b0, gamepad.buttons, snapshots.a0, gamepad.axes);\n            (0, controllermenu_js_1.updateControllerMenu)(false, defaultTexts, 0);\n        }, interval);\n    }\n    if (clickObject !== \"exit\" && clickObject !== \"reset\" && clickObject !== \"center\" && clickObject !== \"loadCustom\") {\n        if (clickObject !== null) {\n            sfx_js_1.sounds.blunthit.play();\n            setTimeout(() => {\n                (0, custom_js_1.setCustomGamepadInfo)(j, gamepadInfo);\n                calibrationLoop(i, j, gamepadInfo, snapshots, interval);\n            }, totalInterval);\n        }\n        else {\n            setTimeout(() => {\n                calibrationLoop(i, j, gamepadInfo, snapshots, interval);\n            }, totalInterval);\n        }\n    }\n    if (clickObject !== null && clickObject !== \"saveCustom\" && clickObject !== \"loadCustom\"\n        && clickObject !== \"center\" && clickObject !== \"icon\" && clickObject !== \"exit\" && clickObject !== \"reset\") {\n        (0, controllermenu_js_1.setCustomInUse)(null);\n    }\n    if (clickObject !== null) {\n        clickObject = null;\n    }\n}\nfunction scanForButton(buttons0, buttons1, axes0, axes1, onlyPressed = false) {\n    let buttonInfo = null;\n    const bLg = buttons1.length;\n    for (let i = 0; i < bLg; i++) {\n        if (detectedButtonPressed(buttons0[i].pressed, buttons1[i].pressed)) {\n            buttonInfo = { kind: \"pressed\", index: i };\n            break;\n        }\n        else if (!onlyPressed && detectedButtonValue(buttons0[i].value, buttons1[i].value)) {\n            buttonInfo = { kind: \"value\", index: i, threshold: 0.75 };\n            break;\n        }\n    }\n    if (!onlyPressed && buttonInfo === null) {\n        const aLg = axes1.length;\n        for (let j = 0; j < aLg; j++) {\n            if (detectedButtonValue(axes0[j], axes1[j])) {\n                buttonInfo = { kind: \"axis\", index: j, threshold: 0.75 };\n                break;\n            }\n        }\n    }\n    return buttonInfo;\n}\n;\nfunction detectedButtonPressed(pressed0, pressed1) {\n    return pressed1 && !pressed0;\n}\n;\nfunction detectedButtonValue(value0, value1) {\n    return (value0 < 0.25 && value1 > 0.75);\n}\n;\nfunction scanForTrigger(buttons0, buttons1, axes0, axes1) {\n    let minMax;\n    let triggerInfo = null;\n    const aLg = axes1.length;\n    for (let i = 0; i < aLg && triggerInfo === null; i++) {\n        minMax = detectedTrigger(axes0[i], axes1[i]);\n        if (minMax !== null) {\n            triggerInfo = { kind: \"axis\", index: i, min: minMax[0], max: minMax[1] };\n            break;\n        }\n    }\n    if (triggerInfo === null) {\n        const bLg = buttons1.length;\n        for (let j = 0; j < bLg && triggerInfo === null; j++) {\n            minMax = detectedTrigger(buttons0[j].value, buttons1[j].value);\n            if (minMax !== null) {\n                triggerInfo = { kind: \"value\", index: j, min: minMax[0], max: minMax[1] };\n                break;\n            }\n        }\n    }\n    return triggerInfo;\n}\nfunction detectedTrigger(axis0, axis1) {\n    if (Math.abs(axis1 - axis0) < 0.5) {\n        return null;\n    }\n    else {\n        return getMinAndMax(axis0, axis1);\n    }\n}\nfunction getMinAndMax(axis0, axis1) {\n    const min = axis0 < -0.87 ? -1 : axis0 < -0.5 ? -0.866 : axis0 > 0.87 ? 1 : axis0 > 0.5 ? 0.8667 : 0;\n    const max = min === 0 ? Math.sign(axis1) : -min;\n    return [min, max];\n}\nfunction scanForStick(buttons0, buttonsL, buttonsR, buttonsU, buttonsD, axes0, axesL, axesR, axesU, axesD) {\n    let stickInfo = null;\n    let xDiff = 0;\n    let yDiff = 0;\n    let newXDiff = 0;\n    let newYDiff = 0;\n    let xIndex;\n    let yIndex;\n    let kind;\n    let cardinals = null;\n    const aLg = axes0.length;\n    kind = \"axes\";\n    for (let i = 0; i < aLg; i++) {\n        newXDiff = axesR[i] - axesL[i];\n        if (Math.abs(newXDiff) > Math.abs(xDiff)) {\n            xDiff = newXDiff;\n            xIndex = i;\n        }\n        newYDiff = axesU[i] - axesD[i];\n        if (Math.abs(newYDiff) > Math.abs(yDiff)) {\n            yDiff = newYDiff;\n            yIndex = i;\n        }\n    }\n    if (xIndex !== undefined && yIndex !== undefined && Math.abs(xDiff) > 0.5 && Math.abs(yDiff) > 0.5) {\n        cardinals = {\n            center: new Vec2D_js_1.Vec2D(axes0[xIndex], axes0[yIndex]),\n            left: axesL[xIndex],\n            right: axesR[xIndex],\n            up: axesU[yIndex],\n            down: axesD[yIndex]\n        };\n    }\n    if (Math.abs(xDiff) < 0.5 || Math.abs(yDiff) < 0.5) {\n        const bLg = buttons0.length;\n        kind = \"value\";\n        for (let j = 0; j < bLg; j++) {\n            newXDiff = buttonsR[j].value - buttonsL[j].value;\n            if (Math.abs(newXDiff) > Math.abs(xDiff)) {\n                xDiff = newXDiff;\n                xIndex = j;\n            }\n            newYDiff = buttonsU[j].value - buttonsD[j].value;\n            if (Math.abs(newYDiff) > Math.abs(yDiff)) {\n                yDiff = newYDiff;\n                yIndex = j;\n            }\n        }\n        if (xIndex !== undefined && yIndex !== undefined && Math.abs(xDiff) > 0.5 && Math.abs(yDiff) > 0.5) {\n            cardinals = {\n                center: new Vec2D_js_1.Vec2D(buttons0[xIndex].value, buttons0[yIndex].value),\n                left: buttonsL[xIndex].value,\n                right: buttonsR[xIndex].value,\n                up: buttonsU[yIndex].value,\n                down: buttonsD[yIndex].value\n            };\n        }\n    }\n    if (xIndex !== undefined && yIndex !== undefined) {\n        if (kind === \"axes\") {\n            stickInfo = { kind: \"axes\", xIndex: xIndex, yIndex: yIndex, cardinals: cardinals };\n        }\n        else {\n            stickInfo = { kind: \"value\", xIndex: xIndex, yIndex: yIndex, cardinals: cardinals };\n        }\n    }\n    return stickInfo;\n}\nfunction scanForDPad(buttons0, buttonsL, buttonsR, buttonsU, buttonsD, axes0, axesL, axesR, axesU, axesD) {\n    let dPadInfo = null;\n    const bLg = buttons0.length;\n    let lIndex;\n    let rIndex;\n    let uIndex;\n    let dIndex;\n    for (let i = 0; i < bLg; i++) {\n        if (lIndex === undefined && detectedButtonPressed(buttons0[i].pressed, buttonsL[i].pressed)) {\n            lIndex = i;\n        }\n        if (rIndex === undefined && detectedButtonPressed(buttons0[i].pressed, buttonsR[i].pressed)) {\n            rIndex = i;\n        }\n        if (uIndex === undefined && detectedButtonPressed(buttons0[i].pressed, buttonsU[i].pressed)) {\n            uIndex = i;\n        }\n        if (dIndex === undefined && detectedButtonPressed(buttons0[i].pressed, buttonsD[i].pressed)) {\n            dIndex = i;\n        }\n    }\n    if (lIndex !== undefined && rIndex !== undefined && uIndex !== undefined && dIndex !== undefined) {\n        dPadInfo = {\n            kind: \"buttons\",\n            upIndex: uIndex, downIndex: dIndex,\n            leftIndex: lIndex, rightIndex: rIndex\n        };\n    }\n    else {\n        let xDiff = 0;\n        let yDiff = 0;\n        let newXDiff = 0;\n        let newYDiff = 0;\n        let xIndex;\n        let yIndex;\n        const aLg = axes0.length;\n        for (let i = 0; i < aLg; i++) {\n            newXDiff = axesR[i] - axesL[i];\n            if (Math.abs(newXDiff) > Math.abs(xDiff)) {\n                xDiff = newXDiff;\n                xIndex = i;\n            }\n            newYDiff = axesU[i] - axesD[i];\n            if (Math.abs(newYDiff) > Math.abs(yDiff)) {\n                yDiff = newYDiff;\n                yIndex = i;\n            }\n        }\n        if (xIndex !== undefined && yIndex !== undefined) {\n            if (Math.abs(xDiff) > 0.5 && Math.abs(yDiff) > 0.5 && xIndex !== yIndex) {\n                dPadInfo = {\n                    kind: \"2axes\",\n                    xIndex: xIndex, yIndex: yIndex,\n                    xFlip: (xDiff < 0), yFlip: (yDiff < 0)\n                };\n            }\n            else { // lol\n                dPadInfo = { kind: \"axis\", index: xIndex };\n            }\n        }\n    }\n    return dPadInfo;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/input/gamepad/gamepadCalibration.ts\n");

/***/ }),

/***/ "./src/input/input.ts":
/*!****************************!*\
  !*** ./src/input/input.ts ***!
  \****************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/*eslint indent:0*/\n// @flow\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.keyboardMap = exports.aiInputBank = exports.aiPlayer4 = exports.aiPlayer3 = exports.aiPlayer2 = exports.aiPlayer1 = exports.nullInputs = exports.nullInput = void 0;\nexports.inputData = inputData;\nexports.pollInputs = pollInputs;\nexports.showButton = showButton;\nexports.setCustomCenters = setCustomCenters;\nconst Vec2D_1 = __webpack_require__(/*! ../main/util/Vec2D */ \"./src/main/util/Vec2D.ts\");\nconst settings_1 = __webpack_require__(/*! ../settings */ \"./src/settings.ts\");\nconst main_1 = __webpack_require__(/*! ../main/main */ \"./src/main/main.ts\");\nconst retrieveGamepadInputs_1 = __webpack_require__(/*! ./gamepad/retrieveGamepadInputs */ \"./src/input/gamepad/retrieveGamepadInputs.ts\");\nconst meleeInputs_1 = __webpack_require__(/*! ./meleeInputs */ \"./src/input/meleeInputs.ts\");\nconst jquery_1 = __importDefault(__webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\"));\nconst replay_1 = __webpack_require__(/*! ../main/replay */ \"./src/main/replay.ts\");\nconst streamclient_1 = __webpack_require__(/*! ../main/multiplayer/streamclient */ \"./src/main/multiplayer/streamclient.js\");\nfunction inputData(list = [false, false, false, false, false, false, false, false, false, false, false, false, 0, 0, 0, 0, 0, 0]) {\n    return {\n        a: list[0],\n        b: list[1],\n        x: list[2],\n        y: list[3],\n        z: list[4],\n        r: list[5],\n        l: list[6],\n        s: list[7],\n        du: list[8],\n        dr: list[9],\n        dd: list[10],\n        dl: list[11],\n        lsX: (0, meleeInputs_1.deaden)(list[12]),\n        lsY: (0, meleeInputs_1.deaden)(list[13]),\n        csX: (0, meleeInputs_1.deaden)(list[14]),\n        csY: (0, meleeInputs_1.deaden)(list[15]),\n        lA: list[16],\n        rA: list[17],\n        rawX: list[12],\n        rawY: list[13],\n        rawcsX: list[14],\n        rawcsY: list[15]\n    };\n}\n;\nconst nullInput = () => inputData();\nexports.nullInput = nullInput;\nconst nullInputs = () => [inputData(),\n    inputData(),\n    inputData(),\n    inputData(),\n    inputData(),\n    inputData(),\n    inputData(),\n    inputData()\n];\nexports.nullInputs = nullInputs;\nexports.aiPlayer1 = [inputData(),\n    inputData(),\n    inputData(),\n    inputData(),\n    inputData(),\n    inputData(),\n    inputData(),\n    inputData()\n];\nexports.aiPlayer2 = [inputData(),\n    inputData(),\n    inputData(),\n    inputData(),\n    inputData(),\n    inputData(),\n    inputData(),\n    inputData()\n];\nexports.aiPlayer3 = [inputData(),\n    inputData(),\n    inputData(),\n    inputData(),\n    inputData(),\n    inputData(),\n    inputData(),\n    inputData()\n];\nexports.aiPlayer4 = [inputData(),\n    inputData(),\n    inputData(),\n    inputData(),\n    inputData(),\n    inputData(),\n    inputData(),\n    inputData()\n];\nexports.aiInputBank = [exports.aiPlayer1, exports.aiPlayer2, exports.aiPlayer3, exports.aiPlayer4];\n// should be able to move out the \"frameByFrame\" aspect of the following function\n// it is only used to make z button mean \"left trigger value = 0.35\" + \"A = true\".\nfunction pollInputs(gameMode, frameByFrame, controllerInfo, playerSlot, controllerIndex, keys, playertype) {\n    // input is the input for player i in the current frame\n    let input = (0, exports.nullInput)(); // initialise with default values\n    if (replay_1.replayActive) {\n        input = pollReplayInputs(gameMode, controllerInfo, playerSlot, controllerIndex, frameByFrame);\n    }\n    else if (playertype === 1 && gameMode === 3) {\n        return exports.aiInputBank[playerSlot][0];\n    }\n    else if (controllerInfo === \"keyboard\") { // keyboard controls\n        input = pollKeyboardInputs(gameMode, frameByFrame, keys);\n        // } else if (playertype === 2 || controllerInfo === 99) { // np: online play?\n        //   input = pollNetworkInputs(gameMode, controllerInfo, playerSlot, controllerIndex, frameByFrame);\n    }\n    else if (playertype === 0) {\n        input = pollGamepadInputs(gameMode, controllerInfo, playerSlot, controllerIndex, frameByFrame);\n    }\n    return input;\n}\nfunction pollNetworkInputs(gameMode, controllerType, playerSlot, controllerIndex, frameByFrame) {\n    return (0, streamclient_1.retrieveNetworkInputs)(playerSlot, controllerIndex);\n}\nfunction pollReplayInputs(gameMode, controllerType, playerSlot, controllerIndex, frameByFrame) {\n    return (0, replay_1.retrieveReplayInputs)(playerSlot, controllerIndex);\n}\nfunction pollKeyboardInputs(gameMode, frameByFrame, keys) {\n    const input = (0, exports.nullInput)(); // initialise with default values\n    let stickR = 1;\n    let stickL = 1;\n    let stickU = 1;\n    let stickD = 1;\n    if (gameMode === 3 || gameMode === 5) {\n        stickR = settings_1.keyMap.lstick.ranges[1];\n        stickL = settings_1.keyMap.lstick.ranges[2];\n        stickU = settings_1.keyMap.lstick.ranges[0];\n        stickD = settings_1.keyMap.lstick.ranges[3];\n    }\n    let lstickX = (keys[settings_1.keyMap.lstick.right[0]] || keys[settings_1.keyMap.lstick.right[1]]) ? ((keys[settings_1.keyMap.lstick.left[0]] ||\n        keys[settings_1.keyMap.lstick.left[1]]) ? 0 : stickR) : ((keys[settings_1.keyMap.lstick.left[0]] || keys[settings_1.keyMap.lstick.left[1]]) ?\n        -stickL : 0);\n    let lstickY = (keys[settings_1.keyMap.lstick.up[0]] || keys[settings_1.keyMap.lstick.up[1]]) ? ((keys[settings_1.keyMap.lstick.down[0]] || keys[settings_1.keyMap.lstick.down[1]]) ? 0 : stickU) : ((keys[settings_1.keyMap.lstick.down[0]] || keys[settings_1.keyMap.lstick.down[1]]) ? -stickD : 0);\n    let lAnalog = (keys[settings_1.keyMap.shoulders.lAnalog[0]] || keys[settings_1.keyMap.shoulders.lAnalog[1]]) ? settings_1.keyMap.shoulders.ranges[0] : 0;\n    let rAnalog = (keys[settings_1.keyMap.shoulders.rAnalog[0]] || keys[settings_1.keyMap.shoulders.rAnalog[1]]) ? settings_1.keyMap.shoulders.ranges[1] : 0;\n    if (gameMode === 3 || gameMode === 5) {\n        for (let j = 0; j < 5; j++) {\n            if (keys[settings_1.keyMap.lstick.modifiers[j][0]]) {\n                lstickX *= settings_1.keyMap.lstick.modifiers[j][1];\n                lstickY *= settings_1.keyMap.lstick.modifiers[j][2];\n            }\n            if (keys[settings_1.keyMap.shoulders.modifiers[j][0]]) {\n                lAnalog *= settings_1.keyMap.shoulders.modifiers[j][1];\n                rAnalog *= settings_1.keyMap.shoulders.modifiers[j][2];\n            }\n        }\n    }\n    lstickX = Math.sign(lstickX) * Math.min(1, Math.abs(lstickX));\n    lstickY = Math.sign(lstickY) * Math.min(1, Math.abs(lstickY));\n    lAnalog = Math.min(1, Math.abs(lAnalog));\n    rAnalog = Math.min(1, Math.abs(rAnalog));\n    const cstickX = (keys[settings_1.keyMap.cstick.right[0]] || keys[settings_1.keyMap.cstick.right[1]]) ? ((keys[settings_1.keyMap.cstick.left[0]] ||\n        keys[settings_1.keyMap.cstick.left[1]]) ? 0 : 1) : ((keys[settings_1.keyMap.cstick.left[0]] || keys[settings_1.keyMap.cstick.left[1]]) ? -1 :\n        0);\n    const cstickY = (keys[settings_1.keyMap.cstick.up[0]] || keys[settings_1.keyMap.cstick.up[1]]) ? ((keys[settings_1.keyMap.cstick.down[0]] || keys[settings_1.keyMap.cstick.down[1]]) ? 0 : 1) : ((keys[settings_1.keyMap.cstick.down[0]] || keys[settings_1.keyMap.cstick.down[1]]) ? -1 : 0);\n    const rescaledLStick = (0, meleeInputs_1.tasRescale)(lstickX, lstickY, true);\n    input.lsX = (0, meleeInputs_1.deaden)(rescaledLStick[0]);\n    input.lsY = (0, meleeInputs_1.deaden)(rescaledLStick[1]);\n    input.rawX = rescaledLStick[0];\n    input.rawY = rescaledLStick[1];\n    const rescaledCStick = (0, meleeInputs_1.tasRescale)(cstickX, cstickY, true);\n    input.csX = (0, meleeInputs_1.deaden)(rescaledCStick[0]);\n    input.csY = (0, meleeInputs_1.deaden)(rescaledCStick[1]);\n    input.rawcsX = rescaledCStick[0];\n    input.rawcsY = rescaledCStick[1];\n    input.lA = lAnalog;\n    input.rA = rAnalog;\n    input.s = keys[settings_1.keyMap.s[0]] || keys[settings_1.keyMap.s[1]];\n    input.x = keys[settings_1.keyMap.x[0]] || keys[settings_1.keyMap.x[1]];\n    input.a = keys[settings_1.keyMap.a[0]] || keys[settings_1.keyMap.a[1]];\n    input.b = keys[settings_1.keyMap.b[0]] || keys[settings_1.keyMap.b[1]];\n    input.y = keys[settings_1.keyMap.y[0]] || keys[settings_1.keyMap.y[1]];\n    input.r = keys[settings_1.keyMap.r[0]] || keys[settings_1.keyMap.r[1]];\n    input.l = keys[settings_1.keyMap.l[0]] || keys[settings_1.keyMap.l[1]];\n    input.z = keys[settings_1.keyMap.z[0]] || keys[settings_1.keyMap.z[1]];\n    input.dl = keys[settings_1.keyMap.dl[0]];\n    input.dd = keys[settings_1.keyMap.dd[0]];\n    input.dr = keys[settings_1.keyMap.dr[0]];\n    input.du = keys[settings_1.keyMap.du[0]];\n    if (!frameByFrame && gameMode !== 4 && gameMode !== 14) { // not in target builder, calibration screen, or frame by frame mode\n        if (input.z) {\n            if (input.lA < 0.35) {\n                input.lA = 0.35;\n            }\n            input.a = true;\n        }\n    }\n    if (input.l) {\n        input.lA = 1;\n    }\n    if (input.r) {\n        input.rA = 1;\n    }\n    return input;\n}\nfunction pollGamepadInputs(gameMode, gamepadInfo, playerSlot, controllerIndex, frameByFrame) {\n    const input = (0, exports.nullInput)();\n    if (navigator.getGamepads === undefined) {\n        return input;\n    }\n    const gamepads = navigator.getGamepads();\n    const gamepad = gamepads[controllerIndex];\n    if (gamepad === null || gamepad === undefined) {\n        return input;\n    }\n    // -------------------------------------------------------\n    // analog sticks\n    const fixedGamepad = gamepad;\n    // {\n    //   buttons: gamepad.buttons as GamepadButton[],\n    //   axes: gamepad.axes as number[],\n    //   id: gamepad.id\n    // };\n    const lsVec = (0, retrieveGamepadInputs_1.stickValue)(fixedGamepad, gamepadInfo, \"ls\");\n    const csVec = (0, retrieveGamepadInputs_1.stickValue)(fixedGamepad, gamepadInfo, \"cs\");\n    const isGC = gamepadInfo.isGC;\n    let lsCardinals = null;\n    if (gamepadInfo.ls !== null) {\n        lsCardinals = gamepadInfo.ls.cardinals;\n    }\n    let csCardinals = null;\n    if (gamepadInfo.cs !== null) {\n        csCardinals = gamepadInfo.cs.cardinals;\n    }\n    const lsticks = (0, meleeInputs_1.scaleToMeleeAxes)(lsVec.x // x-axis data\n    , lsVec.y // y-axis data\n    , isGC, lsCardinals, custcent[playerSlot].ls.x // x-axis \"custom center\" offset\n    , custcent[playerSlot].ls.y // y-axis \"custom center\" offset\n    );\n    const csticks = (0, meleeInputs_1.scaleToMeleeAxes)(csVec.x, csVec.y, isGC, csCardinals, custcent[playerSlot].cs.x, custcent[playerSlot].cs.y);\n    input.lsX = (0, meleeInputs_1.deaden)(lsticks[0]);\n    input.lsY = (0, meleeInputs_1.deaden)(lsticks[1]);\n    input.csX = (0, meleeInputs_1.deaden)(csticks[0]);\n    input.csY = (0, meleeInputs_1.deaden)(csticks[1]);\n    input.rawX = lsticks[0];\n    input.rawY = lsticks[1];\n    input.rawcsX = csticks[0];\n    input.rawcsY = csticks[1];\n    // -------------------------------------------------------\n    // buttons\n    input.s = (0, retrieveGamepadInputs_1.buttonState)(fixedGamepad, gamepadInfo, \"s\");\n    input.x = (0, retrieveGamepadInputs_1.buttonState)(fixedGamepad, gamepadInfo, \"x\");\n    input.a = (0, retrieveGamepadInputs_1.buttonState)(fixedGamepad, gamepadInfo, \"a\");\n    input.b = (0, retrieveGamepadInputs_1.buttonState)(fixedGamepad, gamepadInfo, \"b\");\n    input.y = (0, retrieveGamepadInputs_1.buttonState)(fixedGamepad, gamepadInfo, \"y\");\n    input.z = (0, retrieveGamepadInputs_1.buttonState)(fixedGamepad, gamepadInfo, \"z\");\n    // -------------------------------------------------------\n    // triggers\n    input.l = (0, retrieveGamepadInputs_1.buttonState)(fixedGamepad, gamepadInfo, \"l\");\n    input.r = (0, retrieveGamepadInputs_1.buttonState)(fixedGamepad, gamepadInfo, \"r\");\n    if (gamepadInfo.lA !== null) {\n        const lA = gamepadInfo.lA;\n        if (lA.kind === \"light\") {\n            input.lA = (0, retrieveGamepadInputs_1.triggerValue)(fixedGamepad, gamepadInfo, \"lA\");\n        }\n        else {\n            input.lA = (0, meleeInputs_1.scaleToGCTrigger)((0, retrieveGamepadInputs_1.triggerValue)(fixedGamepad, gamepadInfo, \"lA\") // raw trigger value\n            , -lA.min - custcent[playerSlot].l // offset\n            , lA.max - lA.min // scaling\n            );\n        }\n    }\n    if (gamepadInfo.rA !== null) {\n        const rA = gamepadInfo.rA;\n        if (rA.kind === \"light\") {\n            input.rA = (0, retrieveGamepadInputs_1.triggerValue)(fixedGamepad, gamepadInfo, \"rA\");\n        }\n        else {\n            input.rA = (0, meleeInputs_1.scaleToGCTrigger)((0, retrieveGamepadInputs_1.triggerValue)(fixedGamepad, gamepadInfo, \"rA\") // raw trigger value\n            , -rA.min - custcent[playerSlot].r // offset\n            , rA.max - rA.min // scaling\n            );\n        }\n    }\n    if (main_1.controllerResetCountdowns[playerSlot] === 0) {\n        setCustomCenters(playerSlot, lsVec, csVec, input.lA, input.rA);\n    }\n    if (!frameByFrame && gameMode !== 4 && gameMode !== 14) { // not in target builder or calibration screen\n        if (input.z) {\n            if (input.lA < 0.35) {\n                input.lA = 0.35;\n            }\n            input.a = true;\n        }\n    }\n    if (gameMode !== 14) {\n        if (input.l) {\n            input.lA = 1;\n        }\n        if (input.r) {\n            input.rA = 1;\n        }\n        if (input.lA > 0.95) {\n            input.l = true;\n        }\n        if (input.rA > 0.95) {\n            input.r = true;\n        }\n    }\n    // -------------------------------------------------------\n    // d-pad\n    const dPadData = (0, retrieveGamepadInputs_1.dPadState)(fixedGamepad, gamepadInfo);\n    input.dl = dPadData.left;\n    input.dd = dPadData.down;\n    input.dr = dPadData.right;\n    input.du = dPadData.up;\n    return input;\n}\n;\nfunction showButton(i, but, boolean) {\n    if (boolean) {\n        (0, jquery_1.default)(\"#\" + i + \"button\" + but).show();\n    }\n    else {\n        (0, jquery_1.default)(\"#\" + i + \"button\" + but).hide();\n    }\n}\n;\nexports.keyboardMap = [\n    [102, 186],\n    [101, 76],\n    [100, 75],\n    [104, 79],\n    [103, 73],\n    [105, 80],\n    [107, 192, 222],\n    [109, 219], 71, 78, 66, 86\n];\nconst customCenters = function () {\n    this.ls = new Vec2D_1.Vec2D(0, 0);\n    this.cs = new Vec2D_1.Vec2D(0, 0);\n    this.l = 0;\n    this.r = 0;\n};\nconst custcent = [new customCenters, new customCenters, new customCenters, new customCenters];\nfunction setCustomCenters(i, ls0, cs0, l0, r0) {\n    custcent[i].ls = ls0;\n    custcent[i].cs = cs0;\n    custcent[i].l = l0;\n    custcent[i].r = r0;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5wdXQvaW5wdXQudHMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsbUJBQW1CLEdBQUcsbUJBQW1CLEdBQUcsaUJBQWlCLEdBQUcsaUJBQWlCLEdBQUcsaUJBQWlCLEdBQUcsaUJBQWlCLEdBQUcsa0JBQWtCLEdBQUcsaUJBQWlCO0FBQ2xLLGlCQUFpQjtBQUNqQixrQkFBa0I7QUFDbEIsa0JBQWtCO0FBQ2xCLHdCQUF3QjtBQUN4QixnQkFBZ0IsbUJBQU8sQ0FBQyxvREFBb0I7QUFDNUMsbUJBQW1CLG1CQUFPLENBQUMsc0NBQWE7QUFDeEMsZUFBZSxtQkFBTyxDQUFDLHdDQUFjO0FBQ3JDLGdDQUFnQyxtQkFBTyxDQUFDLHFGQUFpQztBQUN6RSxzQkFBc0IsbUJBQU8sQ0FBQyxpREFBZTtBQUM3QyxpQ0FBaUMsbUJBQU8sQ0FBQyxvREFBUTtBQUNqRCxpQkFBaUIsbUJBQU8sQ0FBQyw0Q0FBZ0I7QUFDekMsdUJBQXVCLG1CQUFPLENBQUMsZ0ZBQWtDO0FBQ2pFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQixpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBDQUEwQztBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEM7QUFDOUM7QUFDQSxhQUFhLHNEQUFzRDtBQUNuRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNENBQTRDO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsT0FBTztBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4REFBOEQ7QUFDOUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4REFBOEQ7QUFDOUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZWxlZWxpZ2h0Ly4vc3JjL2lucHV0L2lucHV0LnRzPzhhOWUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKmVzbGludCBpbmRlbnQ6MCovXG4vLyBAZmxvd1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5rZXlib2FyZE1hcCA9IGV4cG9ydHMuYWlJbnB1dEJhbmsgPSBleHBvcnRzLmFpUGxheWVyNCA9IGV4cG9ydHMuYWlQbGF5ZXIzID0gZXhwb3J0cy5haVBsYXllcjIgPSBleHBvcnRzLmFpUGxheWVyMSA9IGV4cG9ydHMubnVsbElucHV0cyA9IGV4cG9ydHMubnVsbElucHV0ID0gdm9pZCAwO1xuZXhwb3J0cy5pbnB1dERhdGEgPSBpbnB1dERhdGE7XG5leHBvcnRzLnBvbGxJbnB1dHMgPSBwb2xsSW5wdXRzO1xuZXhwb3J0cy5zaG93QnV0dG9uID0gc2hvd0J1dHRvbjtcbmV4cG9ydHMuc2V0Q3VzdG9tQ2VudGVycyA9IHNldEN1c3RvbUNlbnRlcnM7XG5jb25zdCBWZWMyRF8xID0gcmVxdWlyZShcIi4uL21haW4vdXRpbC9WZWMyRFwiKTtcbmNvbnN0IHNldHRpbmdzXzEgPSByZXF1aXJlKFwiLi4vc2V0dGluZ3NcIik7XG5jb25zdCBtYWluXzEgPSByZXF1aXJlKFwiLi4vbWFpbi9tYWluXCIpO1xuY29uc3QgcmV0cmlldmVHYW1lcGFkSW5wdXRzXzEgPSByZXF1aXJlKFwiLi9nYW1lcGFkL3JldHJpZXZlR2FtZXBhZElucHV0c1wiKTtcbmNvbnN0IG1lbGVlSW5wdXRzXzEgPSByZXF1aXJlKFwiLi9tZWxlZUlucHV0c1wiKTtcbmNvbnN0IGpxdWVyeV8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCJqcXVlcnlcIikpO1xuY29uc3QgcmVwbGF5XzEgPSByZXF1aXJlKFwiLi4vbWFpbi9yZXBsYXlcIik7XG5jb25zdCBzdHJlYW1jbGllbnRfMSA9IHJlcXVpcmUoXCIuLi9tYWluL211bHRpcGxheWVyL3N0cmVhbWNsaWVudFwiKTtcbmZ1bmN0aW9uIGlucHV0RGF0YShsaXN0ID0gW2ZhbHNlLCBmYWxzZSwgZmFsc2UsIGZhbHNlLCBmYWxzZSwgZmFsc2UsIGZhbHNlLCBmYWxzZSwgZmFsc2UsIGZhbHNlLCBmYWxzZSwgZmFsc2UsIDAsIDAsIDAsIDAsIDAsIDBdKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgYTogbGlzdFswXSxcbiAgICAgICAgYjogbGlzdFsxXSxcbiAgICAgICAgeDogbGlzdFsyXSxcbiAgICAgICAgeTogbGlzdFszXSxcbiAgICAgICAgejogbGlzdFs0XSxcbiAgICAgICAgcjogbGlzdFs1XSxcbiAgICAgICAgbDogbGlzdFs2XSxcbiAgICAgICAgczogbGlzdFs3XSxcbiAgICAgICAgZHU6IGxpc3RbOF0sXG4gICAgICAgIGRyOiBsaXN0WzldLFxuICAgICAgICBkZDogbGlzdFsxMF0sXG4gICAgICAgIGRsOiBsaXN0WzExXSxcbiAgICAgICAgbHNYOiAoMCwgbWVsZWVJbnB1dHNfMS5kZWFkZW4pKGxpc3RbMTJdKSxcbiAgICAgICAgbHNZOiAoMCwgbWVsZWVJbnB1dHNfMS5kZWFkZW4pKGxpc3RbMTNdKSxcbiAgICAgICAgY3NYOiAoMCwgbWVsZWVJbnB1dHNfMS5kZWFkZW4pKGxpc3RbMTRdKSxcbiAgICAgICAgY3NZOiAoMCwgbWVsZWVJbnB1dHNfMS5kZWFkZW4pKGxpc3RbMTVdKSxcbiAgICAgICAgbEE6IGxpc3RbMTZdLFxuICAgICAgICByQTogbGlzdFsxN10sXG4gICAgICAgIHJhd1g6IGxpc3RbMTJdLFxuICAgICAgICByYXdZOiBsaXN0WzEzXSxcbiAgICAgICAgcmF3Y3NYOiBsaXN0WzE0XSxcbiAgICAgICAgcmF3Y3NZOiBsaXN0WzE1XVxuICAgIH07XG59XG47XG5jb25zdCBudWxsSW5wdXQgPSAoKSA9PiBpbnB1dERhdGEoKTtcbmV4cG9ydHMubnVsbElucHV0ID0gbnVsbElucHV0O1xuY29uc3QgbnVsbElucHV0cyA9ICgpID0+IFtpbnB1dERhdGEoKSxcbiAgICBpbnB1dERhdGEoKSxcbiAgICBpbnB1dERhdGEoKSxcbiAgICBpbnB1dERhdGEoKSxcbiAgICBpbnB1dERhdGEoKSxcbiAgICBpbnB1dERhdGEoKSxcbiAgICBpbnB1dERhdGEoKSxcbiAgICBpbnB1dERhdGEoKVxuXTtcbmV4cG9ydHMubnVsbElucHV0cyA9IG51bGxJbnB1dHM7XG5leHBvcnRzLmFpUGxheWVyMSA9IFtpbnB1dERhdGEoKSxcbiAgICBpbnB1dERhdGEoKSxcbiAgICBpbnB1dERhdGEoKSxcbiAgICBpbnB1dERhdGEoKSxcbiAgICBpbnB1dERhdGEoKSxcbiAgICBpbnB1dERhdGEoKSxcbiAgICBpbnB1dERhdGEoKSxcbiAgICBpbnB1dERhdGEoKVxuXTtcbmV4cG9ydHMuYWlQbGF5ZXIyID0gW2lucHV0RGF0YSgpLFxuICAgIGlucHV0RGF0YSgpLFxuICAgIGlucHV0RGF0YSgpLFxuICAgIGlucHV0RGF0YSgpLFxuICAgIGlucHV0RGF0YSgpLFxuICAgIGlucHV0RGF0YSgpLFxuICAgIGlucHV0RGF0YSgpLFxuICAgIGlucHV0RGF0YSgpXG5dO1xuZXhwb3J0cy5haVBsYXllcjMgPSBbaW5wdXREYXRhKCksXG4gICAgaW5wdXREYXRhKCksXG4gICAgaW5wdXREYXRhKCksXG4gICAgaW5wdXREYXRhKCksXG4gICAgaW5wdXREYXRhKCksXG4gICAgaW5wdXREYXRhKCksXG4gICAgaW5wdXREYXRhKCksXG4gICAgaW5wdXREYXRhKClcbl07XG5leHBvcnRzLmFpUGxheWVyNCA9IFtpbnB1dERhdGEoKSxcbiAgICBpbnB1dERhdGEoKSxcbiAgICBpbnB1dERhdGEoKSxcbiAgICBpbnB1dERhdGEoKSxcbiAgICBpbnB1dERhdGEoKSxcbiAgICBpbnB1dERhdGEoKSxcbiAgICBpbnB1dERhdGEoKSxcbiAgICBpbnB1dERhdGEoKVxuXTtcbmV4cG9ydHMuYWlJbnB1dEJhbmsgPSBbZXhwb3J0cy5haVBsYXllcjEsIGV4cG9ydHMuYWlQbGF5ZXIyLCBleHBvcnRzLmFpUGxheWVyMywgZXhwb3J0cy5haVBsYXllcjRdO1xuLy8gc2hvdWxkIGJlIGFibGUgdG8gbW92ZSBvdXQgdGhlIFwiZnJhbWVCeUZyYW1lXCIgYXNwZWN0IG9mIHRoZSBmb2xsb3dpbmcgZnVuY3Rpb25cbi8vIGl0IGlzIG9ubHkgdXNlZCB0byBtYWtlIHogYnV0dG9uIG1lYW4gXCJsZWZ0IHRyaWdnZXIgdmFsdWUgPSAwLjM1XCIgKyBcIkEgPSB0cnVlXCIuXG5mdW5jdGlvbiBwb2xsSW5wdXRzKGdhbWVNb2RlLCBmcmFtZUJ5RnJhbWUsIGNvbnRyb2xsZXJJbmZvLCBwbGF5ZXJTbG90LCBjb250cm9sbGVySW5kZXgsIGtleXMsIHBsYXllcnR5cGUpIHtcbiAgICAvLyBpbnB1dCBpcyB0aGUgaW5wdXQgZm9yIHBsYXllciBpIGluIHRoZSBjdXJyZW50IGZyYW1lXG4gICAgbGV0IGlucHV0ID0gKDAsIGV4cG9ydHMubnVsbElucHV0KSgpOyAvLyBpbml0aWFsaXNlIHdpdGggZGVmYXVsdCB2YWx1ZXNcbiAgICBpZiAocmVwbGF5XzEucmVwbGF5QWN0aXZlKSB7XG4gICAgICAgIGlucHV0ID0gcG9sbFJlcGxheUlucHV0cyhnYW1lTW9kZSwgY29udHJvbGxlckluZm8sIHBsYXllclNsb3QsIGNvbnRyb2xsZXJJbmRleCwgZnJhbWVCeUZyYW1lKTtcbiAgICB9XG4gICAgZWxzZSBpZiAocGxheWVydHlwZSA9PT0gMSAmJiBnYW1lTW9kZSA9PT0gMykge1xuICAgICAgICByZXR1cm4gZXhwb3J0cy5haUlucHV0QmFua1twbGF5ZXJTbG90XVswXTtcbiAgICB9XG4gICAgZWxzZSBpZiAoY29udHJvbGxlckluZm8gPT09IFwia2V5Ym9hcmRcIikgeyAvLyBrZXlib2FyZCBjb250cm9sc1xuICAgICAgICBpbnB1dCA9IHBvbGxLZXlib2FyZElucHV0cyhnYW1lTW9kZSwgZnJhbWVCeUZyYW1lLCBrZXlzKTtcbiAgICAgICAgLy8gfSBlbHNlIGlmIChwbGF5ZXJ0eXBlID09PSAyIHx8IGNvbnRyb2xsZXJJbmZvID09PSA5OSkgeyAvLyBucDogb25saW5lIHBsYXk/XG4gICAgICAgIC8vICAgaW5wdXQgPSBwb2xsTmV0d29ya0lucHV0cyhnYW1lTW9kZSwgY29udHJvbGxlckluZm8sIHBsYXllclNsb3QsIGNvbnRyb2xsZXJJbmRleCwgZnJhbWVCeUZyYW1lKTtcbiAgICB9XG4gICAgZWxzZSBpZiAocGxheWVydHlwZSA9PT0gMCkge1xuICAgICAgICBpbnB1dCA9IHBvbGxHYW1lcGFkSW5wdXRzKGdhbWVNb2RlLCBjb250cm9sbGVySW5mbywgcGxheWVyU2xvdCwgY29udHJvbGxlckluZGV4LCBmcmFtZUJ5RnJhbWUpO1xuICAgIH1cbiAgICByZXR1cm4gaW5wdXQ7XG59XG5mdW5jdGlvbiBwb2xsTmV0d29ya0lucHV0cyhnYW1lTW9kZSwgY29udHJvbGxlclR5cGUsIHBsYXllclNsb3QsIGNvbnRyb2xsZXJJbmRleCwgZnJhbWVCeUZyYW1lKSB7XG4gICAgcmV0dXJuICgwLCBzdHJlYW1jbGllbnRfMS5yZXRyaWV2ZU5ldHdvcmtJbnB1dHMpKHBsYXllclNsb3QsIGNvbnRyb2xsZXJJbmRleCk7XG59XG5mdW5jdGlvbiBwb2xsUmVwbGF5SW5wdXRzKGdhbWVNb2RlLCBjb250cm9sbGVyVHlwZSwgcGxheWVyU2xvdCwgY29udHJvbGxlckluZGV4LCBmcmFtZUJ5RnJhbWUpIHtcbiAgICByZXR1cm4gKDAsIHJlcGxheV8xLnJldHJpZXZlUmVwbGF5SW5wdXRzKShwbGF5ZXJTbG90LCBjb250cm9sbGVySW5kZXgpO1xufVxuZnVuY3Rpb24gcG9sbEtleWJvYXJkSW5wdXRzKGdhbWVNb2RlLCBmcmFtZUJ5RnJhbWUsIGtleXMpIHtcbiAgICBjb25zdCBpbnB1dCA9ICgwLCBleHBvcnRzLm51bGxJbnB1dCkoKTsgLy8gaW5pdGlhbGlzZSB3aXRoIGRlZmF1bHQgdmFsdWVzXG4gICAgbGV0IHN0aWNrUiA9IDE7XG4gICAgbGV0IHN0aWNrTCA9IDE7XG4gICAgbGV0IHN0aWNrVSA9IDE7XG4gICAgbGV0IHN0aWNrRCA9IDE7XG4gICAgaWYgKGdhbWVNb2RlID09PSAzIHx8IGdhbWVNb2RlID09PSA1KSB7XG4gICAgICAgIHN0aWNrUiA9IHNldHRpbmdzXzEua2V5TWFwLmxzdGljay5yYW5nZXNbMV07XG4gICAgICAgIHN0aWNrTCA9IHNldHRpbmdzXzEua2V5TWFwLmxzdGljay5yYW5nZXNbMl07XG4gICAgICAgIHN0aWNrVSA9IHNldHRpbmdzXzEua2V5TWFwLmxzdGljay5yYW5nZXNbMF07XG4gICAgICAgIHN0aWNrRCA9IHNldHRpbmdzXzEua2V5TWFwLmxzdGljay5yYW5nZXNbM107XG4gICAgfVxuICAgIGxldCBsc3RpY2tYID0gKGtleXNbc2V0dGluZ3NfMS5rZXlNYXAubHN0aWNrLnJpZ2h0WzBdXSB8fCBrZXlzW3NldHRpbmdzXzEua2V5TWFwLmxzdGljay5yaWdodFsxXV0pID8gKChrZXlzW3NldHRpbmdzXzEua2V5TWFwLmxzdGljay5sZWZ0WzBdXSB8fFxuICAgICAgICBrZXlzW3NldHRpbmdzXzEua2V5TWFwLmxzdGljay5sZWZ0WzFdXSkgPyAwIDogc3RpY2tSKSA6ICgoa2V5c1tzZXR0aW5nc18xLmtleU1hcC5sc3RpY2subGVmdFswXV0gfHwga2V5c1tzZXR0aW5nc18xLmtleU1hcC5sc3RpY2subGVmdFsxXV0pID9cbiAgICAgICAgLXN0aWNrTCA6IDApO1xuICAgIGxldCBsc3RpY2tZID0gKGtleXNbc2V0dGluZ3NfMS5rZXlNYXAubHN0aWNrLnVwWzBdXSB8fCBrZXlzW3NldHRpbmdzXzEua2V5TWFwLmxzdGljay51cFsxXV0pID8gKChrZXlzW3NldHRpbmdzXzEua2V5TWFwLmxzdGljay5kb3duWzBdXSB8fCBrZXlzW3NldHRpbmdzXzEua2V5TWFwLmxzdGljay5kb3duWzFdXSkgPyAwIDogc3RpY2tVKSA6ICgoa2V5c1tzZXR0aW5nc18xLmtleU1hcC5sc3RpY2suZG93blswXV0gfHwga2V5c1tzZXR0aW5nc18xLmtleU1hcC5sc3RpY2suZG93blsxXV0pID8gLXN0aWNrRCA6IDApO1xuICAgIGxldCBsQW5hbG9nID0gKGtleXNbc2V0dGluZ3NfMS5rZXlNYXAuc2hvdWxkZXJzLmxBbmFsb2dbMF1dIHx8IGtleXNbc2V0dGluZ3NfMS5rZXlNYXAuc2hvdWxkZXJzLmxBbmFsb2dbMV1dKSA/IHNldHRpbmdzXzEua2V5TWFwLnNob3VsZGVycy5yYW5nZXNbMF0gOiAwO1xuICAgIGxldCByQW5hbG9nID0gKGtleXNbc2V0dGluZ3NfMS5rZXlNYXAuc2hvdWxkZXJzLnJBbmFsb2dbMF1dIHx8IGtleXNbc2V0dGluZ3NfMS5rZXlNYXAuc2hvdWxkZXJzLnJBbmFsb2dbMV1dKSA/IHNldHRpbmdzXzEua2V5TWFwLnNob3VsZGVycy5yYW5nZXNbMV0gOiAwO1xuICAgIGlmIChnYW1lTW9kZSA9PT0gMyB8fCBnYW1lTW9kZSA9PT0gNSkge1xuICAgICAgICBmb3IgKGxldCBqID0gMDsgaiA8IDU7IGorKykge1xuICAgICAgICAgICAgaWYgKGtleXNbc2V0dGluZ3NfMS5rZXlNYXAubHN0aWNrLm1vZGlmaWVyc1tqXVswXV0pIHtcbiAgICAgICAgICAgICAgICBsc3RpY2tYICo9IHNldHRpbmdzXzEua2V5TWFwLmxzdGljay5tb2RpZmllcnNbal1bMV07XG4gICAgICAgICAgICAgICAgbHN0aWNrWSAqPSBzZXR0aW5nc18xLmtleU1hcC5sc3RpY2subW9kaWZpZXJzW2pdWzJdO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGtleXNbc2V0dGluZ3NfMS5rZXlNYXAuc2hvdWxkZXJzLm1vZGlmaWVyc1tqXVswXV0pIHtcbiAgICAgICAgICAgICAgICBsQW5hbG9nICo9IHNldHRpbmdzXzEua2V5TWFwLnNob3VsZGVycy5tb2RpZmllcnNbal1bMV07XG4gICAgICAgICAgICAgICAgckFuYWxvZyAqPSBzZXR0aW5nc18xLmtleU1hcC5zaG91bGRlcnMubW9kaWZpZXJzW2pdWzJdO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIGxzdGlja1ggPSBNYXRoLnNpZ24obHN0aWNrWCkgKiBNYXRoLm1pbigxLCBNYXRoLmFicyhsc3RpY2tYKSk7XG4gICAgbHN0aWNrWSA9IE1hdGguc2lnbihsc3RpY2tZKSAqIE1hdGgubWluKDEsIE1hdGguYWJzKGxzdGlja1kpKTtcbiAgICBsQW5hbG9nID0gTWF0aC5taW4oMSwgTWF0aC5hYnMobEFuYWxvZykpO1xuICAgIHJBbmFsb2cgPSBNYXRoLm1pbigxLCBNYXRoLmFicyhyQW5hbG9nKSk7XG4gICAgY29uc3QgY3N0aWNrWCA9IChrZXlzW3NldHRpbmdzXzEua2V5TWFwLmNzdGljay5yaWdodFswXV0gfHwga2V5c1tzZXR0aW5nc18xLmtleU1hcC5jc3RpY2sucmlnaHRbMV1dKSA/ICgoa2V5c1tzZXR0aW5nc18xLmtleU1hcC5jc3RpY2subGVmdFswXV0gfHxcbiAgICAgICAga2V5c1tzZXR0aW5nc18xLmtleU1hcC5jc3RpY2subGVmdFsxXV0pID8gMCA6IDEpIDogKChrZXlzW3NldHRpbmdzXzEua2V5TWFwLmNzdGljay5sZWZ0WzBdXSB8fCBrZXlzW3NldHRpbmdzXzEua2V5TWFwLmNzdGljay5sZWZ0WzFdXSkgPyAtMSA6XG4gICAgICAgIDApO1xuICAgIGNvbnN0IGNzdGlja1kgPSAoa2V5c1tzZXR0aW5nc18xLmtleU1hcC5jc3RpY2sudXBbMF1dIHx8IGtleXNbc2V0dGluZ3NfMS5rZXlNYXAuY3N0aWNrLnVwWzFdXSkgPyAoKGtleXNbc2V0dGluZ3NfMS5rZXlNYXAuY3N0aWNrLmRvd25bMF1dIHx8IGtleXNbc2V0dGluZ3NfMS5rZXlNYXAuY3N0aWNrLmRvd25bMV1dKSA/IDAgOiAxKSA6ICgoa2V5c1tzZXR0aW5nc18xLmtleU1hcC5jc3RpY2suZG93blswXV0gfHwga2V5c1tzZXR0aW5nc18xLmtleU1hcC5jc3RpY2suZG93blsxXV0pID8gLTEgOiAwKTtcbiAgICBjb25zdCByZXNjYWxlZExTdGljayA9ICgwLCBtZWxlZUlucHV0c18xLnRhc1Jlc2NhbGUpKGxzdGlja1gsIGxzdGlja1ksIHRydWUpO1xuICAgIGlucHV0LmxzWCA9ICgwLCBtZWxlZUlucHV0c18xLmRlYWRlbikocmVzY2FsZWRMU3RpY2tbMF0pO1xuICAgIGlucHV0LmxzWSA9ICgwLCBtZWxlZUlucHV0c18xLmRlYWRlbikocmVzY2FsZWRMU3RpY2tbMV0pO1xuICAgIGlucHV0LnJhd1ggPSByZXNjYWxlZExTdGlja1swXTtcbiAgICBpbnB1dC5yYXdZID0gcmVzY2FsZWRMU3RpY2tbMV07XG4gICAgY29uc3QgcmVzY2FsZWRDU3RpY2sgPSAoMCwgbWVsZWVJbnB1dHNfMS50YXNSZXNjYWxlKShjc3RpY2tYLCBjc3RpY2tZLCB0cnVlKTtcbiAgICBpbnB1dC5jc1ggPSAoMCwgbWVsZWVJbnB1dHNfMS5kZWFkZW4pKHJlc2NhbGVkQ1N0aWNrWzBdKTtcbiAgICBpbnB1dC5jc1kgPSAoMCwgbWVsZWVJbnB1dHNfMS5kZWFkZW4pKHJlc2NhbGVkQ1N0aWNrWzFdKTtcbiAgICBpbnB1dC5yYXdjc1ggPSByZXNjYWxlZENTdGlja1swXTtcbiAgICBpbnB1dC5yYXdjc1kgPSByZXNjYWxlZENTdGlja1sxXTtcbiAgICBpbnB1dC5sQSA9IGxBbmFsb2c7XG4gICAgaW5wdXQuckEgPSByQW5hbG9nO1xuICAgIGlucHV0LnMgPSBrZXlzW3NldHRpbmdzXzEua2V5TWFwLnNbMF1dIHx8IGtleXNbc2V0dGluZ3NfMS5rZXlNYXAuc1sxXV07XG4gICAgaW5wdXQueCA9IGtleXNbc2V0dGluZ3NfMS5rZXlNYXAueFswXV0gfHwga2V5c1tzZXR0aW5nc18xLmtleU1hcC54WzFdXTtcbiAgICBpbnB1dC5hID0ga2V5c1tzZXR0aW5nc18xLmtleU1hcC5hWzBdXSB8fCBrZXlzW3NldHRpbmdzXzEua2V5TWFwLmFbMV1dO1xuICAgIGlucHV0LmIgPSBrZXlzW3NldHRpbmdzXzEua2V5TWFwLmJbMF1dIHx8IGtleXNbc2V0dGluZ3NfMS5rZXlNYXAuYlsxXV07XG4gICAgaW5wdXQueSA9IGtleXNbc2V0dGluZ3NfMS5rZXlNYXAueVswXV0gfHwga2V5c1tzZXR0aW5nc18xLmtleU1hcC55WzFdXTtcbiAgICBpbnB1dC5yID0ga2V5c1tzZXR0aW5nc18xLmtleU1hcC5yWzBdXSB8fCBrZXlzW3NldHRpbmdzXzEua2V5TWFwLnJbMV1dO1xuICAgIGlucHV0LmwgPSBrZXlzW3NldHRpbmdzXzEua2V5TWFwLmxbMF1dIHx8IGtleXNbc2V0dGluZ3NfMS5rZXlNYXAubFsxXV07XG4gICAgaW5wdXQueiA9IGtleXNbc2V0dGluZ3NfMS5rZXlNYXAuelswXV0gfHwga2V5c1tzZXR0aW5nc18xLmtleU1hcC56WzFdXTtcbiAgICBpbnB1dC5kbCA9IGtleXNbc2V0dGluZ3NfMS5rZXlNYXAuZGxbMF1dO1xuICAgIGlucHV0LmRkID0ga2V5c1tzZXR0aW5nc18xLmtleU1hcC5kZFswXV07XG4gICAgaW5wdXQuZHIgPSBrZXlzW3NldHRpbmdzXzEua2V5TWFwLmRyWzBdXTtcbiAgICBpbnB1dC5kdSA9IGtleXNbc2V0dGluZ3NfMS5rZXlNYXAuZHVbMF1dO1xuICAgIGlmICghZnJhbWVCeUZyYW1lICYmIGdhbWVNb2RlICE9PSA0ICYmIGdhbWVNb2RlICE9PSAxNCkgeyAvLyBub3QgaW4gdGFyZ2V0IGJ1aWxkZXIsIGNhbGlicmF0aW9uIHNjcmVlbiwgb3IgZnJhbWUgYnkgZnJhbWUgbW9kZVxuICAgICAgICBpZiAoaW5wdXQueikge1xuICAgICAgICAgICAgaWYgKGlucHV0LmxBIDwgMC4zNSkge1xuICAgICAgICAgICAgICAgIGlucHV0LmxBID0gMC4zNTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlucHV0LmEgPSB0cnVlO1xuICAgICAgICB9XG4gICAgfVxuICAgIGlmIChpbnB1dC5sKSB7XG4gICAgICAgIGlucHV0LmxBID0gMTtcbiAgICB9XG4gICAgaWYgKGlucHV0LnIpIHtcbiAgICAgICAgaW5wdXQuckEgPSAxO1xuICAgIH1cbiAgICByZXR1cm4gaW5wdXQ7XG59XG5mdW5jdGlvbiBwb2xsR2FtZXBhZElucHV0cyhnYW1lTW9kZSwgZ2FtZXBhZEluZm8sIHBsYXllclNsb3QsIGNvbnRyb2xsZXJJbmRleCwgZnJhbWVCeUZyYW1lKSB7XG4gICAgY29uc3QgaW5wdXQgPSAoMCwgZXhwb3J0cy5udWxsSW5wdXQpKCk7XG4gICAgaWYgKG5hdmlnYXRvci5nZXRHYW1lcGFkcyA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJldHVybiBpbnB1dDtcbiAgICB9XG4gICAgY29uc3QgZ2FtZXBhZHMgPSBuYXZpZ2F0b3IuZ2V0R2FtZXBhZHMoKTtcbiAgICBjb25zdCBnYW1lcGFkID0gZ2FtZXBhZHNbY29udHJvbGxlckluZGV4XTtcbiAgICBpZiAoZ2FtZXBhZCA9PT0gbnVsbCB8fCBnYW1lcGFkID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmV0dXJuIGlucHV0O1xuICAgIH1cbiAgICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAgLy8gYW5hbG9nIHN0aWNrc1xuICAgIGNvbnN0IGZpeGVkR2FtZXBhZCA9IGdhbWVwYWQ7XG4gICAgLy8ge1xuICAgIC8vICAgYnV0dG9uczogZ2FtZXBhZC5idXR0b25zIGFzIEdhbWVwYWRCdXR0b25bXSxcbiAgICAvLyAgIGF4ZXM6IGdhbWVwYWQuYXhlcyBhcyBudW1iZXJbXSxcbiAgICAvLyAgIGlkOiBnYW1lcGFkLmlkXG4gICAgLy8gfTtcbiAgICBjb25zdCBsc1ZlYyA9ICgwLCByZXRyaWV2ZUdhbWVwYWRJbnB1dHNfMS5zdGlja1ZhbHVlKShmaXhlZEdhbWVwYWQsIGdhbWVwYWRJbmZvLCBcImxzXCIpO1xuICAgIGNvbnN0IGNzVmVjID0gKDAsIHJldHJpZXZlR2FtZXBhZElucHV0c18xLnN0aWNrVmFsdWUpKGZpeGVkR2FtZXBhZCwgZ2FtZXBhZEluZm8sIFwiY3NcIik7XG4gICAgY29uc3QgaXNHQyA9IGdhbWVwYWRJbmZvLmlzR0M7XG4gICAgbGV0IGxzQ2FyZGluYWxzID0gbnVsbDtcbiAgICBpZiAoZ2FtZXBhZEluZm8ubHMgIT09IG51bGwpIHtcbiAgICAgICAgbHNDYXJkaW5hbHMgPSBnYW1lcGFkSW5mby5scy5jYXJkaW5hbHM7XG4gICAgfVxuICAgIGxldCBjc0NhcmRpbmFscyA9IG51bGw7XG4gICAgaWYgKGdhbWVwYWRJbmZvLmNzICE9PSBudWxsKSB7XG4gICAgICAgIGNzQ2FyZGluYWxzID0gZ2FtZXBhZEluZm8uY3MuY2FyZGluYWxzO1xuICAgIH1cbiAgICBjb25zdCBsc3RpY2tzID0gKDAsIG1lbGVlSW5wdXRzXzEuc2NhbGVUb01lbGVlQXhlcykobHNWZWMueCAvLyB4LWF4aXMgZGF0YVxuICAgICwgbHNWZWMueSAvLyB5LWF4aXMgZGF0YVxuICAgICwgaXNHQywgbHNDYXJkaW5hbHMsIGN1c3RjZW50W3BsYXllclNsb3RdLmxzLnggLy8geC1heGlzIFwiY3VzdG9tIGNlbnRlclwiIG9mZnNldFxuICAgICwgY3VzdGNlbnRbcGxheWVyU2xvdF0ubHMueSAvLyB5LWF4aXMgXCJjdXN0b20gY2VudGVyXCIgb2Zmc2V0XG4gICAgKTtcbiAgICBjb25zdCBjc3RpY2tzID0gKDAsIG1lbGVlSW5wdXRzXzEuc2NhbGVUb01lbGVlQXhlcykoY3NWZWMueCwgY3NWZWMueSwgaXNHQywgY3NDYXJkaW5hbHMsIGN1c3RjZW50W3BsYXllclNsb3RdLmNzLngsIGN1c3RjZW50W3BsYXllclNsb3RdLmNzLnkpO1xuICAgIGlucHV0LmxzWCA9ICgwLCBtZWxlZUlucHV0c18xLmRlYWRlbikobHN0aWNrc1swXSk7XG4gICAgaW5wdXQubHNZID0gKDAsIG1lbGVlSW5wdXRzXzEuZGVhZGVuKShsc3RpY2tzWzFdKTtcbiAgICBpbnB1dC5jc1ggPSAoMCwgbWVsZWVJbnB1dHNfMS5kZWFkZW4pKGNzdGlja3NbMF0pO1xuICAgIGlucHV0LmNzWSA9ICgwLCBtZWxlZUlucHV0c18xLmRlYWRlbikoY3N0aWNrc1sxXSk7XG4gICAgaW5wdXQucmF3WCA9IGxzdGlja3NbMF07XG4gICAgaW5wdXQucmF3WSA9IGxzdGlja3NbMV07XG4gICAgaW5wdXQucmF3Y3NYID0gY3N0aWNrc1swXTtcbiAgICBpbnB1dC5yYXdjc1kgPSBjc3RpY2tzWzFdO1xuICAgIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICAvLyBidXR0b25zXG4gICAgaW5wdXQucyA9ICgwLCByZXRyaWV2ZUdhbWVwYWRJbnB1dHNfMS5idXR0b25TdGF0ZSkoZml4ZWRHYW1lcGFkLCBnYW1lcGFkSW5mbywgXCJzXCIpO1xuICAgIGlucHV0LnggPSAoMCwgcmV0cmlldmVHYW1lcGFkSW5wdXRzXzEuYnV0dG9uU3RhdGUpKGZpeGVkR2FtZXBhZCwgZ2FtZXBhZEluZm8sIFwieFwiKTtcbiAgICBpbnB1dC5hID0gKDAsIHJldHJpZXZlR2FtZXBhZElucHV0c18xLmJ1dHRvblN0YXRlKShmaXhlZEdhbWVwYWQsIGdhbWVwYWRJbmZvLCBcImFcIik7XG4gICAgaW5wdXQuYiA9ICgwLCByZXRyaWV2ZUdhbWVwYWRJbnB1dHNfMS5idXR0b25TdGF0ZSkoZml4ZWRHYW1lcGFkLCBnYW1lcGFkSW5mbywgXCJiXCIpO1xuICAgIGlucHV0LnkgPSAoMCwgcmV0cmlldmVHYW1lcGFkSW5wdXRzXzEuYnV0dG9uU3RhdGUpKGZpeGVkR2FtZXBhZCwgZ2FtZXBhZEluZm8sIFwieVwiKTtcbiAgICBpbnB1dC56ID0gKDAsIHJldHJpZXZlR2FtZXBhZElucHV0c18xLmJ1dHRvblN0YXRlKShmaXhlZEdhbWVwYWQsIGdhbWVwYWRJbmZvLCBcInpcIik7XG4gICAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgIC8vIHRyaWdnZXJzXG4gICAgaW5wdXQubCA9ICgwLCByZXRyaWV2ZUdhbWVwYWRJbnB1dHNfMS5idXR0b25TdGF0ZSkoZml4ZWRHYW1lcGFkLCBnYW1lcGFkSW5mbywgXCJsXCIpO1xuICAgIGlucHV0LnIgPSAoMCwgcmV0cmlldmVHYW1lcGFkSW5wdXRzXzEuYnV0dG9uU3RhdGUpKGZpeGVkR2FtZXBhZCwgZ2FtZXBhZEluZm8sIFwiclwiKTtcbiAgICBpZiAoZ2FtZXBhZEluZm8ubEEgIT09IG51bGwpIHtcbiAgICAgICAgY29uc3QgbEEgPSBnYW1lcGFkSW5mby5sQTtcbiAgICAgICAgaWYgKGxBLmtpbmQgPT09IFwibGlnaHRcIikge1xuICAgICAgICAgICAgaW5wdXQubEEgPSAoMCwgcmV0cmlldmVHYW1lcGFkSW5wdXRzXzEudHJpZ2dlclZhbHVlKShmaXhlZEdhbWVwYWQsIGdhbWVwYWRJbmZvLCBcImxBXCIpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgaW5wdXQubEEgPSAoMCwgbWVsZWVJbnB1dHNfMS5zY2FsZVRvR0NUcmlnZ2VyKSgoMCwgcmV0cmlldmVHYW1lcGFkSW5wdXRzXzEudHJpZ2dlclZhbHVlKShmaXhlZEdhbWVwYWQsIGdhbWVwYWRJbmZvLCBcImxBXCIpIC8vIHJhdyB0cmlnZ2VyIHZhbHVlXG4gICAgICAgICAgICAsIC1sQS5taW4gLSBjdXN0Y2VudFtwbGF5ZXJTbG90XS5sIC8vIG9mZnNldFxuICAgICAgICAgICAgLCBsQS5tYXggLSBsQS5taW4gLy8gc2NhbGluZ1xuICAgICAgICAgICAgKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBpZiAoZ2FtZXBhZEluZm8uckEgIT09IG51bGwpIHtcbiAgICAgICAgY29uc3QgckEgPSBnYW1lcGFkSW5mby5yQTtcbiAgICAgICAgaWYgKHJBLmtpbmQgPT09IFwibGlnaHRcIikge1xuICAgICAgICAgICAgaW5wdXQuckEgPSAoMCwgcmV0cmlldmVHYW1lcGFkSW5wdXRzXzEudHJpZ2dlclZhbHVlKShmaXhlZEdhbWVwYWQsIGdhbWVwYWRJbmZvLCBcInJBXCIpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgaW5wdXQuckEgPSAoMCwgbWVsZWVJbnB1dHNfMS5zY2FsZVRvR0NUcmlnZ2VyKSgoMCwgcmV0cmlldmVHYW1lcGFkSW5wdXRzXzEudHJpZ2dlclZhbHVlKShmaXhlZEdhbWVwYWQsIGdhbWVwYWRJbmZvLCBcInJBXCIpIC8vIHJhdyB0cmlnZ2VyIHZhbHVlXG4gICAgICAgICAgICAsIC1yQS5taW4gLSBjdXN0Y2VudFtwbGF5ZXJTbG90XS5yIC8vIG9mZnNldFxuICAgICAgICAgICAgLCByQS5tYXggLSByQS5taW4gLy8gc2NhbGluZ1xuICAgICAgICAgICAgKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBpZiAobWFpbl8xLmNvbnRyb2xsZXJSZXNldENvdW50ZG93bnNbcGxheWVyU2xvdF0gPT09IDApIHtcbiAgICAgICAgc2V0Q3VzdG9tQ2VudGVycyhwbGF5ZXJTbG90LCBsc1ZlYywgY3NWZWMsIGlucHV0LmxBLCBpbnB1dC5yQSk7XG4gICAgfVxuICAgIGlmICghZnJhbWVCeUZyYW1lICYmIGdhbWVNb2RlICE9PSA0ICYmIGdhbWVNb2RlICE9PSAxNCkgeyAvLyBub3QgaW4gdGFyZ2V0IGJ1aWxkZXIgb3IgY2FsaWJyYXRpb24gc2NyZWVuXG4gICAgICAgIGlmIChpbnB1dC56KSB7XG4gICAgICAgICAgICBpZiAoaW5wdXQubEEgPCAwLjM1KSB7XG4gICAgICAgICAgICAgICAgaW5wdXQubEEgPSAwLjM1O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaW5wdXQuYSA9IHRydWU7XG4gICAgICAgIH1cbiAgICB9XG4gICAgaWYgKGdhbWVNb2RlICE9PSAxNCkge1xuICAgICAgICBpZiAoaW5wdXQubCkge1xuICAgICAgICAgICAgaW5wdXQubEEgPSAxO1xuICAgICAgICB9XG4gICAgICAgIGlmIChpbnB1dC5yKSB7XG4gICAgICAgICAgICBpbnB1dC5yQSA9IDE7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGlucHV0LmxBID4gMC45NSkge1xuICAgICAgICAgICAgaW5wdXQubCA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGlucHV0LnJBID4gMC45NSkge1xuICAgICAgICAgICAgaW5wdXQuciA9IHRydWU7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgIC8vIGQtcGFkXG4gICAgY29uc3QgZFBhZERhdGEgPSAoMCwgcmV0cmlldmVHYW1lcGFkSW5wdXRzXzEuZFBhZFN0YXRlKShmaXhlZEdhbWVwYWQsIGdhbWVwYWRJbmZvKTtcbiAgICBpbnB1dC5kbCA9IGRQYWREYXRhLmxlZnQ7XG4gICAgaW5wdXQuZGQgPSBkUGFkRGF0YS5kb3duO1xuICAgIGlucHV0LmRyID0gZFBhZERhdGEucmlnaHQ7XG4gICAgaW5wdXQuZHUgPSBkUGFkRGF0YS51cDtcbiAgICByZXR1cm4gaW5wdXQ7XG59XG47XG5mdW5jdGlvbiBzaG93QnV0dG9uKGksIGJ1dCwgYm9vbGVhbikge1xuICAgIGlmIChib29sZWFuKSB7XG4gICAgICAgICgwLCBqcXVlcnlfMS5kZWZhdWx0KShcIiNcIiArIGkgKyBcImJ1dHRvblwiICsgYnV0KS5zaG93KCk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICAoMCwganF1ZXJ5XzEuZGVmYXVsdCkoXCIjXCIgKyBpICsgXCJidXR0b25cIiArIGJ1dCkuaGlkZSgpO1xuICAgIH1cbn1cbjtcbmV4cG9ydHMua2V5Ym9hcmRNYXAgPSBbXG4gICAgWzEwMiwgMTg2XSxcbiAgICBbMTAxLCA3Nl0sXG4gICAgWzEwMCwgNzVdLFxuICAgIFsxMDQsIDc5XSxcbiAgICBbMTAzLCA3M10sXG4gICAgWzEwNSwgODBdLFxuICAgIFsxMDcsIDE5MiwgMjIyXSxcbiAgICBbMTA5LCAyMTldLCA3MSwgNzgsIDY2LCA4NlxuXTtcbmNvbnN0IGN1c3RvbUNlbnRlcnMgPSBmdW5jdGlvbiAoKSB7XG4gICAgdGhpcy5scyA9IG5ldyBWZWMyRF8xLlZlYzJEKDAsIDApO1xuICAgIHRoaXMuY3MgPSBuZXcgVmVjMkRfMS5WZWMyRCgwLCAwKTtcbiAgICB0aGlzLmwgPSAwO1xuICAgIHRoaXMuciA9IDA7XG59O1xuY29uc3QgY3VzdGNlbnQgPSBbbmV3IGN1c3RvbUNlbnRlcnMsIG5ldyBjdXN0b21DZW50ZXJzLCBuZXcgY3VzdG9tQ2VudGVycywgbmV3IGN1c3RvbUNlbnRlcnNdO1xuZnVuY3Rpb24gc2V0Q3VzdG9tQ2VudGVycyhpLCBsczAsIGNzMCwgbDAsIHIwKSB7XG4gICAgY3VzdGNlbnRbaV0ubHMgPSBsczA7XG4gICAgY3VzdGNlbnRbaV0uY3MgPSBjczA7XG4gICAgY3VzdGNlbnRbaV0ubCA9IGwwO1xuICAgIGN1c3RjZW50W2ldLnIgPSByMDtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/input/input.ts\n");

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ /* webpack/runtime/getFullHash */
/******/ (() => {
/******/ 	__webpack_require__.h = () => ("4ec2aa276fc329f382d9")
/******/ })();
/******/ 
/******/ }
);