"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdatemeleelight"]("main",{

/***/ "./src/stages/stagerender.ts":
/*!***********************************!*\
  !*** ./src/stages/stagerender.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.BgStar = exports.backgroundType = exports.boxFillBG = exports.boxFill = void 0;\nexports.drawStageInit = drawStageInit;\nexports.calculateDamageWallColours = calculateDamageWallColours;\nexports.drawDamageLine = drawDamageLine;\nexports.drawStage = drawStage;\nexports.setBackgroundType = setBackgroundType;\nexports.drawBackgroundInit = drawBackgroundInit;\nexports.drawBackground = drawBackground;\nexports.drawTunnel = drawTunnel;\nexports.drawStars = drawStars;\nconst transparency_1 = __webpack_require__(/*! main/vfx/transparency */ \"./src/main/vfx/transparency.js\");\nconst main_1 = __webpack_require__(/*! ../main/main */ \"./src/main/main.ts\");\nconst render_1 = __webpack_require__(/*! ../main/render */ \"./src/main/render.ts\");\nconst activeStage_1 = __webpack_require__(/*! ../stages/activeStage */ \"./src/stages/activeStage.ts\");\nconst Vec2D_1 = __webpack_require__(/*! ../main/util/Vec2D */ \"./src/main/util/Vec2D.ts\");\nconst linAlg_1 = __webpack_require__(/*! ../main/linAlg */ \"./src/main/linAlg.ts\");\nconst bgPos = [[-30, 500, 300, 500, 900, 500, 1230, 450, 358], [-30, 400, 300, 400, 900, 400, 1230, 350, 179]];\nconst direction = [[1, -1, 1, -1, 1, -1, 1, -1, 1], [-1, 1, -1, 1, -1, 1, -1, 1, -1]];\nexports.boxFill = \"rgba(0, 0, 0, 0.1)\";\nexports.boxFillBG = \"rgba(0, 0, 0, 0.1)\";\nconst bgStars = [];\nfor (let p = 0; p < 20; p++) {\n    bgStars[p] = new BgStar();\n    bgStars[p].pos = new Vec2D_1.Vec2D(600 + 100 * Math.random() * bgStars[p].velocity.x, 375 + 100 * Math.random() * bgStars[p].velocity.y);\n}\nlet bgSparkle = 3;\nconst gridGrad = \"rgba(94,173,255,0.2)\";\nconst circleSize = [];\nfor (let i = 0; i < 5; i++) {\n    circleSize[i] = i * 40;\n}\nlet ang = 0;\nexports.backgroundType = 0;\nconst scandypattern = new Image();\nscandypattern.src = \"assets/christmas/scandypattern.png\";\nconst fabric = new Image();\nfabric.src = \"assets/christmas/fabric.png\";\nconst randall = [new Image(), new Image(), new Image()];\nrandall[0].src = \"assets/stage/randall1.png\";\nrandall[1].src = \"assets/stage/randall2.png\";\nrandall[2].src = \"assets/stage/randall3.png\";\nlet randallTimer = 0;\nfunction drawStageInit() {\n    main_1.fg1.strokeStyle = \"#db80cc\";\n    main_1.fg1.lineWidth = 1;\n    for (let j = 0; j < activeStage_1.activeStage.ground.length; j++) {\n        main_1.fg1.beginPath();\n        main_1.fg1.moveTo((activeStage_1.activeStage.ground[j][0].x * activeStage_1.activeStage.scale) + activeStage_1.activeStage.offset[0], (activeStage_1.activeStage.ground[j][0].y * -activeStage_1.activeStage.scale) + activeStage_1.activeStage.offset[1]);\n        main_1.fg1.lineTo((activeStage_1.activeStage.ground[j][1].x * activeStage_1.activeStage.scale) + activeStage_1.activeStage.offset[0], (activeStage_1.activeStage.ground[j][1].y * -activeStage_1.activeStage.scale) + activeStage_1.activeStage.offset[1]);\n        main_1.fg1.closePath();\n        main_1.fg1.stroke();\n    }\n    main_1.fg1.strokeStyle = \"#ed6767\";\n    for (let j = 0; j < activeStage_1.activeStage.ceiling.length; j++) {\n        main_1.fg1.beginPath();\n        main_1.fg1.moveTo((activeStage_1.activeStage.ceiling[j][0].x * activeStage_1.activeStage.scale) + activeStage_1.activeStage.offset[0], (activeStage_1.activeStage.ceiling[j][0].y * -activeStage_1.activeStage.scale) + activeStage_1.activeStage.offset[1]);\n        main_1.fg1.lineTo((activeStage_1.activeStage.ceiling[j][1].x * activeStage_1.activeStage.scale) + activeStage_1.activeStage.offset[0], (activeStage_1.activeStage.ceiling[j][1].y * -activeStage_1.activeStage.scale) + activeStage_1.activeStage.offset[1]);\n        main_1.fg1.closePath();\n        main_1.fg1.stroke();\n    }\n    main_1.fg1.strokeStyle = \"#4794c6\";\n    for (let j = 0; j < activeStage_1.activeStage.platform.length; j++) {\n        if (activeStage_1.activeStage.movingPlats === null || activeStage_1.activeStage.movingPlats === undefined || activeStage_1.activeStage.movingPlats.indexOf(j) === -1) { // not a moving platform\n            main_1.fg1.beginPath();\n            main_1.fg1.moveTo((activeStage_1.activeStage.platform[j][0].x * activeStage_1.activeStage.scale) + activeStage_1.activeStage.offset[0], (activeStage_1.activeStage.platform[j][0].y * -activeStage_1.activeStage.scale) + activeStage_1.activeStage.offset[1]);\n            main_1.fg1.lineTo((activeStage_1.activeStage.platform[j][1].x * activeStage_1.activeStage.scale) + activeStage_1.activeStage.offset[0], (activeStage_1.activeStage.platform[j][1].y * -activeStage_1.activeStage.scale) + activeStage_1.activeStage.offset[1]);\n            main_1.fg1.closePath();\n            main_1.fg1.stroke();\n        }\n    }\n    main_1.fg1.strokeStyle = \"#47c648\";\n    for (let k = 0; k < activeStage_1.activeStage.wallL.length; k++) {\n        main_1.fg1.beginPath();\n        main_1.fg1.moveTo((activeStage_1.activeStage.wallL[k][0].x * activeStage_1.activeStage.scale) + activeStage_1.activeStage.offset[0], (activeStage_1.activeStage.wallL[k][0].y * -activeStage_1.activeStage.scale) + activeStage_1.activeStage.offset[1]);\n        main_1.fg1.lineTo((activeStage_1.activeStage.wallL[k][1].x * activeStage_1.activeStage.scale) + activeStage_1.activeStage.offset[0], (activeStage_1.activeStage.wallL[k][1].y * -activeStage_1.activeStage.scale) + activeStage_1.activeStage.offset[1]);\n        main_1.fg1.closePath();\n        main_1.fg1.stroke();\n    }\n    main_1.fg1.strokeStyle = \"#9867de\";\n    for (let l = 0; l < activeStage_1.activeStage.wallR.length; l++) {\n        main_1.fg1.beginPath();\n        main_1.fg1.moveTo((activeStage_1.activeStage.wallR[l][0].x * activeStage_1.activeStage.scale) + activeStage_1.activeStage.offset[0], (activeStage_1.activeStage.wallR[l][0].y * -activeStage_1.activeStage.scale) + activeStage_1.activeStage.offset[1]);\n        main_1.fg1.lineTo((activeStage_1.activeStage.wallR[l][1].x * activeStage_1.activeStage.scale) + activeStage_1.activeStage.offset[0], (activeStage_1.activeStage.wallR[l][1].y * -activeStage_1.activeStage.scale) + activeStage_1.activeStage.offset[1]);\n        main_1.fg1.closePath();\n        main_1.fg1.stroke();\n    }\n    main_1.fg1.strokeStyle = \"#E7A44C\";\n    main_1.fg1.lineWidth = 2;\n    for (let i = 0; i < activeStage_1.activeStage.ledge.length; i++) {\n        const e = activeStage_1.activeStage.ledge[i];\n        const pA = activeStage_1.activeStage[e[0]][e[1]][e[2]];\n        const pB = activeStage_1.activeStage[e[0]][e[1]][1 - e[2]];\n        const ang = Math.atan2((pB.y - pA.y), (pB.x - pA.x));\n        const magnitude = (0, linAlg_1.euclideanDist)(pA, pB);\n        const length = Math.min(0.4 * magnitude, 20 / activeStage_1.activeStage.scale);\n        const pC = new Vec2D_1.Vec2D(pA.x + length * Math.cos(ang), pA.y + length * Math.sin(ang));\n        main_1.fg1.beginPath();\n        main_1.fg1.moveTo((pA.x * activeStage_1.activeStage.scale) + activeStage_1.activeStage.offset[0], (pA.y * -activeStage_1.activeStage.scale) + activeStage_1.activeStage.offset[1]);\n        main_1.fg1.lineTo((pC.x * activeStage_1.activeStage.scale) + activeStage_1.activeStage.offset[0], (pC.y * -activeStage_1.activeStage.scale) + activeStage_1.activeStage.offset[1]);\n        main_1.fg1.closePath();\n        main_1.fg1.stroke();\n    }\n}\n;\nconst swirlTimer = 0;\nconst swirlSwitch = false;\nconst wallColour = [\"rgb(255,0,40)\", \"rgb(0,255,255)\", \"rgb(125,125,125)\", \"rgb(125,50,255)\"];\nfunction wallColourFromDamageType(damageType) {\n    if (damageType === \"fire\") {\n        return wallColour[0];\n    }\n    else if (damageType === \"electric\") {\n        return wallColour[1];\n    }\n    else if (damageType === \"slash\") {\n        return wallColour[2];\n    }\n    else if (damageType === \"darkness\") {\n        return wallColour[3];\n    }\n    else {\n        return \"rgb(0,50,180)\";\n    }\n}\n;\nlet wallCycle = 0;\nfunction calculateDamageWallColours() {\n    let a = 0;\n    if (wallCycle < 240) {\n        wallCycle++;\n        if (wallCycle > 120) {\n            a = 240 - wallCycle;\n        }\n        else {\n            a = wallCycle;\n        }\n    }\n    else {\n        wallCycle = 0;\n    }\n    const n = Math.round(255 * a / 120);\n    wallColour[0] = \"rgb(255,\" + n + \",40)\";\n    wallColour[1] = \"rgb(\" + n + \",255,255)\";\n    const m = Math.round(125 + n / 2);\n    wallColour[2] = \"rgb(\" + m + \",\" + m + \",\" + m + \")\";\n    wallColour[3] = \"rgb(\" + Math.round(125 - n / 3) + \",50,\" + Math.round(255 - n / 3) + \")\";\n}\nfunction drawDamageLine(type, can, stage) {\n    for (let i = 0; i < stage[type].length; i++) {\n        const surfaceProperties = stage[type][i][2];\n        if (surfaceProperties !== undefined && surfaceProperties.damageType !== null) {\n            can.strokeStyle = wallColourFromDamageType(surfaceProperties.damageType);\n            can.beginPath();\n            can.moveTo((stage[type][i][0].x * stage.scale) + stage.offset[0], (stage[type][i][0].y * -stage.scale) + stage.offset[1]);\n            can.lineTo((stage[type][i][1].x * stage.scale) + stage.offset[0], (stage[type][i][1].y * -stage.scale) + stage.offset[1]);\n            can.stroke();\n        }\n    }\n}\nfunction drawStage() {\n    calculateDamageWallColours();\n    if (activeStage_1.activeStage.name === \"ystory\") {\n        // Randall\n        randallTimer++;\n        if (randallTimer === 30) {\n            randallTimer = 0;\n        }\n        main_1.bg2.drawImage(randall[Math.floor(randallTimer / 10)], (activeStage_1.activeStage.platform[0][0].x * activeStage_1.activeStage.scale) + activeStage_1.activeStage.offset[0] - 20, (activeStage_1.activeStage.platform[0][0].y * -activeStage_1.activeStage.scale) + activeStage_1.activeStage.offset[1] - 20, 100, 100);\n    }\n    else if (activeStage_1.activeStage.movingPlats !== null && activeStage_1.activeStage.movingPlats !== undefined && activeStage_1.activeStage.movingPlats.length !== 0) {\n        main_1.fg2.strokeStyle = \"#4794c6\";\n        for (let i = 0; i < activeStage_1.activeStage.movingPlats.length; i++) {\n            if (activeStage_1.activeStage.name !== \"fountain\" || activeStage_1.activeStage.platform[activeStage_1.activeStage.movingPlats[i]][0].y > 0) {\n                main_1.fg2.beginPath();\n                main_1.fg2.moveTo((activeStage_1.activeStage.platform[activeStage_1.activeStage.movingPlats[i]][0].x * activeStage_1.activeStage.scale) + activeStage_1.activeStage.offset[0], (activeStage_1.activeStage.platform[activeStage_1.activeStage.movingPlats[i]][0].y * -activeStage_1.activeStage.scale) + activeStage_1.activeStage.offset[1]);\n                main_1.fg2.lineTo((activeStage_1.activeStage.platform[activeStage_1.activeStage.movingPlats[i]][1].x * activeStage_1.activeStage.scale) + activeStage_1.activeStage.offset[0], (activeStage_1.activeStage.platform[activeStage_1.activeStage.movingPlats[i]][1].y * -activeStage_1.activeStage.scale) + activeStage_1.activeStage.offset[1]);\n                main_1.fg2.closePath();\n                main_1.fg2.stroke();\n            }\n        }\n    }\n    main_1.fg2.fillStyle = exports.boxFill;\n    if (activeStage_1.activeStage.box !== null && activeStage_1.activeStage.box !== undefined) {\n        for (let j = 0; j < activeStage_1.activeStage.box.length; j++) {\n            main_1.fg2.fillRect((activeStage_1.activeStage.box[j].min.x * activeStage_1.activeStage.scale) + activeStage_1.activeStage.offset[0], (activeStage_1.activeStage.box[j].max.y * -activeStage_1.activeStage.scale) + activeStage_1.activeStage.offset[1], (activeStage_1.activeStage.box[j].max.x - activeStage_1.activeStage.box[j].min.x) * activeStage_1.activeStage.scale, (activeStage_1.activeStage.box[j].max.y - activeStage_1.activeStage.box[j].min.y) * activeStage_1.activeStage.scale);\n        }\n    }\n    if (activeStage_1.activeStage.polygon !== null && activeStage_1.activeStage.polygon !== undefined) {\n        for (let j = 0; j < activeStage_1.activeStage.polygon.length; j++) {\n            const p = activeStage_1.activeStage.polygon[j];\n            main_1.fg2.beginPath();\n            main_1.fg2.moveTo(p[0].x * activeStage_1.activeStage.scale + activeStage_1.activeStage.offset[0], p[0].y * -activeStage_1.activeStage.scale + activeStage_1.activeStage.offset[1]);\n            for (let n = 1; n < p.length; n++) {\n                main_1.fg2.lineTo(p[n].x * activeStage_1.activeStage.scale + activeStage_1.activeStage.offset[0], p[n].y * -activeStage_1.activeStage.scale + activeStage_1.activeStage.offset[1]);\n            }\n            main_1.fg2.closePath();\n            main_1.fg2.fill();\n        }\n    }\n    if (activeStage_1.activeStage.background !== null && activeStage_1.activeStage.background !== undefined) {\n        if (activeStage_1.activeStage.background.polygon !== null && activeStage_1.activeStage.background.polygon !== undefined) {\n            main_1.bg2.save();\n            main_1.bg2.fillStyle = exports.boxFillBG;\n            for (let i = 0; i < activeStage_1.activeStage.background.polygon.length; i++) {\n                const p = activeStage_1.activeStage.background.polygon[i];\n                main_1.bg2.beginPath();\n                main_1.bg2.moveTo(p[0].x * activeStage_1.activeStage.scale + activeStage_1.activeStage.offset[0], p[0].y * -activeStage_1.activeStage.scale + activeStage_1.activeStage.offset[1]);\n                for (let n = 1; n < p.length; n++) {\n                    main_1.bg2.lineTo(p[n].x * activeStage_1.activeStage.scale + activeStage_1.activeStage.offset[0], p[n].y * -activeStage_1.activeStage.scale + activeStage_1.activeStage.offset[1]);\n                }\n                main_1.bg2.closePath();\n                main_1.bg2.fill();\n            }\n        }\n        if (activeStage_1.activeStage.background.line !== null && activeStage_1.activeStage.background.line !== undefined) {\n            main_1.bg2.lineWidth = 3;\n            main_1.bg2.strokeStyle = exports.boxFillBG;\n            for (let i = 0; i < activeStage_1.activeStage.background.line.length; i++) {\n                const lL = activeStage_1.activeStage.background.line[i][0];\n                const lR = activeStage_1.activeStage.background.line[i][1];\n                main_1.bg2.beginPath();\n                main_1.bg2.moveTo(lL.x * activeStage_1.activeStage.scale + activeStage_1.activeStage.offset[0], lL.y * -activeStage_1.activeStage.scale + activeStage_1.activeStage.offset[1]);\n                main_1.bg2.lineTo(lR.x * activeStage_1.activeStage.scale + activeStage_1.activeStage.offset[0], lR.y * -activeStage_1.activeStage.scale + activeStage_1.activeStage.offset[1]);\n                main_1.bg2.closePath();\n                main_1.bg2.stroke();\n            }\n            main_1.bg2.restore();\n        }\n    }\n    main_1.fg2.lineWidth = 4;\n    const types = [\"wallL\", \"wallR\", \"ground\", \"ceiling\"];\n    for (let i = 0; i < types.length; i++) {\n        drawDamageLine(types[i], main_1.fg2, activeStage_1.activeStage);\n    }\n    main_1.fg2.strokeStyle = \"#e7a44c\";\n    const ex = 0;\n}\n;\nfunction setBackgroundType(val) {\n    exports.backgroundType = val;\n}\n;\nclass BgStar {\n    constructor() {\n        const vSeed = Math.random();\n        this.velocity = new Vec2D_1.Vec2D(5 * vSeed * Math.sign(0.5 - Math.random()), 5 * (1 - vSeed) * Math.sign(0.5 - Math.random()));\n        if ((0, transparency_1.getTransparency)()) {\n            this.colour = \"hsl(\" + 358 * Math.random() + \", 100%, 50%)\";\n        }\n        else {\n            this.colour = \"hsl(\" + 358 * Math.random() + \",100%,15%)\";\n        }\n        this.pos = new Vec2D_1.Vec2D(0, 0);\n        this.life = 0;\n    }\n}\nexports.BgStar = BgStar;\n;\nfunction drawBackgroundInit() {\n    var _a, _b, _c, _d;\n    const bgGrad = main_1.bg1.createLinearGradient(0, 0, 0, 500);\n    bgGrad.addColorStop(0, \"rgb(24, 17, 66)\");\n    bgGrad.addColorStop(1, \"black\");\n    main_1.bg1.fillStyle = bgGrad;\n    main_1.bg1.fillRect(-100, -100, (_b = (_a = main_1.layers === null || main_1.layers === void 0 ? void 0 : main_1.layers.BG1) === null || _a === void 0 ? void 0 : _a.width) !== null && _b !== void 0 ? _b : 0 + 200, (_d = (_c = main_1.layers === null || main_1.layers === void 0 ? void 0 : main_1.layers.BG1) === null || _c === void 0 ? void 0 : _c.height) !== null && _d !== void 0 ? _d : 0 + 200);\n    ;\n}\n;\nfunction drawBackground() {\n    if (exports.backgroundType === 0) {\n        drawStars();\n    }\n    else {\n        drawTunnel();\n    }\n}\n;\nfunction drawTunnel() {\n    main_1.bg2.lineWidth = 2;\n    ang += 0.005;\n    let angB = ang;\n    main_1.bg2.beginPath();\n    for (let i = 0; i < 16; i++) {\n        const v = (0, render_1.rotateVector)(0, 800, angB);\n        main_1.bg2.moveTo(600, 375);\n        main_1.bg2.lineTo(600 + v.x, 375 + v.y);\n        angB += Math.PI / 8;\n    }\n    main_1.bg2.stroke();\n    for (let i = 0; i < circleSize.length; i++) {\n        circleSize[i]++;\n        if (circleSize[i] > 200) {\n            circleSize[i] = 0;\n        }\n        main_1.bg2.lineWidth = Math.max(1, Math.round(3 * (circleSize[i] / 60)));\n        main_1.bg2.beginPath();\n        main_1.bg2.arc(600, 375, circleSize[i] * 4, 0, render_1.twoPi);\n        main_1.bg2.closePath();\n        main_1.bg2.stroke();\n    }\n}\n;\nfunction drawStars() {\n    bgSparkle--;\n    for (let p = 0; p < 20; p++) {\n        if (bgStars[p].pos.x > 1250 || bgStars[p].pos.y > 800 || bgStars[p].pos.x < -50 || bgStars[p].pos.y < -50) {\n            bgStars[p].pos = new Vec2D_1.Vec2D(600, 375);\n            bgStars[p].life = 0;\n            const vSeed = Math.random();\n            bgStars[p].velocity = new Vec2D_1.Vec2D(5 * vSeed * Math.sign(0.5 - Math.random()), 5 * (1 - vSeed) * Math.sign(0.5 - Math.random()));\n        }\n        bgStars[p].pos.x += bgStars[p].velocity.x;\n        bgStars[p].pos.y += bgStars[p].velocity.y;\n        bgStars[p].life++;\n        if (bgSparkle === 0) {\n            main_1.bg2.fillStyle = bgStars[p].colour;\n            if ((0, transparency_1.getTransparency)()) {\n                main_1.bg2.globalAlpha = Math.min(bgStars[p].life / 300, 1);\n            }\n            main_1.bg2.beginPath();\n            main_1.bg2.arc(bgStars[p].pos.x, bgStars[p].pos.y, 5, render_1.twoPi, 0);\n            ;\n            main_1.bg2.fill();\n        }\n    }\n    if (bgSparkle === 0) {\n        bgSparkle = 2;\n    }\n    main_1.bg2.globalAlpha = 1;\n    for (let k = 1; k > -1; k--) {\n        for (let j = 0; j < 9; j++) {\n            //bgPos[j] += direction[j]*5*Math.random();\n            if (j === 8) {\n                bgPos[k][j] += direction[k][j] * 0.2 * Math.random();\n            }\n            else {\n                bgPos[k][j] += direction[k][j] * 1 * Math.random();\n            }\n            switch (j) {\n                case 0:\n                    if ((direction[k][j] === 1 && bgPos[k][j] > -10) || (direction[k][j] === -1 && bgPos[k][j] < -200)) {\n                        direction[k][j] *= -1;\n                    }\n                    break;\n                case 1:\n                    if ((direction[k][j] === 1 && bgPos[k][j] > 550 - k * 100) || (direction[k][j] === -1 && bgPos[k][j] < 450 - k * 100)) {\n                        direction[k][j] *= -1;\n                    }\n                    break;\n                case 2:\n                    if ((direction[k][j] === 1 && bgPos[k][j] > 550) || (direction[k][j] === -1 && bgPos[k][j] < 0)) {\n                        direction[k][j] *= -1;\n                    }\n                    break;\n                case 3:\n                    if ((direction[k][j] === 1 && bgPos[k][j] > 550 - k * 100) || (direction[k][j] === -1 && bgPos[k][j] < 450 - k * 100)) {\n                        direction[k][j] *= -1;\n                    }\n                    break;\n                case 4:\n                    if ((direction[k][j] === 1 && bgPos[k][j] > 1150) || (direction[k][j] === -1 && bgPos[k][j] < 600)) {\n                        direction[k][j] *= -1;\n                    }\n                    break;\n                case 5:\n                    if ((direction[k][j] === 1 && bgPos[k][j] > 550 - k * 100) || (direction[k][j] === -1 && bgPos[k][j] < 450 - k * 100)) {\n                        direction[k][j] *= -1;\n                    }\n                    break;\n                case 6:\n                    if ((direction[k][j] === 1 && bgPos[k][j] > 1400) || (direction[k][j] === -1 && bgPos[k][j] < 1210)) {\n                        direction[k][j] *= -1;\n                    }\n                    break;\n                case 7:\n                    if ((direction[k][j] === 1 && bgPos[k][j] > 550 - k * 100) || (direction[k][j] === -1 && bgPos[k][j] < 450 - k * 100)) {\n                        direction[k][j] *= -1;\n                    }\n                    break;\n                case 8:\n                    if ((direction[k][j] === 1 && bgPos[k][j] > 357) || (direction[k][j] === -1 && bgPos[k][j] < 1)) {\n                        direction[k][j] *= -1;\n                    }\n                    break;\n                default:\n                    break;\n            }\n        }\n        if ((0, transparency_1.getTransparency)()) {\n            exports.boxFill = \"hsla(\" + bgPos[k][8] + \", 100%, 50%, \" + (0.15 - k * 0.07) + \")\";\n            exports.boxFillBG = \"hsla(\" + bgPos[k][8] + \", 100%, 50%, \" + (0.13 - k * 0.07) + \")\";\n        }\n        else {\n            exports.boxFill = \"hsl(\" + bgPos[k][8] + \", 100%, 7%)\";\n            exports.boxFillBG = \"hsl(\" + bgPos[k][8] + \", 50%, 7%)\";\n        }\n        main_1.bg2.fillStyle = exports.boxFill;\n        main_1.bg2.beginPath();\n        main_1.bg2.moveTo(bgPos[k][0], bgPos[k][1]);\n        main_1.bg2.bezierCurveTo(bgPos[k][2], bgPos[k][3], bgPos[k][4], bgPos[k][5], bgPos[k][6], bgPos[k][7]);\n        if (k === 1) {\n            main_1.bg2.lineTo(bgPos[0][6], bgPos[0][7]);\n            main_1.bg2.bezierCurveTo(bgPos[0][4], bgPos[0][5], bgPos[0][2], bgPos[0][3], bgPos[0][0], bgPos[0][1]);\n        }\n        else {\n            main_1.bg2.lineTo(1200, 750);\n            main_1.bg2.lineTo(0, 750);\n        }\n        main_1.bg2.closePath();\n        main_1.bg2.fill();\n    }\n}\n;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/stages/stagerender.ts\n");

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ /* webpack/runtime/getFullHash */
/******/ (() => {
/******/ 	__webpack_require__.h = () => ("2b29f7e7072498bb9ca7")
/******/ })();
/******/ 
/******/ }
);