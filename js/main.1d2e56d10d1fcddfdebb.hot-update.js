"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdatemeleelight"]("main",{

/***/ "./src/stages/stagerender.ts":
/*!***********************************!*\
  !*** ./src/stages/stagerender.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.bgStar = exports.backgroundType = exports.boxFillBG = exports.boxFill = void 0;\nexports.drawStageInit = drawStageInit;\nexports.calculateDamageWallColours = calculateDamageWallColours;\nexports.drawDamageLine = drawDamageLine;\nexports.drawStage = drawStage;\nexports.setBackgroundType = setBackgroundType;\nexports.drawBackgroundInit = drawBackgroundInit;\nexports.drawBackground = drawBackground;\nexports.drawTunnel = drawTunnel;\nexports.drawStars = drawStars;\nconst transparency_1 = __webpack_require__(/*! main/vfx/transparency */ \"./src/main/vfx/transparency.js\");\nconst main_1 = __webpack_require__(/*! ../main/main */ \"./src/main/main.ts\");\nconst render_1 = __webpack_require__(/*! ../main/render */ \"./src/main/render.ts\");\nconst activeStage_1 = __webpack_require__(/*! ../stages/activeStage */ \"./src/stages/activeStage.ts\");\nconst Vec2D_1 = __webpack_require__(/*! ../main/util/Vec2D */ \"./src/main/util/Vec2D.ts\");\nconst linAlg_1 = __webpack_require__(/*! ../main/linAlg */ \"./src/main/linAlg.ts\");\nconst bgPos = [[-30, 500, 300, 500, 900, 500, 1230, 450, 358], [-30, 400, 300, 400, 900, 400, 1230, 350, 179]];\nconst direction = [[1, -1, 1, -1, 1, -1, 1, -1, 1], [-1, 1, -1, 1, -1, 1, -1, 1, -1]];\nexports.boxFill = \"rgba(0, 0, 0, 0.1)\";\nexports.boxFillBG = \"rgba(0, 0, 0, 0.1)\";\nconst bgStars = [];\nfor (let p = 0; p < 20; p++) {\n    bgStars[p] = new main_1.bgStar();\n    bgStars[p].pos = new Vec2D_1.Vec2D(600 + 100 * Math.random() * bgStars[p].velocity.x, 375 + 100 * Math.random() * bgStars[p].velocity.y);\n}\nlet bgSparkle = 3;\nconst gridGrad = \"rgba(94,173,255,0.2)\";\nconst circleSize = [];\nfor (let i = 0; i < 5; i++) {\n    circleSize[i] = i * 40;\n}\nlet ang = 0;\nexports.backgroundType = 0;\nconst scandypattern = new Image();\nscandypattern.src = \"assets/christmas/scandypattern.png\";\nconst fabric = new Image();\nfabric.src = \"assets/christmas/fabric.png\";\nconst randall = [new Image(), new Image(), new Image()];\nrandall[0].src = \"assets/stage/randall1.png\";\nrandall[1].src = \"assets/stage/randall2.png\";\nrandall[2].src = \"assets/stage/randall3.png\";\nlet randallTimer = 0;\nfunction drawStageInit() {\n    main_1.fg1.strokeStyle = \"#db80cc\";\n    main_1.fg1.lineWidth = 1;\n    for (let j = 0; j < activeStage_1.activeStage.ground.length; j++) {\n        main_1.fg1.beginPath();\n        main_1.fg1.moveTo((activeStage_1.activeStage.ground[j][0].x * activeStage_1.activeStage.scale) + activeStage_1.activeStage.offset[0], (activeStage_1.activeStage.ground[j][0].y * -activeStage_1.activeStage.scale) + activeStage_1.activeStage.offset[1]);\n        main_1.fg1.lineTo((activeStage_1.activeStage.ground[j][1].x * activeStage_1.activeStage.scale) + activeStage_1.activeStage.offset[0], (activeStage_1.activeStage.ground[j][1].y * -activeStage_1.activeStage.scale) + activeStage_1.activeStage.offset[1]);\n        main_1.fg1.closePath();\n        main_1.fg1.stroke();\n    }\n    main_1.fg1.strokeStyle = \"#ed6767\";\n    for (let j = 0; j < activeStage_1.activeStage.ceiling.length; j++) {\n        main_1.fg1.beginPath();\n        main_1.fg1.moveTo((activeStage_1.activeStage.ceiling[j][0].x * activeStage_1.activeStage.scale) + activeStage_1.activeStage.offset[0], (activeStage_1.activeStage.ceiling[j][0].y * -activeStage_1.activeStage.scale) + activeStage_1.activeStage.offset[1]);\n        main_1.fg1.lineTo((activeStage_1.activeStage.ceiling[j][1].x * activeStage_1.activeStage.scale) + activeStage_1.activeStage.offset[0], (activeStage_1.activeStage.ceiling[j][1].y * -activeStage_1.activeStage.scale) + activeStage_1.activeStage.offset[1]);\n        main_1.fg1.closePath();\n        main_1.fg1.stroke();\n    }\n    main_1.fg1.strokeStyle = \"#4794c6\";\n    for (let j = 0; j < activeStage_1.activeStage.platform.length; j++) {\n        if (activeStage_1.activeStage.movingPlats === null || activeStage_1.activeStage.movingPlats === undefined || activeStage_1.activeStage.movingPlats.indexOf(j) === -1) { // not a moving platform\n            main_1.fg1.beginPath();\n            main_1.fg1.moveTo((activeStage_1.activeStage.platform[j][0].x * activeStage_1.activeStage.scale) + activeStage_1.activeStage.offset[0], (activeStage_1.activeStage.platform[j][0].y * -activeStage_1.activeStage.scale) + activeStage_1.activeStage.offset[1]);\n            main_1.fg1.lineTo((activeStage_1.activeStage.platform[j][1].x * activeStage_1.activeStage.scale) + activeStage_1.activeStage.offset[0], (activeStage_1.activeStage.platform[j][1].y * -activeStage_1.activeStage.scale) + activeStage_1.activeStage.offset[1]);\n            main_1.fg1.closePath();\n            main_1.fg1.stroke();\n        }\n    }\n    main_1.fg1.strokeStyle = \"#47c648\";\n    for (let k = 0; k < activeStage_1.activeStage.wallL.length; k++) {\n        main_1.fg1.beginPath();\n        main_1.fg1.moveTo((activeStage_1.activeStage.wallL[k][0].x * activeStage_1.activeStage.scale) + activeStage_1.activeStage.offset[0], (activeStage_1.activeStage.wallL[k][0].y * -activeStage_1.activeStage.scale) + activeStage_1.activeStage.offset[1]);\n        main_1.fg1.lineTo((activeStage_1.activeStage.wallL[k][1].x * activeStage_1.activeStage.scale) + activeStage_1.activeStage.offset[0], (activeStage_1.activeStage.wallL[k][1].y * -activeStage_1.activeStage.scale) + activeStage_1.activeStage.offset[1]);\n        main_1.fg1.closePath();\n        main_1.fg1.stroke();\n    }\n    main_1.fg1.strokeStyle = \"#9867de\";\n    for (let l = 0; l < activeStage_1.activeStage.wallR.length; l++) {\n        main_1.fg1.beginPath();\n        main_1.fg1.moveTo((activeStage_1.activeStage.wallR[l][0].x * activeStage_1.activeStage.scale) + activeStage_1.activeStage.offset[0], (activeStage_1.activeStage.wallR[l][0].y * -activeStage_1.activeStage.scale) + activeStage_1.activeStage.offset[1]);\n        main_1.fg1.lineTo((activeStage_1.activeStage.wallR[l][1].x * activeStage_1.activeStage.scale) + activeStage_1.activeStage.offset[0], (activeStage_1.activeStage.wallR[l][1].y * -activeStage_1.activeStage.scale) + activeStage_1.activeStage.offset[1]);\n        main_1.fg1.closePath();\n        main_1.fg1.stroke();\n    }\n    main_1.fg1.strokeStyle = \"#E7A44C\";\n    main_1.fg1.lineWidth = 2;\n    for (let i = 0; i < activeStage_1.activeStage.ledge.length; i++) {\n        const e = activeStage_1.activeStage.ledge[i];\n        const pA = activeStage_1.activeStage[e[0]][e[1]][e[2]];\n        const pB = activeStage_1.activeStage[e[0]][e[1]][1 - e[2]];\n        const ang = Math.atan2((pB.y - pA.y), (pB.x - pA.x));\n        const magnitude = (0, linAlg_1.euclideanDist)(pA, pB);\n        const length = Math.min(0.4 * magnitude, 20 / activeStage_1.activeStage.scale);\n        const pC = new Vec2D_1.Vec2D(pA.x + length * Math.cos(ang), pA.y + length * Math.sin(ang));\n        main_1.fg1.beginPath();\n        main_1.fg1.moveTo((pA.x * activeStage_1.activeStage.scale) + activeStage_1.activeStage.offset[0], (pA.y * -activeStage_1.activeStage.scale) + activeStage_1.activeStage.offset[1]);\n        main_1.fg1.lineTo((pC.x * activeStage_1.activeStage.scale) + activeStage_1.activeStage.offset[0], (pC.y * -activeStage_1.activeStage.scale) + activeStage_1.activeStage.offset[1]);\n        main_1.fg1.closePath();\n        main_1.fg1.stroke();\n    }\n}\n;\nconst swirlTimer = 0;\nconst swirlSwitch = false;\nconst wallColour = [\"rgb(255,0,40)\", \"rgb(0,255,255)\", \"rgb(125,125,125)\", \"rgb(125,50,255)\"];\nfunction wallColourFromDamageType(damageType) {\n    if (damageType === \"fire\") {\n        return wallColour[0];\n    }\n    else if (damageType === \"electric\") {\n        return wallColour[1];\n    }\n    else if (damageType === \"slash\") {\n        return wallColour[2];\n    }\n    else if (damageType === \"darkness\") {\n        return wallColour[3];\n    }\n    else {\n        return \"rgb(0,50,180)\";\n    }\n}\n;\nlet wallCycle = 0;\nfunction calculateDamageWallColours() {\n    let a = 0;\n    if (wallCycle < 240) {\n        wallCycle++;\n        if (wallCycle > 120) {\n            a = 240 - wallCycle;\n        }\n        else {\n            a = wallCycle;\n        }\n    }\n    else {\n        wallCycle = 0;\n    }\n    const n = Math.round(255 * a / 120);\n    wallColour[0] = \"rgb(255,\" + n + \",40)\";\n    wallColour[1] = \"rgb(\" + n + \",255,255)\";\n    const m = Math.round(125 + n / 2);\n    wallColour[2] = \"rgb(\" + m + \",\" + m + \",\" + m + \")\";\n    wallColour[3] = \"rgb(\" + Math.round(125 - n / 3) + \",50,\" + Math.round(255 - n / 3) + \")\";\n}\nfunction drawDamageLine(type, can, stage) {\n    for (let i = 0; i < stage[type].length; i++) {\n        const surfaceProperties = stage[type][i][2];\n        if (surfaceProperties !== undefined && surfaceProperties.damageType !== null) {\n            can.strokeStyle = wallColourFromDamageType(surfaceProperties.damageType);\n            can.beginPath();\n            can.moveTo((stage[type][i][0].x * stage.scale) + stage.offset[0], (stage[type][i][0].y * -stage.scale) + stage.offset[1]);\n            can.lineTo((stage[type][i][1].x * stage.scale) + stage.offset[0], (stage[type][i][1].y * -stage.scale) + stage.offset[1]);\n            can.stroke();\n        }\n    }\n}\nfunction drawStage() {\n    calculateDamageWallColours();\n    if (activeStage_1.activeStage.name === \"ystory\") {\n        // Randall\n        randallTimer++;\n        if (randallTimer === 30) {\n            randallTimer = 0;\n        }\n        main_1.bg2.drawImage(randall[Math.floor(randallTimer / 10)], (activeStage_1.activeStage.platform[0][0].x * activeStage_1.activeStage.scale) + activeStage_1.activeStage.offset[0] - 20, (activeStage_1.activeStage.platform[0][0].y * -activeStage_1.activeStage.scale) + activeStage_1.activeStage.offset[1] - 20, 100, 100);\n    }\n    else if (activeStage_1.activeStage.movingPlats !== null && activeStage_1.activeStage.movingPlats !== undefined && activeStage_1.activeStage.movingPlats.length !== 0) {\n        main_1.fg2.strokeStyle = \"#4794c6\";\n        for (let i = 0; i < activeStage_1.activeStage.movingPlats.length; i++) {\n            if (activeStage_1.activeStage.name !== \"fountain\" || activeStage_1.activeStage.platform[activeStage_1.activeStage.movingPlats[i]][0].y > 0) {\n                main_1.fg2.beginPath();\n                main_1.fg2.moveTo((activeStage_1.activeStage.platform[activeStage_1.activeStage.movingPlats[i]][0].x * activeStage_1.activeStage.scale) + activeStage_1.activeStage.offset[0], (activeStage_1.activeStage.platform[activeStage_1.activeStage.movingPlats[i]][0].y * -activeStage_1.activeStage.scale) + activeStage_1.activeStage.offset[1]);\n                main_1.fg2.lineTo((activeStage_1.activeStage.platform[activeStage_1.activeStage.movingPlats[i]][1].x * activeStage_1.activeStage.scale) + activeStage_1.activeStage.offset[0], (activeStage_1.activeStage.platform[activeStage_1.activeStage.movingPlats[i]][1].y * -activeStage_1.activeStage.scale) + activeStage_1.activeStage.offset[1]);\n                main_1.fg2.closePath();\n                main_1.fg2.stroke();\n            }\n        }\n    }\n    main_1.fg2.fillStyle = exports.boxFill;\n    if (activeStage_1.activeStage.box !== null && activeStage_1.activeStage.box !== undefined) {\n        for (let j = 0; j < activeStage_1.activeStage.box.length; j++) {\n            main_1.fg2.fillRect((activeStage_1.activeStage.box[j].min.x * activeStage_1.activeStage.scale) + activeStage_1.activeStage.offset[0], (activeStage_1.activeStage.box[j].max.y * -activeStage_1.activeStage.scale) + activeStage_1.activeStage.offset[1], (activeStage_1.activeStage.box[j].max.x - activeStage_1.activeStage.box[j].min.x) * activeStage_1.activeStage.scale, (activeStage_1.activeStage.box[j].max.y - activeStage_1.activeStage.box[j].min.y) * activeStage_1.activeStage.scale);\n        }\n    }\n    if (activeStage_1.activeStage.polygon !== null && activeStage_1.activeStage.polygon !== undefined) {\n        for (let j = 0; j < activeStage_1.activeStage.polygon.length; j++) {\n            const p = activeStage_1.activeStage.polygon[j];\n            main_1.fg2.beginPath();\n            main_1.fg2.moveTo(p[0].x * activeStage_1.activeStage.scale + activeStage_1.activeStage.offset[0], p[0].y * -activeStage_1.activeStage.scale + activeStage_1.activeStage.offset[1]);\n            for (let n = 1; n < p.length; n++) {\n                main_1.fg2.lineTo(p[n].x * activeStage_1.activeStage.scale + activeStage_1.activeStage.offset[0], p[n].y * -activeStage_1.activeStage.scale + activeStage_1.activeStage.offset[1]);\n            }\n            main_1.fg2.closePath();\n            main_1.fg2.fill();\n        }\n    }\n    if (activeStage_1.activeStage.background !== null && activeStage_1.activeStage.background !== undefined) {\n        if (activeStage_1.activeStage.background.polygon !== null && activeStage_1.activeStage.background.polygon !== undefined) {\n            main_1.bg2.save();\n            main_1.bg2.fillStyle = exports.boxFillBG;\n            for (let i = 0; i < activeStage_1.activeStage.background.polygon.length; i++) {\n                const p = activeStage_1.activeStage.background.polygon[i];\n                main_1.bg2.beginPath();\n                main_1.bg2.moveTo(p[0].x * activeStage_1.activeStage.scale + activeStage_1.activeStage.offset[0], p[0].y * -activeStage_1.activeStage.scale + activeStage_1.activeStage.offset[1]);\n                for (let n = 1; n < p.length; n++) {\n                    main_1.bg2.lineTo(p[n].x * activeStage_1.activeStage.scale + activeStage_1.activeStage.offset[0], p[n].y * -activeStage_1.activeStage.scale + activeStage_1.activeStage.offset[1]);\n                }\n                main_1.bg2.closePath();\n                main_1.bg2.fill();\n            }\n        }\n        if (activeStage_1.activeStage.background.line !== null && activeStage_1.activeStage.background.line !== undefined) {\n            main_1.bg2.lineWidth = 3;\n            main_1.bg2.strokeStyle = exports.boxFillBG;\n            for (let i = 0; i < activeStage_1.activeStage.background.line.length; i++) {\n                const lL = activeStage_1.activeStage.background.line[i][0];\n                const lR = activeStage_1.activeStage.background.line[i][1];\n                main_1.bg2.beginPath();\n                main_1.bg2.moveTo(lL.x * activeStage_1.activeStage.scale + activeStage_1.activeStage.offset[0], lL.y * -activeStage_1.activeStage.scale + activeStage_1.activeStage.offset[1]);\n                main_1.bg2.lineTo(lR.x * activeStage_1.activeStage.scale + activeStage_1.activeStage.offset[0], lR.y * -activeStage_1.activeStage.scale + activeStage_1.activeStage.offset[1]);\n                main_1.bg2.closePath();\n                main_1.bg2.stroke();\n            }\n            main_1.bg2.restore();\n        }\n    }\n    main_1.fg2.lineWidth = 4;\n    const types = [\"wallL\", \"wallR\", \"ground\", \"ceiling\"];\n    for (let i = 0; i < types.length; i++) {\n        drawDamageLine(types[i], main_1.fg2, activeStage_1.activeStage);\n    }\n    main_1.fg2.strokeStyle = \"#e7a44c\";\n    const ex = 0;\n}\n;\nfunction setBackgroundType(val) {\n    exports.backgroundType = val;\n}\n;\nclass bgStar {\n    constructor() {\n        const vSeed = Math.random();\n        this.velocity = new Vec2D_1.Vec2D(5 * vSeed * Math.sign(0.5 - Math.random()), 5 * (1 - vSeed) * Math.sign(0.5 - Math.random()));\n        if ((0, transparency_1.getTransparency)()) {\n            this.colour = \"hsl(\" + 358 * Math.random() + \", 100%, 50%)\";\n        }\n        else {\n            this.colour = \"hsl(\" + 358 * Math.random() + \",100%,15%)\";\n        }\n        this.pos = new Vec2D_1.Vec2D(0, 0);\n        this.life = 0;\n    }\n}\nexports.bgStar = bgStar;\n;\nfunction drawBackgroundInit() {\n    var _a, _b, _c, _d;\n    const bgGrad = main_1.bg1.createLinearGradient(0, 0, 0, 500);\n    bgGrad.addColorStop(0, \"rgb(24, 17, 66)\");\n    bgGrad.addColorStop(1, \"black\");\n    main_1.bg1.fillStyle = bgGrad;\n    main_1.bg1.fillRect(-100, -100, (_b = (_a = main_1.layers === null || main_1.layers === void 0 ? void 0 : main_1.layers.BG1) === null || _a === void 0 ? void 0 : _a.width) !== null && _b !== void 0 ? _b : 0 + 200, (_d = (_c = main_1.layers === null || main_1.layers === void 0 ? void 0 : main_1.layers.BG1) === null || _c === void 0 ? void 0 : _c.height) !== null && _d !== void 0 ? _d : 0 + 200);\n    ;\n}\n;\nfunction drawBackground() {\n    if (exports.backgroundType === 0) {\n        drawStars();\n    }\n    else {\n        drawTunnel();\n    }\n}\n;\nfunction drawTunnel() {\n    main_1.bg2.lineWidth = 2;\n    ang += 0.005;\n    let angB = ang;\n    main_1.bg2.beginPath();\n    for (let i = 0; i < 16; i++) {\n        const v = (0, render_1.rotateVector)(0, 800, angB);\n        main_1.bg2.moveTo(600, 375);\n        main_1.bg2.lineTo(600 + v.x, 375 + v.y);\n        angB += Math.PI / 8;\n    }\n    main_1.bg2.stroke();\n    for (let i = 0; i < circleSize.length; i++) {\n        circleSize[i]++;\n        if (circleSize[i] > 200) {\n            circleSize[i] = 0;\n        }\n        main_1.bg2.lineWidth = Math.max(1, Math.round(3 * (circleSize[i] / 60)));\n        main_1.bg2.beginPath();\n        main_1.bg2.arc(600, 375, circleSize[i] * 4, 0, render_1.twoPi);\n        main_1.bg2.closePath();\n        main_1.bg2.stroke();\n    }\n}\n;\nfunction drawStars() {\n    bgSparkle--;\n    for (let p = 0; p < 20; p++) {\n        if (bgStars[p].pos.x > 1250 || bgStars[p].pos.y > 800 || bgStars[p].pos.x < -50 || bgStars[p].pos.y < -50) {\n            bgStars[p].pos = new Vec2D_1.Vec2D(600, 375);\n            bgStars[p].life = 0;\n            const vSeed = Math.random();\n            bgStars[p].velocity = new Vec2D_1.Vec2D(5 * vSeed * Math.sign(0.5 - Math.random()), 5 * (1 - vSeed) * Math.sign(0.5 - Math.random()));\n        }\n        bgStars[p].pos.x += bgStars[p].velocity.x;\n        bgStars[p].pos.y += bgStars[p].velocity.y;\n        bgStars[p].life++;\n        if (bgSparkle === 0) {\n            main_1.bg2.fillStyle = bgStars[p].colour;\n            if ((0, transparency_1.getTransparency)()) {\n                main_1.bg2.globalAlpha = Math.min(bgStars[p].life / 300, 1);\n            }\n            main_1.bg2.beginPath();\n            main_1.bg2.arc(bgStars[p].pos.x, bgStars[p].pos.y, 5, render_1.twoPi, 0);\n            ;\n            main_1.bg2.fill();\n        }\n    }\n    if (bgSparkle === 0) {\n        bgSparkle = 2;\n    }\n    main_1.bg2.globalAlpha = 1;\n    for (let k = 1; k > -1; k--) {\n        for (let j = 0; j < 9; j++) {\n            //bgPos[j] += direction[j]*5*Math.random();\n            if (j === 8) {\n                bgPos[k][j] += direction[k][j] * 0.2 * Math.random();\n            }\n            else {\n                bgPos[k][j] += direction[k][j] * 1 * Math.random();\n            }\n            switch (j) {\n                case 0:\n                    if ((direction[k][j] === 1 && bgPos[k][j] > -10) || (direction[k][j] === -1 && bgPos[k][j] < -200)) {\n                        direction[k][j] *= -1;\n                    }\n                    break;\n                case 1:\n                    if ((direction[k][j] === 1 && bgPos[k][j] > 550 - k * 100) || (direction[k][j] === -1 && bgPos[k][j] < 450 - k * 100)) {\n                        direction[k][j] *= -1;\n                    }\n                    break;\n                case 2:\n                    if ((direction[k][j] === 1 && bgPos[k][j] > 550) || (direction[k][j] === -1 && bgPos[k][j] < 0)) {\n                        direction[k][j] *= -1;\n                    }\n                    break;\n                case 3:\n                    if ((direction[k][j] === 1 && bgPos[k][j] > 550 - k * 100) || (direction[k][j] === -1 && bgPos[k][j] < 450 - k * 100)) {\n                        direction[k][j] *= -1;\n                    }\n                    break;\n                case 4:\n                    if ((direction[k][j] === 1 && bgPos[k][j] > 1150) || (direction[k][j] === -1 && bgPos[k][j] < 600)) {\n                        direction[k][j] *= -1;\n                    }\n                    break;\n                case 5:\n                    if ((direction[k][j] === 1 && bgPos[k][j] > 550 - k * 100) || (direction[k][j] === -1 && bgPos[k][j] < 450 - k * 100)) {\n                        direction[k][j] *= -1;\n                    }\n                    break;\n                case 6:\n                    if ((direction[k][j] === 1 && bgPos[k][j] > 1400) || (direction[k][j] === -1 && bgPos[k][j] < 1210)) {\n                        direction[k][j] *= -1;\n                    }\n                    break;\n                case 7:\n                    if ((direction[k][j] === 1 && bgPos[k][j] > 550 - k * 100) || (direction[k][j] === -1 && bgPos[k][j] < 450 - k * 100)) {\n                        direction[k][j] *= -1;\n                    }\n                    break;\n                case 8:\n                    if ((direction[k][j] === 1 && bgPos[k][j] > 357) || (direction[k][j] === -1 && bgPos[k][j] < 1)) {\n                        direction[k][j] *= -1;\n                    }\n                    break;\n                default:\n                    break;\n            }\n        }\n        if ((0, transparency_1.getTransparency)()) {\n            exports.boxFill = \"hsla(\" + bgPos[k][8] + \", 100%, 50%, \" + (0.15 - k * 0.07) + \")\";\n            exports.boxFillBG = \"hsla(\" + bgPos[k][8] + \", 100%, 50%, \" + (0.13 - k * 0.07) + \")\";\n        }\n        else {\n            exports.boxFill = \"hsl(\" + bgPos[k][8] + \", 100%, 7%)\";\n            exports.boxFillBG = \"hsl(\" + bgPos[k][8] + \", 50%, 7%)\";\n        }\n        main_1.bg2.fillStyle = exports.boxFill;\n        main_1.bg2.beginPath();\n        main_1.bg2.moveTo(bgPos[k][0], bgPos[k][1]);\n        main_1.bg2.bezierCurveTo(bgPos[k][2], bgPos[k][3], bgPos[k][4], bgPos[k][5], bgPos[k][6], bgPos[k][7]);\n        if (k === 1) {\n            main_1.bg2.lineTo(bgPos[0][6], bgPos[0][7]);\n            main_1.bg2.bezierCurveTo(bgPos[0][4], bgPos[0][5], bgPos[0][2], bgPos[0][3], bgPos[0][0], bgPos[0][1]);\n        }\n        else {\n            main_1.bg2.lineTo(1200, 750);\n            main_1.bg2.lineTo(0, 750);\n        }\n        main_1.bg2.closePath();\n        main_1.bg2.fill();\n    }\n}\n;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc3RhZ2VzL3N0YWdlcmVuZGVyLnRzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGNBQWMsR0FBRyxzQkFBc0IsR0FBRyxpQkFBaUIsR0FBRyxlQUFlO0FBQzdFLHFCQUFxQjtBQUNyQixrQ0FBa0M7QUFDbEMsc0JBQXNCO0FBQ3RCLGlCQUFpQjtBQUNqQix5QkFBeUI7QUFDekIsMEJBQTBCO0FBQzFCLHNCQUFzQjtBQUN0QixrQkFBa0I7QUFDbEIsaUJBQWlCO0FBQ2pCLHVCQUF1QixtQkFBTyxDQUFDLDZEQUF1QjtBQUN0RCxlQUFlLG1CQUFPLENBQUMsd0NBQWM7QUFDckMsaUJBQWlCLG1CQUFPLENBQUMsNENBQWdCO0FBQ3pDLHNCQUFzQixtQkFBTyxDQUFDLDBEQUF1QjtBQUNyRCxnQkFBZ0IsbUJBQU8sQ0FBQyxvREFBb0I7QUFDNUMsaUJBQWlCLG1CQUFPLENBQUMsNENBQWdCO0FBQ3pDO0FBQ0E7QUFDQSxlQUFlO0FBQ2YsaUJBQWlCO0FBQ2pCO0FBQ0EsZ0JBQWdCLFFBQVE7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLE9BQU87QUFDdkI7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQiw2Q0FBNkM7QUFDakU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsOENBQThDO0FBQ2xFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLCtDQUErQztBQUNuRSxnTEFBZ0w7QUFDaEw7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQiw0Q0FBNEM7QUFDaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsNENBQTRDO0FBQ2hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsNENBQTRDO0FBQ2hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0Isd0JBQXdCO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGtEQUFrRDtBQUMxRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLDBDQUEwQztBQUNsRTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3Qiw4Q0FBOEM7QUFDdEU7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLGNBQWM7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIseURBQXlEO0FBQ3JGO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQyxjQUFjO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QixzREFBc0Q7QUFDbEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0Isa0JBQWtCO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSSxzQkFBc0I7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsUUFBUTtBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsdUJBQXVCO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsUUFBUTtBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsUUFBUTtBQUM1Qix3QkFBd0IsT0FBTztBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksZUFBZTtBQUMzQixZQUFZLGlCQUFpQjtBQUM3QjtBQUNBO0FBQ0EsWUFBWSxlQUFlO0FBQzNCLFlBQVksaUJBQWlCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL21lbGVlbGlnaHQvLi9zcmMvc3RhZ2VzL3N0YWdlcmVuZGVyLnRzP2E1N2YiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmJnU3RhciA9IGV4cG9ydHMuYmFja2dyb3VuZFR5cGUgPSBleHBvcnRzLmJveEZpbGxCRyA9IGV4cG9ydHMuYm94RmlsbCA9IHZvaWQgMDtcbmV4cG9ydHMuZHJhd1N0YWdlSW5pdCA9IGRyYXdTdGFnZUluaXQ7XG5leHBvcnRzLmNhbGN1bGF0ZURhbWFnZVdhbGxDb2xvdXJzID0gY2FsY3VsYXRlRGFtYWdlV2FsbENvbG91cnM7XG5leHBvcnRzLmRyYXdEYW1hZ2VMaW5lID0gZHJhd0RhbWFnZUxpbmU7XG5leHBvcnRzLmRyYXdTdGFnZSA9IGRyYXdTdGFnZTtcbmV4cG9ydHMuc2V0QmFja2dyb3VuZFR5cGUgPSBzZXRCYWNrZ3JvdW5kVHlwZTtcbmV4cG9ydHMuZHJhd0JhY2tncm91bmRJbml0ID0gZHJhd0JhY2tncm91bmRJbml0O1xuZXhwb3J0cy5kcmF3QmFja2dyb3VuZCA9IGRyYXdCYWNrZ3JvdW5kO1xuZXhwb3J0cy5kcmF3VHVubmVsID0gZHJhd1R1bm5lbDtcbmV4cG9ydHMuZHJhd1N0YXJzID0gZHJhd1N0YXJzO1xuY29uc3QgdHJhbnNwYXJlbmN5XzEgPSByZXF1aXJlKFwibWFpbi92ZngvdHJhbnNwYXJlbmN5XCIpO1xuY29uc3QgbWFpbl8xID0gcmVxdWlyZShcIi4uL21haW4vbWFpblwiKTtcbmNvbnN0IHJlbmRlcl8xID0gcmVxdWlyZShcIi4uL21haW4vcmVuZGVyXCIpO1xuY29uc3QgYWN0aXZlU3RhZ2VfMSA9IHJlcXVpcmUoXCIuLi9zdGFnZXMvYWN0aXZlU3RhZ2VcIik7XG5jb25zdCBWZWMyRF8xID0gcmVxdWlyZShcIi4uL21haW4vdXRpbC9WZWMyRFwiKTtcbmNvbnN0IGxpbkFsZ18xID0gcmVxdWlyZShcIi4uL21haW4vbGluQWxnXCIpO1xuY29uc3QgYmdQb3MgPSBbWy0zMCwgNTAwLCAzMDAsIDUwMCwgOTAwLCA1MDAsIDEyMzAsIDQ1MCwgMzU4XSwgWy0zMCwgNDAwLCAzMDAsIDQwMCwgOTAwLCA0MDAsIDEyMzAsIDM1MCwgMTc5XV07XG5jb25zdCBkaXJlY3Rpb24gPSBbWzEsIC0xLCAxLCAtMSwgMSwgLTEsIDEsIC0xLCAxXSwgWy0xLCAxLCAtMSwgMSwgLTEsIDEsIC0xLCAxLCAtMV1dO1xuZXhwb3J0cy5ib3hGaWxsID0gXCJyZ2JhKDAsIDAsIDAsIDAuMSlcIjtcbmV4cG9ydHMuYm94RmlsbEJHID0gXCJyZ2JhKDAsIDAsIDAsIDAuMSlcIjtcbmNvbnN0IGJnU3RhcnMgPSBbXTtcbmZvciAobGV0IHAgPSAwOyBwIDwgMjA7IHArKykge1xuICAgIGJnU3RhcnNbcF0gPSBuZXcgbWFpbl8xLmJnU3RhcigpO1xuICAgIGJnU3RhcnNbcF0ucG9zID0gbmV3IFZlYzJEXzEuVmVjMkQoNjAwICsgMTAwICogTWF0aC5yYW5kb20oKSAqIGJnU3RhcnNbcF0udmVsb2NpdHkueCwgMzc1ICsgMTAwICogTWF0aC5yYW5kb20oKSAqIGJnU3RhcnNbcF0udmVsb2NpdHkueSk7XG59XG5sZXQgYmdTcGFya2xlID0gMztcbmNvbnN0IGdyaWRHcmFkID0gXCJyZ2JhKDk0LDE3MywyNTUsMC4yKVwiO1xuY29uc3QgY2lyY2xlU2l6ZSA9IFtdO1xuZm9yIChsZXQgaSA9IDA7IGkgPCA1OyBpKyspIHtcbiAgICBjaXJjbGVTaXplW2ldID0gaSAqIDQwO1xufVxubGV0IGFuZyA9IDA7XG5leHBvcnRzLmJhY2tncm91bmRUeXBlID0gMDtcbmNvbnN0IHNjYW5keXBhdHRlcm4gPSBuZXcgSW1hZ2UoKTtcbnNjYW5keXBhdHRlcm4uc3JjID0gXCJhc3NldHMvY2hyaXN0bWFzL3NjYW5keXBhdHRlcm4ucG5nXCI7XG5jb25zdCBmYWJyaWMgPSBuZXcgSW1hZ2UoKTtcbmZhYnJpYy5zcmMgPSBcImFzc2V0cy9jaHJpc3RtYXMvZmFicmljLnBuZ1wiO1xuY29uc3QgcmFuZGFsbCA9IFtuZXcgSW1hZ2UoKSwgbmV3IEltYWdlKCksIG5ldyBJbWFnZSgpXTtcbnJhbmRhbGxbMF0uc3JjID0gXCJhc3NldHMvc3RhZ2UvcmFuZGFsbDEucG5nXCI7XG5yYW5kYWxsWzFdLnNyYyA9IFwiYXNzZXRzL3N0YWdlL3JhbmRhbGwyLnBuZ1wiO1xucmFuZGFsbFsyXS5zcmMgPSBcImFzc2V0cy9zdGFnZS9yYW5kYWxsMy5wbmdcIjtcbmxldCByYW5kYWxsVGltZXIgPSAwO1xuZnVuY3Rpb24gZHJhd1N0YWdlSW5pdCgpIHtcbiAgICBtYWluXzEuZmcxLnN0cm9rZVN0eWxlID0gXCIjZGI4MGNjXCI7XG4gICAgbWFpbl8xLmZnMS5saW5lV2lkdGggPSAxO1xuICAgIGZvciAobGV0IGogPSAwOyBqIDwgYWN0aXZlU3RhZ2VfMS5hY3RpdmVTdGFnZS5ncm91bmQubGVuZ3RoOyBqKyspIHtcbiAgICAgICAgbWFpbl8xLmZnMS5iZWdpblBhdGgoKTtcbiAgICAgICAgbWFpbl8xLmZnMS5tb3ZlVG8oKGFjdGl2ZVN0YWdlXzEuYWN0aXZlU3RhZ2UuZ3JvdW5kW2pdWzBdLnggKiBhY3RpdmVTdGFnZV8xLmFjdGl2ZVN0YWdlLnNjYWxlKSArIGFjdGl2ZVN0YWdlXzEuYWN0aXZlU3RhZ2Uub2Zmc2V0WzBdLCAoYWN0aXZlU3RhZ2VfMS5hY3RpdmVTdGFnZS5ncm91bmRbal1bMF0ueSAqIC1hY3RpdmVTdGFnZV8xLmFjdGl2ZVN0YWdlLnNjYWxlKSArIGFjdGl2ZVN0YWdlXzEuYWN0aXZlU3RhZ2Uub2Zmc2V0WzFdKTtcbiAgICAgICAgbWFpbl8xLmZnMS5saW5lVG8oKGFjdGl2ZVN0YWdlXzEuYWN0aXZlU3RhZ2UuZ3JvdW5kW2pdWzFdLnggKiBhY3RpdmVTdGFnZV8xLmFjdGl2ZVN0YWdlLnNjYWxlKSArIGFjdGl2ZVN0YWdlXzEuYWN0aXZlU3RhZ2Uub2Zmc2V0WzBdLCAoYWN0aXZlU3RhZ2VfMS5hY3RpdmVTdGFnZS5ncm91bmRbal1bMV0ueSAqIC1hY3RpdmVTdGFnZV8xLmFjdGl2ZVN0YWdlLnNjYWxlKSArIGFjdGl2ZVN0YWdlXzEuYWN0aXZlU3RhZ2Uub2Zmc2V0WzFdKTtcbiAgICAgICAgbWFpbl8xLmZnMS5jbG9zZVBhdGgoKTtcbiAgICAgICAgbWFpbl8xLmZnMS5zdHJva2UoKTtcbiAgICB9XG4gICAgbWFpbl8xLmZnMS5zdHJva2VTdHlsZSA9IFwiI2VkNjc2N1wiO1xuICAgIGZvciAobGV0IGogPSAwOyBqIDwgYWN0aXZlU3RhZ2VfMS5hY3RpdmVTdGFnZS5jZWlsaW5nLmxlbmd0aDsgaisrKSB7XG4gICAgICAgIG1haW5fMS5mZzEuYmVnaW5QYXRoKCk7XG4gICAgICAgIG1haW5fMS5mZzEubW92ZVRvKChhY3RpdmVTdGFnZV8xLmFjdGl2ZVN0YWdlLmNlaWxpbmdbal1bMF0ueCAqIGFjdGl2ZVN0YWdlXzEuYWN0aXZlU3RhZ2Uuc2NhbGUpICsgYWN0aXZlU3RhZ2VfMS5hY3RpdmVTdGFnZS5vZmZzZXRbMF0sIChhY3RpdmVTdGFnZV8xLmFjdGl2ZVN0YWdlLmNlaWxpbmdbal1bMF0ueSAqIC1hY3RpdmVTdGFnZV8xLmFjdGl2ZVN0YWdlLnNjYWxlKSArIGFjdGl2ZVN0YWdlXzEuYWN0aXZlU3RhZ2Uub2Zmc2V0WzFdKTtcbiAgICAgICAgbWFpbl8xLmZnMS5saW5lVG8oKGFjdGl2ZVN0YWdlXzEuYWN0aXZlU3RhZ2UuY2VpbGluZ1tqXVsxXS54ICogYWN0aXZlU3RhZ2VfMS5hY3RpdmVTdGFnZS5zY2FsZSkgKyBhY3RpdmVTdGFnZV8xLmFjdGl2ZVN0YWdlLm9mZnNldFswXSwgKGFjdGl2ZVN0YWdlXzEuYWN0aXZlU3RhZ2UuY2VpbGluZ1tqXVsxXS55ICogLWFjdGl2ZVN0YWdlXzEuYWN0aXZlU3RhZ2Uuc2NhbGUpICsgYWN0aXZlU3RhZ2VfMS5hY3RpdmVTdGFnZS5vZmZzZXRbMV0pO1xuICAgICAgICBtYWluXzEuZmcxLmNsb3NlUGF0aCgpO1xuICAgICAgICBtYWluXzEuZmcxLnN0cm9rZSgpO1xuICAgIH1cbiAgICBtYWluXzEuZmcxLnN0cm9rZVN0eWxlID0gXCIjNDc5NGM2XCI7XG4gICAgZm9yIChsZXQgaiA9IDA7IGogPCBhY3RpdmVTdGFnZV8xLmFjdGl2ZVN0YWdlLnBsYXRmb3JtLmxlbmd0aDsgaisrKSB7XG4gICAgICAgIGlmIChhY3RpdmVTdGFnZV8xLmFjdGl2ZVN0YWdlLm1vdmluZ1BsYXRzID09PSBudWxsIHx8IGFjdGl2ZVN0YWdlXzEuYWN0aXZlU3RhZ2UubW92aW5nUGxhdHMgPT09IHVuZGVmaW5lZCB8fCBhY3RpdmVTdGFnZV8xLmFjdGl2ZVN0YWdlLm1vdmluZ1BsYXRzLmluZGV4T2YoaikgPT09IC0xKSB7IC8vIG5vdCBhIG1vdmluZyBwbGF0Zm9ybVxuICAgICAgICAgICAgbWFpbl8xLmZnMS5iZWdpblBhdGgoKTtcbiAgICAgICAgICAgIG1haW5fMS5mZzEubW92ZVRvKChhY3RpdmVTdGFnZV8xLmFjdGl2ZVN0YWdlLnBsYXRmb3JtW2pdWzBdLnggKiBhY3RpdmVTdGFnZV8xLmFjdGl2ZVN0YWdlLnNjYWxlKSArIGFjdGl2ZVN0YWdlXzEuYWN0aXZlU3RhZ2Uub2Zmc2V0WzBdLCAoYWN0aXZlU3RhZ2VfMS5hY3RpdmVTdGFnZS5wbGF0Zm9ybVtqXVswXS55ICogLWFjdGl2ZVN0YWdlXzEuYWN0aXZlU3RhZ2Uuc2NhbGUpICsgYWN0aXZlU3RhZ2VfMS5hY3RpdmVTdGFnZS5vZmZzZXRbMV0pO1xuICAgICAgICAgICAgbWFpbl8xLmZnMS5saW5lVG8oKGFjdGl2ZVN0YWdlXzEuYWN0aXZlU3RhZ2UucGxhdGZvcm1bal1bMV0ueCAqIGFjdGl2ZVN0YWdlXzEuYWN0aXZlU3RhZ2Uuc2NhbGUpICsgYWN0aXZlU3RhZ2VfMS5hY3RpdmVTdGFnZS5vZmZzZXRbMF0sIChhY3RpdmVTdGFnZV8xLmFjdGl2ZVN0YWdlLnBsYXRmb3JtW2pdWzFdLnkgKiAtYWN0aXZlU3RhZ2VfMS5hY3RpdmVTdGFnZS5zY2FsZSkgKyBhY3RpdmVTdGFnZV8xLmFjdGl2ZVN0YWdlLm9mZnNldFsxXSk7XG4gICAgICAgICAgICBtYWluXzEuZmcxLmNsb3NlUGF0aCgpO1xuICAgICAgICAgICAgbWFpbl8xLmZnMS5zdHJva2UoKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBtYWluXzEuZmcxLnN0cm9rZVN0eWxlID0gXCIjNDdjNjQ4XCI7XG4gICAgZm9yIChsZXQgayA9IDA7IGsgPCBhY3RpdmVTdGFnZV8xLmFjdGl2ZVN0YWdlLndhbGxMLmxlbmd0aDsgaysrKSB7XG4gICAgICAgIG1haW5fMS5mZzEuYmVnaW5QYXRoKCk7XG4gICAgICAgIG1haW5fMS5mZzEubW92ZVRvKChhY3RpdmVTdGFnZV8xLmFjdGl2ZVN0YWdlLndhbGxMW2tdWzBdLnggKiBhY3RpdmVTdGFnZV8xLmFjdGl2ZVN0YWdlLnNjYWxlKSArIGFjdGl2ZVN0YWdlXzEuYWN0aXZlU3RhZ2Uub2Zmc2V0WzBdLCAoYWN0aXZlU3RhZ2VfMS5hY3RpdmVTdGFnZS53YWxsTFtrXVswXS55ICogLWFjdGl2ZVN0YWdlXzEuYWN0aXZlU3RhZ2Uuc2NhbGUpICsgYWN0aXZlU3RhZ2VfMS5hY3RpdmVTdGFnZS5vZmZzZXRbMV0pO1xuICAgICAgICBtYWluXzEuZmcxLmxpbmVUbygoYWN0aXZlU3RhZ2VfMS5hY3RpdmVTdGFnZS53YWxsTFtrXVsxXS54ICogYWN0aXZlU3RhZ2VfMS5hY3RpdmVTdGFnZS5zY2FsZSkgKyBhY3RpdmVTdGFnZV8xLmFjdGl2ZVN0YWdlLm9mZnNldFswXSwgKGFjdGl2ZVN0YWdlXzEuYWN0aXZlU3RhZ2Uud2FsbExba11bMV0ueSAqIC1hY3RpdmVTdGFnZV8xLmFjdGl2ZVN0YWdlLnNjYWxlKSArIGFjdGl2ZVN0YWdlXzEuYWN0aXZlU3RhZ2Uub2Zmc2V0WzFdKTtcbiAgICAgICAgbWFpbl8xLmZnMS5jbG9zZVBhdGgoKTtcbiAgICAgICAgbWFpbl8xLmZnMS5zdHJva2UoKTtcbiAgICB9XG4gICAgbWFpbl8xLmZnMS5zdHJva2VTdHlsZSA9IFwiIzk4NjdkZVwiO1xuICAgIGZvciAobGV0IGwgPSAwOyBsIDwgYWN0aXZlU3RhZ2VfMS5hY3RpdmVTdGFnZS53YWxsUi5sZW5ndGg7IGwrKykge1xuICAgICAgICBtYWluXzEuZmcxLmJlZ2luUGF0aCgpO1xuICAgICAgICBtYWluXzEuZmcxLm1vdmVUbygoYWN0aXZlU3RhZ2VfMS5hY3RpdmVTdGFnZS53YWxsUltsXVswXS54ICogYWN0aXZlU3RhZ2VfMS5hY3RpdmVTdGFnZS5zY2FsZSkgKyBhY3RpdmVTdGFnZV8xLmFjdGl2ZVN0YWdlLm9mZnNldFswXSwgKGFjdGl2ZVN0YWdlXzEuYWN0aXZlU3RhZ2Uud2FsbFJbbF1bMF0ueSAqIC1hY3RpdmVTdGFnZV8xLmFjdGl2ZVN0YWdlLnNjYWxlKSArIGFjdGl2ZVN0YWdlXzEuYWN0aXZlU3RhZ2Uub2Zmc2V0WzFdKTtcbiAgICAgICAgbWFpbl8xLmZnMS5saW5lVG8oKGFjdGl2ZVN0YWdlXzEuYWN0aXZlU3RhZ2Uud2FsbFJbbF1bMV0ueCAqIGFjdGl2ZVN0YWdlXzEuYWN0aXZlU3RhZ2Uuc2NhbGUpICsgYWN0aXZlU3RhZ2VfMS5hY3RpdmVTdGFnZS5vZmZzZXRbMF0sIChhY3RpdmVTdGFnZV8xLmFjdGl2ZVN0YWdlLndhbGxSW2xdWzFdLnkgKiAtYWN0aXZlU3RhZ2VfMS5hY3RpdmVTdGFnZS5zY2FsZSkgKyBhY3RpdmVTdGFnZV8xLmFjdGl2ZVN0YWdlLm9mZnNldFsxXSk7XG4gICAgICAgIG1haW5fMS5mZzEuY2xvc2VQYXRoKCk7XG4gICAgICAgIG1haW5fMS5mZzEuc3Ryb2tlKCk7XG4gICAgfVxuICAgIG1haW5fMS5mZzEuc3Ryb2tlU3R5bGUgPSBcIiNFN0E0NENcIjtcbiAgICBtYWluXzEuZmcxLmxpbmVXaWR0aCA9IDI7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBhY3RpdmVTdGFnZV8xLmFjdGl2ZVN0YWdlLmxlZGdlLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGNvbnN0IGUgPSBhY3RpdmVTdGFnZV8xLmFjdGl2ZVN0YWdlLmxlZGdlW2ldO1xuICAgICAgICBjb25zdCBwQSA9IGFjdGl2ZVN0YWdlXzEuYWN0aXZlU3RhZ2VbZVswXV1bZVsxXV1bZVsyXV07XG4gICAgICAgIGNvbnN0IHBCID0gYWN0aXZlU3RhZ2VfMS5hY3RpdmVTdGFnZVtlWzBdXVtlWzFdXVsxIC0gZVsyXV07XG4gICAgICAgIGNvbnN0IGFuZyA9IE1hdGguYXRhbjIoKHBCLnkgLSBwQS55KSwgKHBCLnggLSBwQS54KSk7XG4gICAgICAgIGNvbnN0IG1hZ25pdHVkZSA9ICgwLCBsaW5BbGdfMS5ldWNsaWRlYW5EaXN0KShwQSwgcEIpO1xuICAgICAgICBjb25zdCBsZW5ndGggPSBNYXRoLm1pbigwLjQgKiBtYWduaXR1ZGUsIDIwIC8gYWN0aXZlU3RhZ2VfMS5hY3RpdmVTdGFnZS5zY2FsZSk7XG4gICAgICAgIGNvbnN0IHBDID0gbmV3IFZlYzJEXzEuVmVjMkQocEEueCArIGxlbmd0aCAqIE1hdGguY29zKGFuZyksIHBBLnkgKyBsZW5ndGggKiBNYXRoLnNpbihhbmcpKTtcbiAgICAgICAgbWFpbl8xLmZnMS5iZWdpblBhdGgoKTtcbiAgICAgICAgbWFpbl8xLmZnMS5tb3ZlVG8oKHBBLnggKiBhY3RpdmVTdGFnZV8xLmFjdGl2ZVN0YWdlLnNjYWxlKSArIGFjdGl2ZVN0YWdlXzEuYWN0aXZlU3RhZ2Uub2Zmc2V0WzBdLCAocEEueSAqIC1hY3RpdmVTdGFnZV8xLmFjdGl2ZVN0YWdlLnNjYWxlKSArIGFjdGl2ZVN0YWdlXzEuYWN0aXZlU3RhZ2Uub2Zmc2V0WzFdKTtcbiAgICAgICAgbWFpbl8xLmZnMS5saW5lVG8oKHBDLnggKiBhY3RpdmVTdGFnZV8xLmFjdGl2ZVN0YWdlLnNjYWxlKSArIGFjdGl2ZVN0YWdlXzEuYWN0aXZlU3RhZ2Uub2Zmc2V0WzBdLCAocEMueSAqIC1hY3RpdmVTdGFnZV8xLmFjdGl2ZVN0YWdlLnNjYWxlKSArIGFjdGl2ZVN0YWdlXzEuYWN0aXZlU3RhZ2Uub2Zmc2V0WzFdKTtcbiAgICAgICAgbWFpbl8xLmZnMS5jbG9zZVBhdGgoKTtcbiAgICAgICAgbWFpbl8xLmZnMS5zdHJva2UoKTtcbiAgICB9XG59XG47XG5jb25zdCBzd2lybFRpbWVyID0gMDtcbmNvbnN0IHN3aXJsU3dpdGNoID0gZmFsc2U7XG5jb25zdCB3YWxsQ29sb3VyID0gW1wicmdiKDI1NSwwLDQwKVwiLCBcInJnYigwLDI1NSwyNTUpXCIsIFwicmdiKDEyNSwxMjUsMTI1KVwiLCBcInJnYigxMjUsNTAsMjU1KVwiXTtcbmZ1bmN0aW9uIHdhbGxDb2xvdXJGcm9tRGFtYWdlVHlwZShkYW1hZ2VUeXBlKSB7XG4gICAgaWYgKGRhbWFnZVR5cGUgPT09IFwiZmlyZVwiKSB7XG4gICAgICAgIHJldHVybiB3YWxsQ29sb3VyWzBdO1xuICAgIH1cbiAgICBlbHNlIGlmIChkYW1hZ2VUeXBlID09PSBcImVsZWN0cmljXCIpIHtcbiAgICAgICAgcmV0dXJuIHdhbGxDb2xvdXJbMV07XG4gICAgfVxuICAgIGVsc2UgaWYgKGRhbWFnZVR5cGUgPT09IFwic2xhc2hcIikge1xuICAgICAgICByZXR1cm4gd2FsbENvbG91clsyXTtcbiAgICB9XG4gICAgZWxzZSBpZiAoZGFtYWdlVHlwZSA9PT0gXCJkYXJrbmVzc1wiKSB7XG4gICAgICAgIHJldHVybiB3YWxsQ29sb3VyWzNdO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgcmV0dXJuIFwicmdiKDAsNTAsMTgwKVwiO1xuICAgIH1cbn1cbjtcbmxldCB3YWxsQ3ljbGUgPSAwO1xuZnVuY3Rpb24gY2FsY3VsYXRlRGFtYWdlV2FsbENvbG91cnMoKSB7XG4gICAgbGV0IGEgPSAwO1xuICAgIGlmICh3YWxsQ3ljbGUgPCAyNDApIHtcbiAgICAgICAgd2FsbEN5Y2xlKys7XG4gICAgICAgIGlmICh3YWxsQ3ljbGUgPiAxMjApIHtcbiAgICAgICAgICAgIGEgPSAyNDAgLSB3YWxsQ3ljbGU7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBhID0gd2FsbEN5Y2xlO1xuICAgICAgICB9XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICB3YWxsQ3ljbGUgPSAwO1xuICAgIH1cbiAgICBjb25zdCBuID0gTWF0aC5yb3VuZCgyNTUgKiBhIC8gMTIwKTtcbiAgICB3YWxsQ29sb3VyWzBdID0gXCJyZ2IoMjU1LFwiICsgbiArIFwiLDQwKVwiO1xuICAgIHdhbGxDb2xvdXJbMV0gPSBcInJnYihcIiArIG4gKyBcIiwyNTUsMjU1KVwiO1xuICAgIGNvbnN0IG0gPSBNYXRoLnJvdW5kKDEyNSArIG4gLyAyKTtcbiAgICB3YWxsQ29sb3VyWzJdID0gXCJyZ2IoXCIgKyBtICsgXCIsXCIgKyBtICsgXCIsXCIgKyBtICsgXCIpXCI7XG4gICAgd2FsbENvbG91clszXSA9IFwicmdiKFwiICsgTWF0aC5yb3VuZCgxMjUgLSBuIC8gMykgKyBcIiw1MCxcIiArIE1hdGgucm91bmQoMjU1IC0gbiAvIDMpICsgXCIpXCI7XG59XG5mdW5jdGlvbiBkcmF3RGFtYWdlTGluZSh0eXBlLCBjYW4sIHN0YWdlKSB7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBzdGFnZVt0eXBlXS5sZW5ndGg7IGkrKykge1xuICAgICAgICBjb25zdCBzdXJmYWNlUHJvcGVydGllcyA9IHN0YWdlW3R5cGVdW2ldWzJdO1xuICAgICAgICBpZiAoc3VyZmFjZVByb3BlcnRpZXMgIT09IHVuZGVmaW5lZCAmJiBzdXJmYWNlUHJvcGVydGllcy5kYW1hZ2VUeXBlICE9PSBudWxsKSB7XG4gICAgICAgICAgICBjYW4uc3Ryb2tlU3R5bGUgPSB3YWxsQ29sb3VyRnJvbURhbWFnZVR5cGUoc3VyZmFjZVByb3BlcnRpZXMuZGFtYWdlVHlwZSk7XG4gICAgICAgICAgICBjYW4uYmVnaW5QYXRoKCk7XG4gICAgICAgICAgICBjYW4ubW92ZVRvKChzdGFnZVt0eXBlXVtpXVswXS54ICogc3RhZ2Uuc2NhbGUpICsgc3RhZ2Uub2Zmc2V0WzBdLCAoc3RhZ2VbdHlwZV1baV1bMF0ueSAqIC1zdGFnZS5zY2FsZSkgKyBzdGFnZS5vZmZzZXRbMV0pO1xuICAgICAgICAgICAgY2FuLmxpbmVUbygoc3RhZ2VbdHlwZV1baV1bMV0ueCAqIHN0YWdlLnNjYWxlKSArIHN0YWdlLm9mZnNldFswXSwgKHN0YWdlW3R5cGVdW2ldWzFdLnkgKiAtc3RhZ2Uuc2NhbGUpICsgc3RhZ2Uub2Zmc2V0WzFdKTtcbiAgICAgICAgICAgIGNhbi5zdHJva2UoKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbmZ1bmN0aW9uIGRyYXdTdGFnZSgpIHtcbiAgICBjYWxjdWxhdGVEYW1hZ2VXYWxsQ29sb3VycygpO1xuICAgIGlmIChhY3RpdmVTdGFnZV8xLmFjdGl2ZVN0YWdlLm5hbWUgPT09IFwieXN0b3J5XCIpIHtcbiAgICAgICAgLy8gUmFuZGFsbFxuICAgICAgICByYW5kYWxsVGltZXIrKztcbiAgICAgICAgaWYgKHJhbmRhbGxUaW1lciA9PT0gMzApIHtcbiAgICAgICAgICAgIHJhbmRhbGxUaW1lciA9IDA7XG4gICAgICAgIH1cbiAgICAgICAgbWFpbl8xLmJnMi5kcmF3SW1hZ2UocmFuZGFsbFtNYXRoLmZsb29yKHJhbmRhbGxUaW1lciAvIDEwKV0sIChhY3RpdmVTdGFnZV8xLmFjdGl2ZVN0YWdlLnBsYXRmb3JtWzBdWzBdLnggKiBhY3RpdmVTdGFnZV8xLmFjdGl2ZVN0YWdlLnNjYWxlKSArIGFjdGl2ZVN0YWdlXzEuYWN0aXZlU3RhZ2Uub2Zmc2V0WzBdIC0gMjAsIChhY3RpdmVTdGFnZV8xLmFjdGl2ZVN0YWdlLnBsYXRmb3JtWzBdWzBdLnkgKiAtYWN0aXZlU3RhZ2VfMS5hY3RpdmVTdGFnZS5zY2FsZSkgKyBhY3RpdmVTdGFnZV8xLmFjdGl2ZVN0YWdlLm9mZnNldFsxXSAtIDIwLCAxMDAsIDEwMCk7XG4gICAgfVxuICAgIGVsc2UgaWYgKGFjdGl2ZVN0YWdlXzEuYWN0aXZlU3RhZ2UubW92aW5nUGxhdHMgIT09IG51bGwgJiYgYWN0aXZlU3RhZ2VfMS5hY3RpdmVTdGFnZS5tb3ZpbmdQbGF0cyAhPT0gdW5kZWZpbmVkICYmIGFjdGl2ZVN0YWdlXzEuYWN0aXZlU3RhZ2UubW92aW5nUGxhdHMubGVuZ3RoICE9PSAwKSB7XG4gICAgICAgIG1haW5fMS5mZzIuc3Ryb2tlU3R5bGUgPSBcIiM0Nzk0YzZcIjtcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBhY3RpdmVTdGFnZV8xLmFjdGl2ZVN0YWdlLm1vdmluZ1BsYXRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBpZiAoYWN0aXZlU3RhZ2VfMS5hY3RpdmVTdGFnZS5uYW1lICE9PSBcImZvdW50YWluXCIgfHwgYWN0aXZlU3RhZ2VfMS5hY3RpdmVTdGFnZS5wbGF0Zm9ybVthY3RpdmVTdGFnZV8xLmFjdGl2ZVN0YWdlLm1vdmluZ1BsYXRzW2ldXVswXS55ID4gMCkge1xuICAgICAgICAgICAgICAgIG1haW5fMS5mZzIuYmVnaW5QYXRoKCk7XG4gICAgICAgICAgICAgICAgbWFpbl8xLmZnMi5tb3ZlVG8oKGFjdGl2ZVN0YWdlXzEuYWN0aXZlU3RhZ2UucGxhdGZvcm1bYWN0aXZlU3RhZ2VfMS5hY3RpdmVTdGFnZS5tb3ZpbmdQbGF0c1tpXV1bMF0ueCAqIGFjdGl2ZVN0YWdlXzEuYWN0aXZlU3RhZ2Uuc2NhbGUpICsgYWN0aXZlU3RhZ2VfMS5hY3RpdmVTdGFnZS5vZmZzZXRbMF0sIChhY3RpdmVTdGFnZV8xLmFjdGl2ZVN0YWdlLnBsYXRmb3JtW2FjdGl2ZVN0YWdlXzEuYWN0aXZlU3RhZ2UubW92aW5nUGxhdHNbaV1dWzBdLnkgKiAtYWN0aXZlU3RhZ2VfMS5hY3RpdmVTdGFnZS5zY2FsZSkgKyBhY3RpdmVTdGFnZV8xLmFjdGl2ZVN0YWdlLm9mZnNldFsxXSk7XG4gICAgICAgICAgICAgICAgbWFpbl8xLmZnMi5saW5lVG8oKGFjdGl2ZVN0YWdlXzEuYWN0aXZlU3RhZ2UucGxhdGZvcm1bYWN0aXZlU3RhZ2VfMS5hY3RpdmVTdGFnZS5tb3ZpbmdQbGF0c1tpXV1bMV0ueCAqIGFjdGl2ZVN0YWdlXzEuYWN0aXZlU3RhZ2Uuc2NhbGUpICsgYWN0aXZlU3RhZ2VfMS5hY3RpdmVTdGFnZS5vZmZzZXRbMF0sIChhY3RpdmVTdGFnZV8xLmFjdGl2ZVN0YWdlLnBsYXRmb3JtW2FjdGl2ZVN0YWdlXzEuYWN0aXZlU3RhZ2UubW92aW5nUGxhdHNbaV1dWzFdLnkgKiAtYWN0aXZlU3RhZ2VfMS5hY3RpdmVTdGFnZS5zY2FsZSkgKyBhY3RpdmVTdGFnZV8xLmFjdGl2ZVN0YWdlLm9mZnNldFsxXSk7XG4gICAgICAgICAgICAgICAgbWFpbl8xLmZnMi5jbG9zZVBhdGgoKTtcbiAgICAgICAgICAgICAgICBtYWluXzEuZmcyLnN0cm9rZSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIG1haW5fMS5mZzIuZmlsbFN0eWxlID0gZXhwb3J0cy5ib3hGaWxsO1xuICAgIGlmIChhY3RpdmVTdGFnZV8xLmFjdGl2ZVN0YWdlLmJveCAhPT0gbnVsbCAmJiBhY3RpdmVTdGFnZV8xLmFjdGl2ZVN0YWdlLmJveCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIGZvciAobGV0IGogPSAwOyBqIDwgYWN0aXZlU3RhZ2VfMS5hY3RpdmVTdGFnZS5ib3gubGVuZ3RoOyBqKyspIHtcbiAgICAgICAgICAgIG1haW5fMS5mZzIuZmlsbFJlY3QoKGFjdGl2ZVN0YWdlXzEuYWN0aXZlU3RhZ2UuYm94W2pdLm1pbi54ICogYWN0aXZlU3RhZ2VfMS5hY3RpdmVTdGFnZS5zY2FsZSkgKyBhY3RpdmVTdGFnZV8xLmFjdGl2ZVN0YWdlLm9mZnNldFswXSwgKGFjdGl2ZVN0YWdlXzEuYWN0aXZlU3RhZ2UuYm94W2pdLm1heC55ICogLWFjdGl2ZVN0YWdlXzEuYWN0aXZlU3RhZ2Uuc2NhbGUpICsgYWN0aXZlU3RhZ2VfMS5hY3RpdmVTdGFnZS5vZmZzZXRbMV0sIChhY3RpdmVTdGFnZV8xLmFjdGl2ZVN0YWdlLmJveFtqXS5tYXgueCAtIGFjdGl2ZVN0YWdlXzEuYWN0aXZlU3RhZ2UuYm94W2pdLm1pbi54KSAqIGFjdGl2ZVN0YWdlXzEuYWN0aXZlU3RhZ2Uuc2NhbGUsIChhY3RpdmVTdGFnZV8xLmFjdGl2ZVN0YWdlLmJveFtqXS5tYXgueSAtIGFjdGl2ZVN0YWdlXzEuYWN0aXZlU3RhZ2UuYm94W2pdLm1pbi55KSAqIGFjdGl2ZVN0YWdlXzEuYWN0aXZlU3RhZ2Uuc2NhbGUpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGlmIChhY3RpdmVTdGFnZV8xLmFjdGl2ZVN0YWdlLnBvbHlnb24gIT09IG51bGwgJiYgYWN0aXZlU3RhZ2VfMS5hY3RpdmVTdGFnZS5wb2x5Z29uICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgZm9yIChsZXQgaiA9IDA7IGogPCBhY3RpdmVTdGFnZV8xLmFjdGl2ZVN0YWdlLnBvbHlnb24ubGVuZ3RoOyBqKyspIHtcbiAgICAgICAgICAgIGNvbnN0IHAgPSBhY3RpdmVTdGFnZV8xLmFjdGl2ZVN0YWdlLnBvbHlnb25bal07XG4gICAgICAgICAgICBtYWluXzEuZmcyLmJlZ2luUGF0aCgpO1xuICAgICAgICAgICAgbWFpbl8xLmZnMi5tb3ZlVG8ocFswXS54ICogYWN0aXZlU3RhZ2VfMS5hY3RpdmVTdGFnZS5zY2FsZSArIGFjdGl2ZVN0YWdlXzEuYWN0aXZlU3RhZ2Uub2Zmc2V0WzBdLCBwWzBdLnkgKiAtYWN0aXZlU3RhZ2VfMS5hY3RpdmVTdGFnZS5zY2FsZSArIGFjdGl2ZVN0YWdlXzEuYWN0aXZlU3RhZ2Uub2Zmc2V0WzFdKTtcbiAgICAgICAgICAgIGZvciAobGV0IG4gPSAxOyBuIDwgcC5sZW5ndGg7IG4rKykge1xuICAgICAgICAgICAgICAgIG1haW5fMS5mZzIubGluZVRvKHBbbl0ueCAqIGFjdGl2ZVN0YWdlXzEuYWN0aXZlU3RhZ2Uuc2NhbGUgKyBhY3RpdmVTdGFnZV8xLmFjdGl2ZVN0YWdlLm9mZnNldFswXSwgcFtuXS55ICogLWFjdGl2ZVN0YWdlXzEuYWN0aXZlU3RhZ2Uuc2NhbGUgKyBhY3RpdmVTdGFnZV8xLmFjdGl2ZVN0YWdlLm9mZnNldFsxXSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBtYWluXzEuZmcyLmNsb3NlUGF0aCgpO1xuICAgICAgICAgICAgbWFpbl8xLmZnMi5maWxsKCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgaWYgKGFjdGl2ZVN0YWdlXzEuYWN0aXZlU3RhZ2UuYmFja2dyb3VuZCAhPT0gbnVsbCAmJiBhY3RpdmVTdGFnZV8xLmFjdGl2ZVN0YWdlLmJhY2tncm91bmQgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICBpZiAoYWN0aXZlU3RhZ2VfMS5hY3RpdmVTdGFnZS5iYWNrZ3JvdW5kLnBvbHlnb24gIT09IG51bGwgJiYgYWN0aXZlU3RhZ2VfMS5hY3RpdmVTdGFnZS5iYWNrZ3JvdW5kLnBvbHlnb24gIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgbWFpbl8xLmJnMi5zYXZlKCk7XG4gICAgICAgICAgICBtYWluXzEuYmcyLmZpbGxTdHlsZSA9IGV4cG9ydHMuYm94RmlsbEJHO1xuICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBhY3RpdmVTdGFnZV8xLmFjdGl2ZVN0YWdlLmJhY2tncm91bmQucG9seWdvbi5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgIGNvbnN0IHAgPSBhY3RpdmVTdGFnZV8xLmFjdGl2ZVN0YWdlLmJhY2tncm91bmQucG9seWdvbltpXTtcbiAgICAgICAgICAgICAgICBtYWluXzEuYmcyLmJlZ2luUGF0aCgpO1xuICAgICAgICAgICAgICAgIG1haW5fMS5iZzIubW92ZVRvKHBbMF0ueCAqIGFjdGl2ZVN0YWdlXzEuYWN0aXZlU3RhZ2Uuc2NhbGUgKyBhY3RpdmVTdGFnZV8xLmFjdGl2ZVN0YWdlLm9mZnNldFswXSwgcFswXS55ICogLWFjdGl2ZVN0YWdlXzEuYWN0aXZlU3RhZ2Uuc2NhbGUgKyBhY3RpdmVTdGFnZV8xLmFjdGl2ZVN0YWdlLm9mZnNldFsxXSk7XG4gICAgICAgICAgICAgICAgZm9yIChsZXQgbiA9IDE7IG4gPCBwLmxlbmd0aDsgbisrKSB7XG4gICAgICAgICAgICAgICAgICAgIG1haW5fMS5iZzIubGluZVRvKHBbbl0ueCAqIGFjdGl2ZVN0YWdlXzEuYWN0aXZlU3RhZ2Uuc2NhbGUgKyBhY3RpdmVTdGFnZV8xLmFjdGl2ZVN0YWdlLm9mZnNldFswXSwgcFtuXS55ICogLWFjdGl2ZVN0YWdlXzEuYWN0aXZlU3RhZ2Uuc2NhbGUgKyBhY3RpdmVTdGFnZV8xLmFjdGl2ZVN0YWdlLm9mZnNldFsxXSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIG1haW5fMS5iZzIuY2xvc2VQYXRoKCk7XG4gICAgICAgICAgICAgICAgbWFpbl8xLmJnMi5maWxsKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGFjdGl2ZVN0YWdlXzEuYWN0aXZlU3RhZ2UuYmFja2dyb3VuZC5saW5lICE9PSBudWxsICYmIGFjdGl2ZVN0YWdlXzEuYWN0aXZlU3RhZ2UuYmFja2dyb3VuZC5saW5lICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIG1haW5fMS5iZzIubGluZVdpZHRoID0gMztcbiAgICAgICAgICAgIG1haW5fMS5iZzIuc3Ryb2tlU3R5bGUgPSBleHBvcnRzLmJveEZpbGxCRztcbiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgYWN0aXZlU3RhZ2VfMS5hY3RpdmVTdGFnZS5iYWNrZ3JvdW5kLmxpbmUubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICBjb25zdCBsTCA9IGFjdGl2ZVN0YWdlXzEuYWN0aXZlU3RhZ2UuYmFja2dyb3VuZC5saW5lW2ldWzBdO1xuICAgICAgICAgICAgICAgIGNvbnN0IGxSID0gYWN0aXZlU3RhZ2VfMS5hY3RpdmVTdGFnZS5iYWNrZ3JvdW5kLmxpbmVbaV1bMV07XG4gICAgICAgICAgICAgICAgbWFpbl8xLmJnMi5iZWdpblBhdGgoKTtcbiAgICAgICAgICAgICAgICBtYWluXzEuYmcyLm1vdmVUbyhsTC54ICogYWN0aXZlU3RhZ2VfMS5hY3RpdmVTdGFnZS5zY2FsZSArIGFjdGl2ZVN0YWdlXzEuYWN0aXZlU3RhZ2Uub2Zmc2V0WzBdLCBsTC55ICogLWFjdGl2ZVN0YWdlXzEuYWN0aXZlU3RhZ2Uuc2NhbGUgKyBhY3RpdmVTdGFnZV8xLmFjdGl2ZVN0YWdlLm9mZnNldFsxXSk7XG4gICAgICAgICAgICAgICAgbWFpbl8xLmJnMi5saW5lVG8obFIueCAqIGFjdGl2ZVN0YWdlXzEuYWN0aXZlU3RhZ2Uuc2NhbGUgKyBhY3RpdmVTdGFnZV8xLmFjdGl2ZVN0YWdlLm9mZnNldFswXSwgbFIueSAqIC1hY3RpdmVTdGFnZV8xLmFjdGl2ZVN0YWdlLnNjYWxlICsgYWN0aXZlU3RhZ2VfMS5hY3RpdmVTdGFnZS5vZmZzZXRbMV0pO1xuICAgICAgICAgICAgICAgIG1haW5fMS5iZzIuY2xvc2VQYXRoKCk7XG4gICAgICAgICAgICAgICAgbWFpbl8xLmJnMi5zdHJva2UoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIG1haW5fMS5iZzIucmVzdG9yZSgpO1xuICAgICAgICB9XG4gICAgfVxuICAgIG1haW5fMS5mZzIubGluZVdpZHRoID0gNDtcbiAgICBjb25zdCB0eXBlcyA9IFtcIndhbGxMXCIsIFwid2FsbFJcIiwgXCJncm91bmRcIiwgXCJjZWlsaW5nXCJdO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdHlwZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgZHJhd0RhbWFnZUxpbmUodHlwZXNbaV0sIG1haW5fMS5mZzIsIGFjdGl2ZVN0YWdlXzEuYWN0aXZlU3RhZ2UpO1xuICAgIH1cbiAgICBtYWluXzEuZmcyLnN0cm9rZVN0eWxlID0gXCIjZTdhNDRjXCI7XG4gICAgY29uc3QgZXggPSAwO1xufVxuO1xuZnVuY3Rpb24gc2V0QmFja2dyb3VuZFR5cGUodmFsKSB7XG4gICAgZXhwb3J0cy5iYWNrZ3JvdW5kVHlwZSA9IHZhbDtcbn1cbjtcbmNsYXNzIGJnU3RhciB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIGNvbnN0IHZTZWVkID0gTWF0aC5yYW5kb20oKTtcbiAgICAgICAgdGhpcy52ZWxvY2l0eSA9IG5ldyBWZWMyRF8xLlZlYzJEKDUgKiB2U2VlZCAqIE1hdGguc2lnbigwLjUgLSBNYXRoLnJhbmRvbSgpKSwgNSAqICgxIC0gdlNlZWQpICogTWF0aC5zaWduKDAuNSAtIE1hdGgucmFuZG9tKCkpKTtcbiAgICAgICAgaWYgKCgwLCB0cmFuc3BhcmVuY3lfMS5nZXRUcmFuc3BhcmVuY3kpKCkpIHtcbiAgICAgICAgICAgIHRoaXMuY29sb3VyID0gXCJoc2woXCIgKyAzNTggKiBNYXRoLnJhbmRvbSgpICsgXCIsIDEwMCUsIDUwJSlcIjtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuY29sb3VyID0gXCJoc2woXCIgKyAzNTggKiBNYXRoLnJhbmRvbSgpICsgXCIsMTAwJSwxNSUpXCI7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5wb3MgPSBuZXcgVmVjMkRfMS5WZWMyRCgwLCAwKTtcbiAgICAgICAgdGhpcy5saWZlID0gMDtcbiAgICB9XG59XG5leHBvcnRzLmJnU3RhciA9IGJnU3RhcjtcbjtcbmZ1bmN0aW9uIGRyYXdCYWNrZ3JvdW5kSW5pdCgpIHtcbiAgICB2YXIgX2EsIF9iLCBfYywgX2Q7XG4gICAgY29uc3QgYmdHcmFkID0gbWFpbl8xLmJnMS5jcmVhdGVMaW5lYXJHcmFkaWVudCgwLCAwLCAwLCA1MDApO1xuICAgIGJnR3JhZC5hZGRDb2xvclN0b3AoMCwgXCJyZ2IoMjQsIDE3LCA2NilcIik7XG4gICAgYmdHcmFkLmFkZENvbG9yU3RvcCgxLCBcImJsYWNrXCIpO1xuICAgIG1haW5fMS5iZzEuZmlsbFN0eWxlID0gYmdHcmFkO1xuICAgIG1haW5fMS5iZzEuZmlsbFJlY3QoLTEwMCwgLTEwMCwgKF9iID0gKF9hID0gbWFpbl8xLmxheWVycyA9PT0gbnVsbCB8fCBtYWluXzEubGF5ZXJzID09PSB2b2lkIDAgPyB2b2lkIDAgOiBtYWluXzEubGF5ZXJzLkJHMSkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLndpZHRoKSAhPT0gbnVsbCAmJiBfYiAhPT0gdm9pZCAwID8gX2IgOiAwICsgMjAwLCAoX2QgPSAoX2MgPSBtYWluXzEubGF5ZXJzID09PSBudWxsIHx8IG1haW5fMS5sYXllcnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG1haW5fMS5sYXllcnMuQkcxKSA9PT0gbnVsbCB8fCBfYyA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2MuaGVpZ2h0KSAhPT0gbnVsbCAmJiBfZCAhPT0gdm9pZCAwID8gX2QgOiAwICsgMjAwKTtcbiAgICA7XG59XG47XG5mdW5jdGlvbiBkcmF3QmFja2dyb3VuZCgpIHtcbiAgICBpZiAoZXhwb3J0cy5iYWNrZ3JvdW5kVHlwZSA9PT0gMCkge1xuICAgICAgICBkcmF3U3RhcnMoKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIGRyYXdUdW5uZWwoKTtcbiAgICB9XG59XG47XG5mdW5jdGlvbiBkcmF3VHVubmVsKCkge1xuICAgIG1haW5fMS5iZzIubGluZVdpZHRoID0gMjtcbiAgICBhbmcgKz0gMC4wMDU7XG4gICAgbGV0IGFuZ0IgPSBhbmc7XG4gICAgbWFpbl8xLmJnMi5iZWdpblBhdGgoKTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IDE2OyBpKyspIHtcbiAgICAgICAgY29uc3QgdiA9ICgwLCByZW5kZXJfMS5yb3RhdGVWZWN0b3IpKDAsIDgwMCwgYW5nQik7XG4gICAgICAgIG1haW5fMS5iZzIubW92ZVRvKDYwMCwgMzc1KTtcbiAgICAgICAgbWFpbl8xLmJnMi5saW5lVG8oNjAwICsgdi54LCAzNzUgKyB2LnkpO1xuICAgICAgICBhbmdCICs9IE1hdGguUEkgLyA4O1xuICAgIH1cbiAgICBtYWluXzEuYmcyLnN0cm9rZSgpO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgY2lyY2xlU2l6ZS5sZW5ndGg7IGkrKykge1xuICAgICAgICBjaXJjbGVTaXplW2ldKys7XG4gICAgICAgIGlmIChjaXJjbGVTaXplW2ldID4gMjAwKSB7XG4gICAgICAgICAgICBjaXJjbGVTaXplW2ldID0gMDtcbiAgICAgICAgfVxuICAgICAgICBtYWluXzEuYmcyLmxpbmVXaWR0aCA9IE1hdGgubWF4KDEsIE1hdGgucm91bmQoMyAqIChjaXJjbGVTaXplW2ldIC8gNjApKSk7XG4gICAgICAgIG1haW5fMS5iZzIuYmVnaW5QYXRoKCk7XG4gICAgICAgIG1haW5fMS5iZzIuYXJjKDYwMCwgMzc1LCBjaXJjbGVTaXplW2ldICogNCwgMCwgcmVuZGVyXzEudHdvUGkpO1xuICAgICAgICBtYWluXzEuYmcyLmNsb3NlUGF0aCgpO1xuICAgICAgICBtYWluXzEuYmcyLnN0cm9rZSgpO1xuICAgIH1cbn1cbjtcbmZ1bmN0aW9uIGRyYXdTdGFycygpIHtcbiAgICBiZ1NwYXJrbGUtLTtcbiAgICBmb3IgKGxldCBwID0gMDsgcCA8IDIwOyBwKyspIHtcbiAgICAgICAgaWYgKGJnU3RhcnNbcF0ucG9zLnggPiAxMjUwIHx8IGJnU3RhcnNbcF0ucG9zLnkgPiA4MDAgfHwgYmdTdGFyc1twXS5wb3MueCA8IC01MCB8fCBiZ1N0YXJzW3BdLnBvcy55IDwgLTUwKSB7XG4gICAgICAgICAgICBiZ1N0YXJzW3BdLnBvcyA9IG5ldyBWZWMyRF8xLlZlYzJEKDYwMCwgMzc1KTtcbiAgICAgICAgICAgIGJnU3RhcnNbcF0ubGlmZSA9IDA7XG4gICAgICAgICAgICBjb25zdCB2U2VlZCA9IE1hdGgucmFuZG9tKCk7XG4gICAgICAgICAgICBiZ1N0YXJzW3BdLnZlbG9jaXR5ID0gbmV3IFZlYzJEXzEuVmVjMkQoNSAqIHZTZWVkICogTWF0aC5zaWduKDAuNSAtIE1hdGgucmFuZG9tKCkpLCA1ICogKDEgLSB2U2VlZCkgKiBNYXRoLnNpZ24oMC41IC0gTWF0aC5yYW5kb20oKSkpO1xuICAgICAgICB9XG4gICAgICAgIGJnU3RhcnNbcF0ucG9zLnggKz0gYmdTdGFyc1twXS52ZWxvY2l0eS54O1xuICAgICAgICBiZ1N0YXJzW3BdLnBvcy55ICs9IGJnU3RhcnNbcF0udmVsb2NpdHkueTtcbiAgICAgICAgYmdTdGFyc1twXS5saWZlKys7XG4gICAgICAgIGlmIChiZ1NwYXJrbGUgPT09IDApIHtcbiAgICAgICAgICAgIG1haW5fMS5iZzIuZmlsbFN0eWxlID0gYmdTdGFyc1twXS5jb2xvdXI7XG4gICAgICAgICAgICBpZiAoKDAsIHRyYW5zcGFyZW5jeV8xLmdldFRyYW5zcGFyZW5jeSkoKSkge1xuICAgICAgICAgICAgICAgIG1haW5fMS5iZzIuZ2xvYmFsQWxwaGEgPSBNYXRoLm1pbihiZ1N0YXJzW3BdLmxpZmUgLyAzMDAsIDEpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgbWFpbl8xLmJnMi5iZWdpblBhdGgoKTtcbiAgICAgICAgICAgIG1haW5fMS5iZzIuYXJjKGJnU3RhcnNbcF0ucG9zLngsIGJnU3RhcnNbcF0ucG9zLnksIDUsIHJlbmRlcl8xLnR3b1BpLCAwKTtcbiAgICAgICAgICAgIDtcbiAgICAgICAgICAgIG1haW5fMS5iZzIuZmlsbCgpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGlmIChiZ1NwYXJrbGUgPT09IDApIHtcbiAgICAgICAgYmdTcGFya2xlID0gMjtcbiAgICB9XG4gICAgbWFpbl8xLmJnMi5nbG9iYWxBbHBoYSA9IDE7XG4gICAgZm9yIChsZXQgayA9IDE7IGsgPiAtMTsgay0tKSB7XG4gICAgICAgIGZvciAobGV0IGogPSAwOyBqIDwgOTsgaisrKSB7XG4gICAgICAgICAgICAvL2JnUG9zW2pdICs9IGRpcmVjdGlvbltqXSo1Kk1hdGgucmFuZG9tKCk7XG4gICAgICAgICAgICBpZiAoaiA9PT0gOCkge1xuICAgICAgICAgICAgICAgIGJnUG9zW2tdW2pdICs9IGRpcmVjdGlvbltrXVtqXSAqIDAuMiAqIE1hdGgucmFuZG9tKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBiZ1Bvc1trXVtqXSArPSBkaXJlY3Rpb25ba11bal0gKiAxICogTWF0aC5yYW5kb20oKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHN3aXRjaCAoaikge1xuICAgICAgICAgICAgICAgIGNhc2UgMDpcbiAgICAgICAgICAgICAgICAgICAgaWYgKChkaXJlY3Rpb25ba11bal0gPT09IDEgJiYgYmdQb3Nba11bal0gPiAtMTApIHx8IChkaXJlY3Rpb25ba11bal0gPT09IC0xICYmIGJnUG9zW2tdW2pdIDwgLTIwMCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRpcmVjdGlvbltrXVtqXSAqPSAtMTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIDE6XG4gICAgICAgICAgICAgICAgICAgIGlmICgoZGlyZWN0aW9uW2tdW2pdID09PSAxICYmIGJnUG9zW2tdW2pdID4gNTUwIC0gayAqIDEwMCkgfHwgKGRpcmVjdGlvbltrXVtqXSA9PT0gLTEgJiYgYmdQb3Nba11bal0gPCA0NTAgLSBrICogMTAwKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgZGlyZWN0aW9uW2tdW2pdICo9IC0xO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgMjpcbiAgICAgICAgICAgICAgICAgICAgaWYgKChkaXJlY3Rpb25ba11bal0gPT09IDEgJiYgYmdQb3Nba11bal0gPiA1NTApIHx8IChkaXJlY3Rpb25ba11bal0gPT09IC0xICYmIGJnUG9zW2tdW2pdIDwgMCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRpcmVjdGlvbltrXVtqXSAqPSAtMTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIDM6XG4gICAgICAgICAgICAgICAgICAgIGlmICgoZGlyZWN0aW9uW2tdW2pdID09PSAxICYmIGJnUG9zW2tdW2pdID4gNTUwIC0gayAqIDEwMCkgfHwgKGRpcmVjdGlvbltrXVtqXSA9PT0gLTEgJiYgYmdQb3Nba11bal0gPCA0NTAgLSBrICogMTAwKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgZGlyZWN0aW9uW2tdW2pdICo9IC0xO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgNDpcbiAgICAgICAgICAgICAgICAgICAgaWYgKChkaXJlY3Rpb25ba11bal0gPT09IDEgJiYgYmdQb3Nba11bal0gPiAxMTUwKSB8fCAoZGlyZWN0aW9uW2tdW2pdID09PSAtMSAmJiBiZ1Bvc1trXVtqXSA8IDYwMCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRpcmVjdGlvbltrXVtqXSAqPSAtMTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIDU6XG4gICAgICAgICAgICAgICAgICAgIGlmICgoZGlyZWN0aW9uW2tdW2pdID09PSAxICYmIGJnUG9zW2tdW2pdID4gNTUwIC0gayAqIDEwMCkgfHwgKGRpcmVjdGlvbltrXVtqXSA9PT0gLTEgJiYgYmdQb3Nba11bal0gPCA0NTAgLSBrICogMTAwKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgZGlyZWN0aW9uW2tdW2pdICo9IC0xO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgNjpcbiAgICAgICAgICAgICAgICAgICAgaWYgKChkaXJlY3Rpb25ba11bal0gPT09IDEgJiYgYmdQb3Nba11bal0gPiAxNDAwKSB8fCAoZGlyZWN0aW9uW2tdW2pdID09PSAtMSAmJiBiZ1Bvc1trXVtqXSA8IDEyMTApKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBkaXJlY3Rpb25ba11bal0gKj0gLTE7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSA3OlxuICAgICAgICAgICAgICAgICAgICBpZiAoKGRpcmVjdGlvbltrXVtqXSA9PT0gMSAmJiBiZ1Bvc1trXVtqXSA+IDU1MCAtIGsgKiAxMDApIHx8IChkaXJlY3Rpb25ba11bal0gPT09IC0xICYmIGJnUG9zW2tdW2pdIDwgNDUwIC0gayAqIDEwMCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRpcmVjdGlvbltrXVtqXSAqPSAtMTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIDg6XG4gICAgICAgICAgICAgICAgICAgIGlmICgoZGlyZWN0aW9uW2tdW2pdID09PSAxICYmIGJnUG9zW2tdW2pdID4gMzU3KSB8fCAoZGlyZWN0aW9uW2tdW2pdID09PSAtMSAmJiBiZ1Bvc1trXVtqXSA8IDEpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBkaXJlY3Rpb25ba11bal0gKj0gLTE7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCgwLCB0cmFuc3BhcmVuY3lfMS5nZXRUcmFuc3BhcmVuY3kpKCkpIHtcbiAgICAgICAgICAgIGV4cG9ydHMuYm94RmlsbCA9IFwiaHNsYShcIiArIGJnUG9zW2tdWzhdICsgXCIsIDEwMCUsIDUwJSwgXCIgKyAoMC4xNSAtIGsgKiAwLjA3KSArIFwiKVwiO1xuICAgICAgICAgICAgZXhwb3J0cy5ib3hGaWxsQkcgPSBcImhzbGEoXCIgKyBiZ1Bvc1trXVs4XSArIFwiLCAxMDAlLCA1MCUsIFwiICsgKDAuMTMgLSBrICogMC4wNykgKyBcIilcIjtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGV4cG9ydHMuYm94RmlsbCA9IFwiaHNsKFwiICsgYmdQb3Nba11bOF0gKyBcIiwgMTAwJSwgNyUpXCI7XG4gICAgICAgICAgICBleHBvcnRzLmJveEZpbGxCRyA9IFwiaHNsKFwiICsgYmdQb3Nba11bOF0gKyBcIiwgNTAlLCA3JSlcIjtcbiAgICAgICAgfVxuICAgICAgICBtYWluXzEuYmcyLmZpbGxTdHlsZSA9IGV4cG9ydHMuYm94RmlsbDtcbiAgICAgICAgbWFpbl8xLmJnMi5iZWdpblBhdGgoKTtcbiAgICAgICAgbWFpbl8xLmJnMi5tb3ZlVG8oYmdQb3Nba11bMF0sIGJnUG9zW2tdWzFdKTtcbiAgICAgICAgbWFpbl8xLmJnMi5iZXppZXJDdXJ2ZVRvKGJnUG9zW2tdWzJdLCBiZ1Bvc1trXVszXSwgYmdQb3Nba11bNF0sIGJnUG9zW2tdWzVdLCBiZ1Bvc1trXVs2XSwgYmdQb3Nba11bN10pO1xuICAgICAgICBpZiAoayA9PT0gMSkge1xuICAgICAgICAgICAgbWFpbl8xLmJnMi5saW5lVG8oYmdQb3NbMF1bNl0sIGJnUG9zWzBdWzddKTtcbiAgICAgICAgICAgIG1haW5fMS5iZzIuYmV6aWVyQ3VydmVUbyhiZ1Bvc1swXVs0XSwgYmdQb3NbMF1bNV0sIGJnUG9zWzBdWzJdLCBiZ1Bvc1swXVszXSwgYmdQb3NbMF1bMF0sIGJnUG9zWzBdWzFdKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIG1haW5fMS5iZzIubGluZVRvKDEyMDAsIDc1MCk7XG4gICAgICAgICAgICBtYWluXzEuYmcyLmxpbmVUbygwLCA3NTApO1xuICAgICAgICB9XG4gICAgICAgIG1haW5fMS5iZzIuY2xvc2VQYXRoKCk7XG4gICAgICAgIG1haW5fMS5iZzIuZmlsbCgpO1xuICAgIH1cbn1cbjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/stages/stagerender.ts\n");

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ /* webpack/runtime/getFullHash */
/******/ (() => {
/******/ 	__webpack_require__.h = () => ("ac62f49ac008df6edfff")
/******/ })();
/******/ 
/******/ }
);