"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdatemeleelight"]("main",{

/***/ "./src/input/input.ts":
/*!****************************!*\
  !*** ./src/input/input.ts ***!
  \****************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/*eslint indent:0*/\n// @flow\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.keyboardMap = exports.aiInputBank = exports.aiPlayer4 = exports.aiPlayer3 = exports.aiPlayer2 = exports.aiPlayer1 = exports.nullInputs = exports.nullInput = void 0;\nexports.inputData = inputData;\nexports.pollInputs = pollInputs;\nexports.showButton = showButton;\nexports.setCustomCenters = setCustomCenters;\nconst Vec2D_1 = __webpack_require__(/*! ../main/util/Vec2D */ \"./src/main/util/Vec2D.ts\");\nconst settings_1 = __webpack_require__(/*! ../settings */ \"./src/settings.ts\");\nconst main_1 = __webpack_require__(/*! ../main/main */ \"./src/main/main.ts\");\nconst retrieveGamepadInputs_1 = __webpack_require__(/*! ./gamepad/retrieveGamepadInputs */ \"./src/input/gamepad/retrieveGamepadInputs.ts\");\nconst meleeInputs_1 = __webpack_require__(/*! ./meleeInputs */ \"./src/input/meleeInputs.ts\");\nconst jquery_1 = __importDefault(__webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\"));\nconst replay_1 = __webpack_require__(/*! ../main/replay */ \"./src/main/replay.ts\");\nconst streamclient_1 = __webpack_require__(/*! ../main/multiplayer/streamclient */ \"./src/main/multiplayer/streamclient.js\");\nfunction inputData(list = [false, false, false, false, false, false, false, false, false, false, false, false, 0, 0, 0, 0, 0, 0]) {\n    return {\n        a: list[0],\n        b: list[1],\n        x: list[2],\n        y: list[3],\n        z: list[4],\n        r: list[5],\n        l: list[6],\n        s: list[7],\n        du: list[8],\n        dr: list[9],\n        dd: list[10],\n        dl: list[11],\n        lsX: (0, meleeInputs_1.deaden)(list[12]),\n        lsY: (0, meleeInputs_1.deaden)(list[13]),\n        csX: (0, meleeInputs_1.deaden)(list[14]),\n        csY: (0, meleeInputs_1.deaden)(list[15]),\n        lA: list[16],\n        rA: list[17],\n        rawX: list[12],\n        rawY: list[13],\n        rawcsX: list[14],\n        rawcsY: list[15]\n    };\n}\n;\nconst nullInput = () => inputData();\nexports.nullInput = nullInput;\nconst nullInputs = () => [inputData(),\n    inputData(),\n    inputData(),\n    inputData(),\n    inputData(),\n    inputData(),\n    inputData(),\n    inputData()\n];\nexports.nullInputs = nullInputs;\nexports.aiPlayer1 = [inputData(),\n    inputData(),\n    inputData(),\n    inputData(),\n    inputData(),\n    inputData(),\n    inputData(),\n    inputData()\n];\nexports.aiPlayer2 = [inputData(),\n    inputData(),\n    inputData(),\n    inputData(),\n    inputData(),\n    inputData(),\n    inputData(),\n    inputData()\n];\nexports.aiPlayer3 = [inputData(),\n    inputData(),\n    inputData(),\n    inputData(),\n    inputData(),\n    inputData(),\n    inputData(),\n    inputData()\n];\nexports.aiPlayer4 = [inputData(),\n    inputData(),\n    inputData(),\n    inputData(),\n    inputData(),\n    inputData(),\n    inputData(),\n    inputData()\n];\nexports.aiInputBank = [exports.aiPlayer1, exports.aiPlayer2, exports.aiPlayer3, exports.aiPlayer4];\n// should be able to move out the \"frameByFrame\" aspect of the following function\n// it is only used to make z button mean \"left trigger value = 0.35\" + \"A = true\".\nfunction pollInputs(gameMode, frameByFrame, controllerInfo, playerSlot, controllerIndex, keys, playertype) {\n    // input is the input for player i in the current frame\n    let input = (0, exports.nullInput)(); // initialise with default values\n    if (replay_1.replayActive) {\n        input = pollReplayInputs(gameMode, controllerInfo, playerSlot, controllerIndex, frameByFrame);\n    }\n    else if (playertype === 1 && gameMode === 3) {\n        return exports.aiInputBank[playerSlot][0];\n    }\n    else if (controllerInfo === \"keyboard\") { // keyboard controls\n        input = pollKeyboardInputs(gameMode, frameByFrame, keys);\n        // } else if (playertype === 2 || controllerInfo === 99) { // np: online play?\n        //   input = pollNetworkInputs(gameMode, controllerInfo, playerSlot, controllerIndex, frameByFrame);\n    }\n    else if (playertype === 0) {\n        input = pollGamepadInputs(gameMode, controllerInfo, playerSlot, controllerIndex, frameByFrame);\n    }\n    return input;\n}\nfunction pollNetworkInputs(gameMode, controllerType, playerSlot, controllerIndex, frameByFrame) {\n    return (0, streamclient_1.retrieveNetworkInputs)(playerSlot, controllerIndex);\n}\nfunction pollReplayInputs(gameMode, controllerType, playerSlot, controllerIndex, frameByFrame) {\n    return (0, replay_1.retrieveReplayInputs)(playerSlot, controllerIndex);\n}\nfunction pollKeyboardInputs(gameMode, frameByFrame, keys) {\n    const input = (0, exports.nullInput)(); // initialise with default values\n    let stickR = 1;\n    let stickL = 1;\n    let stickU = 1;\n    let stickD = 1;\n    if (gameMode === 3 || gameMode === 5) {\n        stickR = settings_1.keyMap.lstick.ranges[1];\n        stickL = settings_1.keyMap.lstick.ranges[2];\n        stickU = settings_1.keyMap.lstick.ranges[0];\n        stickD = settings_1.keyMap.lstick.ranges[3];\n    }\n    let lstickX = (keys[settings_1.keyMap.lstick.right[0]] || keys[settings_1.keyMap.lstick.right[1]]) ? ((keys[settings_1.keyMap.lstick.left[0]] ||\n        keys[settings_1.keyMap.lstick.left[1]]) ? 0 : stickR) : ((keys[settings_1.keyMap.lstick.left[0]] || keys[settings_1.keyMap.lstick.left[1]]) ?\n        -stickL : 0);\n    let lstickY = (keys[settings_1.keyMap.lstick.up[0]] || keys[settings_1.keyMap.lstick.up[1]]) ? ((keys[settings_1.keyMap.lstick.down[0]] || keys[settings_1.keyMap.lstick.down[1]]) ? 0 : stickU) : ((keys[settings_1.keyMap.lstick.down[0]] || keys[settings_1.keyMap.lstick.down[1]]) ? -stickD : 0);\n    let lAnalog = (keys[settings_1.keyMap.shoulders.lAnalog[0]] || keys[settings_1.keyMap.shoulders.lAnalog[1]]) ? settings_1.keyMap.shoulders.ranges[0] : 0;\n    let rAnalog = (keys[settings_1.keyMap.shoulders.rAnalog[0]] || keys[settings_1.keyMap.shoulders.rAnalog[1]]) ? settings_1.keyMap.shoulders.ranges[1] : 0;\n    if (gameMode === 3 || gameMode === 5) {\n        for (let j = 0; j < 5; j++) {\n            if (keys[settings_1.keyMap.lstick.modifiers[j][0]]) {\n                lstickX *= settings_1.keyMap.lstick.modifiers[j][1];\n                lstickY *= settings_1.keyMap.lstick.modifiers[j][2];\n            }\n            if (keys[settings_1.keyMap.shoulders.modifiers[j][0]]) {\n                lAnalog *= settings_1.keyMap.shoulders.modifiers[j][1];\n                rAnalog *= settings_1.keyMap.shoulders.modifiers[j][2];\n            }\n        }\n    }\n    lstickX = Math.sign(lstickX) * Math.min(1, Math.abs(lstickX));\n    lstickY = Math.sign(lstickY) * Math.min(1, Math.abs(lstickY));\n    lAnalog = Math.min(1, Math.abs(lAnalog));\n    rAnalog = Math.min(1, Math.abs(rAnalog));\n    const cstickX = (keys[settings_1.keyMap.cstick.right[0]] || keys[settings_1.keyMap.cstick.right[1]]) ? ((keys[settings_1.keyMap.cstick.left[0]] ||\n        keys[settings_1.keyMap.cstick.left[1]]) ? 0 : 1) : ((keys[settings_1.keyMap.cstick.left[0]] || keys[settings_1.keyMap.cstick.left[1]]) ? -1 :\n        0);\n    const cstickY = (keys[settings_1.keyMap.cstick.up[0]] || keys[settings_1.keyMap.cstick.up[1]]) ? ((keys[settings_1.keyMap.cstick.down[0]] || keys[settings_1.keyMap.cstick.down[1]]) ? 0 : 1) : ((keys[settings_1.keyMap.cstick.down[0]] || keys[settings_1.keyMap.cstick.down[1]]) ? -1 : 0);\n    const rescaledLStick = (0, meleeInputs_1.tasRescale)(lstickX, lstickY, true);\n    input.lsX = (0, meleeInputs_1.deaden)(rescaledLStick[0]);\n    input.lsY = (0, meleeInputs_1.deaden)(rescaledLStick[1]);\n    input.rawX = rescaledLStick[0];\n    input.rawY = rescaledLStick[1];\n    const rescaledCStick = (0, meleeInputs_1.tasRescale)(cstickX, cstickY, true);\n    input.csX = (0, meleeInputs_1.deaden)(rescaledCStick[0]);\n    input.csY = (0, meleeInputs_1.deaden)(rescaledCStick[1]);\n    input.rawcsX = rescaledCStick[0];\n    input.rawcsY = rescaledCStick[1];\n    input.lA = lAnalog;\n    input.rA = rAnalog;\n    input.s = keys[settings_1.keyMap.s[0]] || keys[settings_1.keyMap.s[1]];\n    input.x = keys[settings_1.keyMap.x[0]] || keys[settings_1.keyMap.x[1]];\n    input.a = keys[settings_1.keyMap.a[0]] || keys[settings_1.keyMap.a[1]];\n    input.b = keys[settings_1.keyMap.b[0]] || keys[settings_1.keyMap.b[1]];\n    input.y = keys[settings_1.keyMap.y[0]] || keys[settings_1.keyMap.y[1]];\n    input.r = keys[settings_1.keyMap.r[0]] || keys[settings_1.keyMap.r[1]];\n    input.l = keys[settings_1.keyMap.l[0]] || keys[settings_1.keyMap.l[1]];\n    input.z = keys[settings_1.keyMap.z[0]] || keys[settings_1.keyMap.z[1]];\n    input.dl = keys[settings_1.keyMap.dl[0]];\n    input.dd = keys[settings_1.keyMap.dd[0]];\n    input.dr = keys[settings_1.keyMap.dr[0]];\n    input.du = keys[settings_1.keyMap.du[0]];\n    if (!frameByFrame && gameMode !== 4 && gameMode !== 14) { // not in target builder, calibration screen, or frame by frame mode\n        if (input.z) {\n            if (input.lA < 0.35) {\n                input.lA = 0.35;\n            }\n            input.a = true;\n        }\n    }\n    if (input.l) {\n        input.lA = 1;\n    }\n    if (input.r) {\n        input.rA = 1;\n    }\n    return input;\n}\nfunction pollGamepadInputs(gameMode, gamepadInfo, playerSlot, controllerIndex, frameByFrame) {\n    const input = (0, exports.nullInput)();\n    if (navigator.getGamepads === undefined) {\n        return input;\n    }\n    const gamepads = navigator.getGamepads();\n    const gamepad = gamepads[controllerIndex];\n    if (gamepad === null || gamepad === undefined) {\n        return input;\n    }\n    // -------------------------------------------------------\n    // analog sticks\n    const fixedGamepad = gamepad;\n    // {\n    //   buttons: gamepad.buttons as GamepadButton[],\n    //   axes: gamepad.axes as number[],\n    //   id: gamepad.id\n    // };\n    const lsVec = (0, retrieveGamepadInputs_1.stickValue)(fixedGamepad, gamepadInfo, \"ls\");\n    const csVec = (0, retrieveGamepadInputs_1.stickValue)(fixedGamepad, gamepadInfo, \"cs\");\n    const isGC = gamepadInfo.isGC;\n    let lsCardinals = null;\n    if (gamepadInfo.ls !== null) {\n        lsCardinals = gamepadInfo.ls.cardinals;\n    }\n    let csCardinals = null;\n    if (gamepadInfo.cs !== null) {\n        csCardinals = gamepadInfo.cs.cardinals;\n    }\n    const lsticks = (0, meleeInputs_1.scaleToMeleeAxes)(lsVec.x // x-axis data\n    , lsVec.y // y-axis data\n    , isGC, lsCardinals, custcent[playerSlot].ls.x // x-axis \"custom center\" offset\n    , custcent[playerSlot].ls.y // y-axis \"custom center\" offset\n    );\n    const csticks = (0, meleeInputs_1.scaleToMeleeAxes)(csVec.x, csVec.y, isGC, csCardinals, custcent[playerSlot].cs.x, custcent[playerSlot].cs.y);\n    input.lsX = (0, meleeInputs_1.deaden)(lsticks[0]);\n    input.lsY = (0, meleeInputs_1.deaden)(lsticks[1]);\n    input.csX = (0, meleeInputs_1.deaden)(csticks[0]);\n    input.csY = (0, meleeInputs_1.deaden)(csticks[1]);\n    input.rawX = lsticks[0];\n    input.rawY = lsticks[1];\n    input.rawcsX = csticks[0];\n    input.rawcsY = csticks[1];\n    // -------------------------------------------------------\n    // buttons\n    input.s = (0, retrieveGamepadInputs_1.buttonState)(fixedGamepad, gamepadInfo, \"s\");\n    input.x = (0, retrieveGamepadInputs_1.buttonState)(fixedGamepad, gamepadInfo, \"x\");\n    input.a = (0, retrieveGamepadInputs_1.buttonState)(fixedGamepad, gamepadInfo, \"a\");\n    input.b = (0, retrieveGamepadInputs_1.buttonState)(fixedGamepad, gamepadInfo, \"b\");\n    input.y = (0, retrieveGamepadInputs_1.buttonState)(fixedGamepad, gamepadInfo, \"y\");\n    input.z = (0, retrieveGamepadInputs_1.buttonState)(fixedGamepad, gamepadInfo, \"z\");\n    // -------------------------------------------------------\n    // triggers\n    input.l = (0, retrieveGamepadInputs_1.buttonState)(fixedGamepad, gamepadInfo, \"l\");\n    input.r = (0, retrieveGamepadInputs_1.buttonState)(fixedGamepad, gamepadInfo, \"r\");\n    if (gamepadInfo.lA !== null) {\n        const lA = gamepadInfo.lA;\n        if (lA.kind === \"light\") {\n            input.lA = (0, retrieveGamepadInputs_1.triggerValue)(fixedGamepad, gamepadInfo, \"lA\");\n        }\n        else {\n            input.lA = (0, meleeInputs_1.scaleToGCTrigger)((0, retrieveGamepadInputs_1.triggerValue)(fixedGamepad, gamepadInfo, \"lA\") // raw trigger value\n            , -lA.min - custcent[playerSlot].l // offset\n            , lA.max - lA.min // scaling\n            );\n        }\n    }\n    if (gamepadInfo.rA !== null) {\n        const rA = gamepadInfo.rA;\n        if (rA.kind === \"light\") {\n            input.rA = (0, retrieveGamepadInputs_1.triggerValue)(fixedGamepad, gamepadInfo, \"rA\");\n        }\n        else {\n            input.rA = (0, meleeInputs_1.scaleToGCTrigger)((0, retrieveGamepadInputs_1.triggerValue)(fixedGamepad, gamepadInfo, \"rA\") // raw trigger value\n            , -rA.min - custcent[playerSlot].r // offset\n            , rA.max - rA.min // scaling\n            );\n        }\n    }\n    if (main_1.controllerResetCountdowns[playerSlot] === 0) {\n        setCustomCenters(playerSlot, lsVec, csVec, input.lA, input.rA);\n    }\n    if (!frameByFrame && gameMode !== 4 && gameMode !== 14) { // not in target builder or calibration screen\n        if (input.z) {\n            if (input.lA < 0.35) {\n                input.lA = 0.35;\n            }\n            input.a = true;\n        }\n    }\n    if (gameMode !== 14) {\n        if (input.l) {\n            input.lA = 1;\n        }\n        if (input.r) {\n            input.rA = 1;\n        }\n        if (input.lA > 0.95) {\n            input.l = true;\n        }\n        if (input.rA > 0.95) {\n            input.r = true;\n        }\n    }\n    // -------------------------------------------------------\n    // d-pad\n    const dPadData = (0, retrieveGamepadInputs_1.dPadState)(fixedGamepad, gamepadInfo);\n    input.dl = dPadData.left;\n    input.dd = dPadData.down;\n    input.dr = dPadData.right;\n    input.du = dPadData.up;\n    return input;\n}\n;\nfunction showButton(i, but, boolean) {\n    if (boolean) {\n        (0, jquery_1.default)(\"#\" + i + \"button\" + but).show();\n    }\n    else {\n        (0, jquery_1.default)(\"#\" + i + \"button\" + but).hide();\n    }\n}\n;\nexports.keyboardMap = [\n    [102, 186],\n    [101, 76],\n    [100, 75],\n    [104, 79],\n    [103, 73],\n    [105, 80],\n    [107, 192, 222],\n    [109, 219], 71, 78, 66, 86\n];\nconst customCenters = function () {\n    this.ls = new Vec2D_1.Vec2D(0, 0);\n    this.cs = new Vec2D_1.Vec2D(0, 0);\n    this.l = 0;\n    this.r = 0;\n};\nconst custcent = [new customCenters, new customCenters, new customCenters, new customCenters];\nfunction setCustomCenters(i, ls0, cs0, l0, r0) {\n    custcent[i].ls = ls0;\n    custcent[i].cs = cs0;\n    custcent[i].l = l0;\n    custcent[i].r = r0;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/input/input.ts\n");

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ /* webpack/runtime/getFullHash */
/******/ (() => {
/******/ 	__webpack_require__.h = () => ("e15cb873ed034960f1bc")
/******/ })();
/******/ 
/******/ }
);