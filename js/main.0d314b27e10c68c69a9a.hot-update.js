"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdatemeleelight"]("main",{

/***/ "./src/main/main.ts":
/*!**************************!*\
  !*** ./src/main/main.ts ***!
  \**************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.starting = exports.blastzone = exports.stageSelect = exports.respawnPoints = exports.edgeOrientation = exports.edgeOffset = exports.edges = exports.wallsR = exports.wallsL = exports.platforms = exports.ground = exports.startingFace = exports.startingPoint = exports.frameAdvance = exports.pause = exports.colours = exports.costumeTimeout = exports.pPal = exports.tagText = exports.hasTag = exports.palettes = exports.randomTags = exports.versusMode = exports.gameMode = exports.showDebug = exports.findingPlayers = exports.frameByFrameRender = exports.wasFrameByFrame = exports.frameByFrame = exports.playing = exports.activePorts = exports.ports = exports.cpuDifficulty = exports.playerType = exports.playerAmount = exports.currentPlayers = exports.mType = exports.firstTimeDetected = exports.usingCustomControls = exports.controllerResetCountdowns = exports.gameEnd = exports.calibrationPlayer = exports.shine = exports.characterSelections = exports.framerate = exports.gamelogicTime = exports.renderTime = exports.player = exports.snowCount = exports.holiday = void 0;\nexports.layerSwitches = exports.layers = exports.canvasMain = exports.c = exports.ui = exports.fg2 = exports.fg1 = exports.bg2 = exports.bg1 = exports.keyBinding = exports.keyBind = exports.keys = exports.usingLocalStorage = exports.matchTimer = exports.startTimer = void 0;\nexports.setControllerReset = setControllerReset;\nexports.setUsingCustomControls = setUsingCustomControls;\nexports.setMtype = setMtype;\nexports.setCurrentPlayer = setCurrentPlayer;\nexports.setTagText = setTagText;\nexports.setStageSelect = setStageSelect;\nexports.setStarting = setStarting;\nexports.setStartTimer = setStartTimer;\nexports.getStartTimer = getStartTimer;\nexports.addMatchTimer = addMatchTimer;\nexports.setMatchTimer = setMatchTimer;\nexports.getMatchTimer = getMatchTimer;\nexports.setCookie = setCookie;\nexports.setVersusMode = setVersusMode;\nexports.getCookie = getCookie;\nexports.setKeyBinding = setKeyBinding;\nexports.overrideKeyboardEvent = overrideKeyboardEvent;\nexports.disabledEventPropagation = disabledEventPropagation;\nexports.SVG = SVG;\nexports.matchTimerTick = matchTimerTick;\nexports.screenShake = screenShake;\nexports.percentShake = percentShake;\nexports.findPlayers = findPlayers;\nexports.setPlayerType = setPlayerType;\nexports.addPlayer = addPlayer;\nexports.togglePort = togglePort;\nexports.positionPlayersInCSS = positionPlayersInCSS;\nexports.changeGamemode = changeGamemode;\nexports.interpretInputs = interpretInputs;\nexports.renderToMain = renderToMain;\nexports.update = update;\nexports.gameTick = gameTick;\nexports.clearScreen = clearScreen;\nexports.renderTick = renderTick;\nexports.buildPlayerObject = buildPlayerObject;\nexports.initializePlayers = initializePlayers;\nexports.startGame = startGame;\nexports.endGame = endGame;\nexports.finishGame = finishGame;\nexports.start = start;\nexports.customDeadzone = customDeadzone;\nexports.addShine = addShine;\nexports.setShine = setShine;\nexports.setFindingPlayers = setFindingPlayers;\nexports.setPlaying = setPlaying;\nexports.setCalibrationPlayer = setCalibrationPlayer;\nexports.cacheDom = cacheDom;\nexports.setCS = setCS;\n/* eslint-disable */\nconst css_1 = __webpack_require__(/*! ../menus/css */ \"./src/menus/css.ts\");\nconst player_1 = __webpack_require__(/*! ../main/player */ \"./src/main/player.ts\");\nconst settings_1 = __webpack_require__(/*! ../settings */ \"./src/settings.ts\");\nconst startup_1 = __webpack_require__(/*! ../menus/startup */ \"./src/menus/startup.ts\");\nconst menu_1 = __webpack_require__(/*! ../menus/menu */ \"./src/menus/menu.ts\");\nconst sfx_1 = __webpack_require__(/*! ../main/sfx */ \"./src/main/sfx.ts\");\nconst startscreen_1 = __webpack_require__(/*! ../menus/startscreen */ \"./src/menus/startscreen.ts\");\nconst stagerender_1 = __webpack_require__(/*! ../stages/stagerender */ \"./src/stages/stagerender.ts\");\nconst stageselect_1 = __webpack_require__(/*! ../menus/stageselect */ \"./src/menus/stageselect.ts\");\nconst audiomenu_1 = __webpack_require__(/*! ../menus/audiomenu */ \"./src/menus/audiomenu.ts\");\nconst gameplaymenu_1 = __webpack_require__(/*! ../menus/gameplaymenu */ \"./src/menus/gameplaymenu.ts\");\nconst keyboardmenu_1 = __webpack_require__(/*! ../menus/keyboardmenu */ \"./src/menus/keyboardmenu.ts\");\nconst controllermenu_1 = __webpack_require__(/*! ../menus/controllermenu */ \"./src/menus/controllermenu.ts\");\nconst render_1 = __webpack_require__(/*! ../main/render */ \"./src/main/render.ts\");\nconst actionStateShortcuts_1 = __webpack_require__(/*! ../physics/actionStateShortcuts */ \"./src/physics/actionStateShortcuts.ts\");\nconst hitDetection_1 = __webpack_require__(/*! ../physics/hitDetection */ \"./src/physics/hitDetection.ts\");\nconst article_1 = __webpack_require__(/*! ../physics/article */ \"./src/physics/article.ts\");\nconst ai_1 = __webpack_require__(/*! ../main/ai */ \"./src/main/ai.ts\");\nconst physics_1 = __webpack_require__(/*! ../physics/physics */ \"./src/physics/physics.ts\");\nconst jquery_1 = __importDefault(__webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\"));\nconst transparency_1 = __webpack_require__(/*! ../main/vfx/transparency */ \"./src/main/vfx/transparency.js\");\nconst drawVfx_1 = __webpack_require__(/*! ../main/vfx/drawVfx */ \"./src/main/vfx/drawVfx.js\");\nconst vfxQueue_1 = __webpack_require__(/*! ../main/vfx/vfxQueue */ \"./src/main/vfx/vfxQueue.js\");\nconst activeStage_1 = __webpack_require__(/*! ../stages/activeStage */ \"./src/stages/activeStage.ts\");\nconst music_1 = __webpack_require__(/*! ./music */ \"./src/main/music.ts\");\nconst vfx_1 = __webpack_require__(/*! ../main/vfx */ \"./src/main/vfx.ts\");\nconst renderVfx_1 = __webpack_require__(/*! ./vfx/renderVfx */ \"./src/main/vfx/renderVfx.js\");\nconst Box2D_1 = __webpack_require__(/*! ./util/Box2D */ \"./src/main/util/Box2D.ts\");\nconst Vec2D_1 = __webpack_require__(/*! ./util/Vec2D */ \"./src/main/util/Vec2D.ts\");\nconst streamclient_1 = __webpack_require__(/*! ./multiplayer/streamclient */ \"./src/main/multiplayer/streamclient.js\");\nconst replay_1 = __webpack_require__(/*! ./replay */ \"./src/main/replay.ts\");\nconst input_1 = __webpack_require__(/*! ../input/input */ \"./src/input/input.ts\");\nconst meleeInputs_1 = __webpack_require__(/*! ../input/meleeInputs */ \"./src/input/meleeInputs.ts\");\nconst findGamepadInfo_1 = __webpack_require__(/*! ../input/gamepad/findGamepadInfo */ \"./src/input/gamepad/findGamepadInfo.ts\");\nconst custom_1 = __webpack_require__(/*! ../input/gamepad/gamepads/custom */ \"./src/input/gamepad/gamepads/custom.js\");\nconst retrieveGamepadInputs_1 = __webpack_require__(/*! ../input/gamepad/retrieveGamepadInputs */ \"./src/input/gamepad/retrieveGamepadInputs.ts\");\nconst drawGamepad_1 = __webpack_require__(/*! ../input/gamepad/drawGamepad */ \"./src/input/gamepad/drawGamepad.ts\");\nconst deepCopyObject_1 = __webpack_require__(/*! ./util/deepCopyObject */ \"./src/main/util/deepCopyObject.ts\");\nconst css_2 = __webpack_require__(/*! ../menus/css */ \"./src/menus/css.ts\");\n/*globals performance*/\nexports.holiday = 0;\nexports.snowCount = 150;\n//todo find 'Player' object\nexports.player = [0, 0, 0, 0];\nexports.renderTime = [10, 0, 100, 0];\nexports.gamelogicTime = [5, 0, 100, 0];\nexports.framerate = [0, 0, 0];\nexports.characterSelections = [0, 0, 0, 0];\nexports.shine = 0.5;\nexports.calibrationPlayer = 0;\nexports.gameEnd = false;\nexports.controllerResetCountdowns = [0, 0, 0, 0];\nfunction setControllerReset(i) {\n    exports.controllerResetCountdowns[i] = 0;\n}\nlet keyboardOccupied = false;\nexports.usingCustomControls = [false, false, false, false];\nfunction setUsingCustomControls(i, boolean, info) {\n    exports.usingCustomControls[i] = boolean;\n    if (bool) {\n        exports.mType[i] = custom_1.customGamepadInfo[exports.currentPlayers[i]];\n    }\n    else {\n        exports.mType[i] = info;\n    }\n}\nexports.firstTimeDetected = [true, true, true, true];\nwindow.mType = [null, null, null, null];\nexports.mType = [null, null, null, null];\nfunction setMtype(index, val) {\n    exports.mType[index] = val;\n}\nexports.currentPlayers = [];\nfunction setCurrentPlayer(index, val) {\n    exports.currentPlayers[index] = val;\n}\nexports.playerAmount = 0;\nexports.playerType = [-1, -1, -1, -1];\nexports.cpuDifficulty = [3, 3, 3, 3];\nexports.ports = 0;\nexports.activePorts = [];\nexports.playing = false;\nexports.frameByFrame = false;\nexports.wasFrameByFrame = false;\nexports.frameByFrameRender = false;\nexports.findingPlayers = true;\nexports.showDebug = false;\nexports.gameMode = 20;\n// 20:Startup\n// 13:Data Menu\n// 12:Keyboard Controls\n// 11:Gameplay Menu\n// 10:Sound Menu\n// 9: -\n// 8: -\n// 7:Target Select\n// 6:Stage Select (VS)\n// 5:Target Playing\n// 4:Target Builder\n// 3:Playing (VS)\n// 2:CSS\n// 1:Main Menu\n// 0:Title Screen\nexports.versusMode = 0;\nexports.randomTags = [\"NEO!\", \"SELF\", \"NOVA\", \"PNDA\", \"Panda\", \"LFFN\", \"Scorp\", \"AZ\", \"AXE\", \"Tempo\", \"TMPO\", \"[A]rmada\", \"WBALLZ\", \"Westballz\", \"PPMD\", \"Kreygasm\", \"M2K\", \"Mang0\", \"USA\", \"SCAR\", \"TOPH\", \"(.Y.)\", \"HBOX\", \"HungryBox\", \"PLUP\", \"Shroomed\", \"SFAT\", \"Wizz\", \"Lucky\", \"S2J\", \"SilentWolf\", \"aMSa\", \"S2J\", \"Hax$\"];\nexports.palettes = [[\"rgb(250, 89, 89)\", \"rgb(255, 170, 170)\", \"rgba(255, 206, 111, \", \"rgb(244, 68, 68)\", \"rgba(255, 225, 167, \"],\n    [\"rgb(95, 216, 84)\", \"rgb(184, 253, 154)\", \"rgba(252, 95, 95, \", \"rgb(255, 182, 96)\", \"rgba(254, 141, 141, \"],\n    [\"rgb(5, 195, 255)\", \"rgb(121, 223, 255)\", \"rgba(218, 96, 254, \", \"rgb(231, 134, 255)\", \"rgba(230, 144, 255, \"],\n    [\"rgb(255, 187, 70)\", \"rgb(248, 255, 122)\", \"rgba(80, 182, 255, \", \"rgb(255, 142, 70)\", \"rgba(139, 203, 249, \"],\n    [\"rgb(177, 89, 255)\", \"rgb(203, 144, 255)\", \"rgba(144, 255, 110, \", \"rgb(247, 126, 250)\", \"rgba(190, 255, 170, \"],\n    [\"rgb(182, 131, 70)\", \"rgb(252, 194, 126)\", \"rgba(47, 186, 123, \", \"rgb(255, 112, 66)\", \"rgba(111, 214, 168, \"],\n    [\"rgb(232, 232, 208)\", \"rgb(255, 255, 255)\", \"rgba(244, 255, 112, \", \"rgb(191, 119, 119)\", \"rgba(255, 255, 200, \"]];\nexports.hasTag = [false, false, false, false];\nexports.tagText = [\"\", \"\", \"\", \"\"];\nfunction setTagText(index, value) {\n    exports.tagText[index] = value;\n    exports.hasTag[index] = true;\n}\nexports.pPal = [0, 1, 2, 3];\nexports.costumeTimeout = [];\nexports.colours = [\"rgba(4, 255, 82, 0.62)\", \"rgba(117, 20, 255, 0.63)\", \"rgba(255, 20, 20, 0.63)\", \"rgba(255, 232, 20, 0.63)\"];\nexports.pause = [[true, true], [true, true], [true, true], [true, true]];\nexports.frameAdvance = [[true, true], [true, true], [true, true], [true, true]];\nexports.startingPoint = [[-50, 50], [50, 50], [-25, 5], [25, 5]];\nexports.startingFace = [1, -1, 1, -1];\nexports.ground = [[-68.4, 0], [68.4, 0]];\nexports.platforms = [[[-57.6, 27.2], [-20, 27.2]], [[20, 27.2], [57.6, 27.2]], [[-18.8, 54.4], [18.8, 54.4]]];\nexports.wallsL = [[[-68.4, 0], [-68.4, -108.8]]];\nexports.wallsR = [[[68.4, 0], [68.4, -108.8]]];\nexports.edges = [[[-68.4, 0], [-63.4, 0]], [[68.4, 0], [63.4, 0]]];\n//edgeOffset = [[-71.3,-23.7],[71.3,-23.7]];\nexports.edgeOffset = [[-2.9, -23.7], [2.9, -23.7]];\nexports.edgeOrientation = [1, -1];\nexports.respawnPoints = [[-50, 50, 1], [50, 50, -1], [25, 35, 1], [-25, 35, -1]];\nexports.stageSelect = 0;\nfunction setStageSelect(val) {\n    exports.stageSelect = val;\n}\nexports.blastzone = new Box2D_1.Box2D([-224, 200], [224, -108.8]);\nexports.starting = true;\nfunction setStarting(val) {\n    exports.starting = val;\n}\nexports.startTimer = 1.5;\nfunction setStartTimer(val) {\n    exports.startTimer = val;\n}\nfunction getStartTimer() {\n    return exports.startTimer;\n}\n//matchTimer = 5999.99;\nexports.matchTimer = 480;\nfunction addMatchTimer(val) {\n    exports.matchTimer += val;\n}\nfunction setMatchTimer(val) {\n    exports.matchTimer = val;\n}\nfunction getMatchTimer() {\n    return exports.matchTimer;\n}\nexports.usingLocalStorage = false;\nif (typeof (Storage) !== \"undefined\") {\n    // Code for localStorage/sessionStorage.\n    exports.usingLocalStorage = true;\n    console.log(\"local storage works\");\n}\nelse {\n    // Sorry! No Web Storage support..\n    console.log(\"local storage does not work\");\n}\nfunction setCookie(cname, cvalue, exdays) {\n    var d = new Date();\n    d.setTime(d.getTime() + (exdays * 24 * 60 * 60 * 1000));\n    var exp = \"expires=\" + d.toUTCString();\n    document.cookie = cname + \"=\" + cvalue + \"; \" + exp;\n    localStorage.setItem(cname, cvalue);\n}\nfunction setVersusMode(val) {\n    exports.versusMode = val;\n}\nfunction getCookie(cname) {\n    if (exports.usingLocalStorage) {\n        return localStorage.getItem(cname);\n    }\n    else {\n        var name = cname + \"=\";\n        var ca = document.cookie.split(';');\n        for (var i = 0; i < ca.length; i++) {\n            var c = ca[i];\n            while (c.charAt(0) == ' ')\n                c = c.substring(1);\n            if (c.indexOf(name) == 0)\n                return c.substring(name.length, c.length);\n        }\n        return \"\";\n    }\n}\nexports.keys = {};\nexports.keyBind = 0;\nexports.keyBinding = false;\nfunction setKeyBinding(val) {\n    exports.keyBinding = val;\n}\nfunction overrideKeyboardEvent(e) {\n    if (!showingCode && css_1.choosingTag == -1 && e.keyCode != 122 && e.keyCode != 116) {\n        switch (e.type) {\n            case \"keydown\":\n                if (!exports.keys[e.keyCode]) {\n                    exports.keys[e.keyCode] = true;\n                    exports.keyBind = e.keyCode;\n                    exports.keyBinding = true;\n                    // do key down stuff here\n                }\n                break;\n            case \"keyup\":\n                delete (exports.keys[e.keyCode]);\n                // do key up stuff here\n                break;\n        }\n        disabledEventPropagation(e);\n        e.preventDefault();\n        return false;\n    }\n    else {\n        if (css_1.choosingTag > -1) {\n            if (e.keyCode == 13) {\n                switch (e.type) {\n                    case \"keydown\":\n                        exports.keys[13] = true;\n                        break;\n                    case \"keyup\":\n                        delete (exports.keys[13]);\n                        break;\n                    default:\n                        break;\n                }\n            }\n        }\n        return true;\n    }\n}\n;\nfunction disabledEventPropagation(e) {\n    if (e) {\n        if (e.stopPropagation) {\n            e.stopPropagation();\n        }\n        else if (event) {\n            event.cancelBubble = true;\n        }\n    }\n}\n;\ndocument.onkeydown = overrideKeyboardEvent;\ndocument.onkeyup = overrideKeyboardEvent;\n/*var keys = [];\nexport const onkeyup (e) {\n  keys[e.keyCode]=false;\n}\nexport const onkeydown (e) {\n  keys[e.keyCode]=true;\n}*/\nfunction SVG(tag) {\n    return document.createElementNS('http://www.w3.org/2000/svg', tag);\n}\n/*if (Gamepad.supported) {\n    console.log(\"gamepad supported\");\n} else {\n    console.log(\"gamepad not supported\");\n}*/\nwindow.addEventListener(\"gamepadconnected\", function (e) {\n    console.log(\"Gamepad connected at index %d: %s. %d buttons, %d axes.\", e.gamepad.index, e.gamepad.id, e.gamepad.buttons.length, e.gamepad.axes.length);\n});\nif (navigator.getGamepads)\n    console.log(navigator.getGamepads());\nfunction matchTimerTick(input) {\n    exports.matchTimer -= 0.016667;\n    if (dom.matchMinutes && dom.matchSeconds) {\n        var sec = (exports.matchTimer % 60).toFixed(2);\n        dom.matchMinutes.innerHTML = Math.floor(exports.matchTimer / 60);\n        dom.matchSeconds.innerHTML = sec.length < 5 ? `0${sec}` : sec;\n    }\n    if (exports.matchTimer <= 0) {\n        finishGame(input);\n    }\n}\nfunction screenShake(kb) {\n    var seed = [Math.random(), Math.random(), Math.random(), Math.random()];\n    exports.fg1.translate(kb * 0.1 * seed[0], kb * 0.1 * seed[1]);\n    setTimeout(function () { exports.fg1.translate(-kb * 0.05 * seed[0], -kb * 0.05 * seed[1]); }, 20);\n    setTimeout(function () { exports.fg1.translate(-kb * 0.05 * seed[0], -kb * 0.05 * seed[1]); exports.fg1.translate(-kb * 0.1 * seed[2], -kb * 0.1 * seed[3]); }, 40);\n    setTimeout(function () { exports.fg1.translate(kb * 0.05 * seed[2], kb * 0.05 * seed[3]); }, 60);\n    setTimeout(function () { exports.fg1.translate(kb * 0.05 * seed[2], kb * 0.05 * seed[3]); }, 80);\n}\nfunction percentShake(kb, i) {\n    exports.player[i].percentShake = new Vec2D_1.Vec2D(kb * 0.1 * Math.random(), kb * 0.1 * Math.random());\n    setTimeout(function () { exports.player[i].percentShake = new Vec2D_1.Vec2D(kb * 0.05 * Math.random(), kb * 0.05 * Math.random()); }, 20);\n    setTimeout(function () { exports.player[i].percentShake = new Vec2D_1.Vec2D(-kb * 0.1 * Math.random(), -kb * 0.1 * Math.random()); }, 40);\n    setTimeout(function () { exports.player[i].percentShake = new Vec2D_1.Vec2D(-kb * 0.05 * Math.random(), -kb * 0.05 * Math.random()); }, 60);\n    setTimeout(function () { exports.player[i].percentShake = new Vec2D_1.Vec2D(0, 0); }, 80);\n}\nfunction findPlayers() {\n    var gps = navigator.getGamepads ? navigator.getGamepads() : (navigator.webkitGetGamepads ? navigator.webkitGetGamepads() : []);\n    /*if (typeof gps != \"undefined\"){\n      console.log(gps);\n    }*/\n    if (!keyboardOccupied) {\n        if (exports.gameMode < 2 || exports.gameMode == 20) {\n            if (exports.keys[13] || exports.keys[settings_1.keyMap.s[0]] || exports.keys[settings_1.keyMap.s[1]]) {\n                if (exports.ports < 4) {\n                    changeGamemode(1);\n                    (0, jquery_1.default)(\"#keyboardPrompt\").hide();\n                    keyboardOccupied = true;\n                    sfx_1.sounds.menuForward.play();\n                    if (exports.ports == 0) {\n                        music_1.MusicManager.playMenuLoop();\n                    }\n                    addPlayer(exports.ports, \"keyboard\");\n                }\n            }\n        }\n        else {\n            if (exports.keys[settings_1.keyMap.a[0]] || exports.keys[settings_1.keyMap.a[1]]) {\n                if (exports.ports < 4) {\n                    keyboardOccupied = true;\n                    addPlayer(exports.ports, \"keyboard\");\n                }\n            }\n        }\n    }\n    for (var i = 0; i < gps.length; i++) {\n        var gamepad = navigator.getGamepads ? navigator.getGamepads()[i] : (navigator.webkitGetGamepads ? navigator.webkitGetGamepads()[i] : null);\n        if (exports.playerType[i] === 2) {\n            var alreadyIn = false;\n            for (var k = 0; k < exports.ports; k++) {\n                if (exports.currentPlayers[k] === i) {\n                    alreadyIn = true;\n                }\n            }\n            if (!alreadyIn) {\n                if (exports.ports < 4) {\n                    addPlayer(i, 99);\n                }\n            }\n            continue;\n        }\n        var gamepad = navigator.getGamepads ? navigator.getGamepads()[i] : (navigator.webkitGetGamepads ? navigator.webkitGetGamepads()[i] : null);\n        if (typeof gamepad != \"undefined\" && gamepad != null) {\n            var detected = false;\n            var gpdName;\n            var gpdInfo;\n            if (exports.usingCustomControls[i] && custom_1.customGamepadInfo[i] !== null) {\n                gpdName = \"custom controls\";\n                gpdInfo = custom_1.customGamepadInfo[i];\n                detected = true;\n            }\n            else {\n                const maybeNameAndInfo = (0, findGamepadInfo_1.getGamepadNameAndInfo)(gamepad.id);\n                if (maybeNameAndInfo === null) {\n                    console.log(\"Error in 'findPlayers': controller \" + (i + 1) + \" detected but not supported.\");\n                    console.log(\"Try manual calibration of your controller.\");\n                }\n                else {\n                    detected = true;\n                    [gpdName, gpdInfo] = maybeNameAndInfo;\n                }\n            }\n            if (detected) {\n                if (exports.firstTimeDetected[i]) {\n                    console.log(\"Controller \" + (i + 1) + \" is: \" + gpdName + \".\");\n                    exports.firstTimeDetected[i] = false;\n                }\n                if (exports.gameMode < 2 || exports.gameMode == 20) {\n                    if ((0, retrieveGamepadInputs_1.buttonState)(gamepad, gpdInfo, \"s\")) {\n                        var alreadyIn = false;\n                        for (var k = 0; k < exports.ports; k++) {\n                            if (exports.currentPlayers[k] == i) {\n                                alreadyIn = true;\n                            }\n                        }\n                        if (!alreadyIn) {\n                            if (exports.ports < 4) {\n                                changeGamemode(1);\n                                (0, jquery_1.default)(\"#keyboardPrompt\").hide();\n                                sfx_1.sounds.menuForward.play();\n                                if (exports.ports === 0) {\n                                    music_1.MusicManager.playMenuLoop();\n                                }\n                                addPlayer(i, gpdInfo);\n                            }\n                        }\n                    }\n                }\n                else {\n                    if ((0, retrieveGamepadInputs_1.buttonState)(gamepad, gpdInfo, \"a\")) {\n                        var alreadyIn = false;\n                        for (var k = 0; k < exports.ports; k++) {\n                            if (exports.currentPlayers[k] == i) {\n                                alreadyIn = true;\n                            }\n                        }\n                        if (!alreadyIn) {\n                            if (exports.ports < 4) {\n                                addPlayer(i, gpdInfo);\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                console.log(\"No controller detected by browser\");\n            }\n        }\n    }\n}\nfunction setPlayerType(playerSlot, type) {\n    exports.playerType[playerSlot] = type;\n}\nfunction addPlayer(i, controllerInfo) {\n    if (controllerInfo === 99) {\n        exports.ports++;\n        exports.currentPlayers[exports.ports - 1] = i;\n        exports.playerType[exports.ports - 1] = 2;\n        exports.mType[exports.ports - 1] = controllerInfo;\n    }\n    else {\n        exports.ports++;\n        exports.currentPlayers[exports.ports - 1] = i;\n        exports.playerType[exports.ports - 1] = 0;\n        exports.mType[exports.ports - 1] = controllerInfo;\n        if (exports.showDebug) {\n            (0, drawGamepad_1.updateGamepadSVGColour)(i, \"gamepadSVG\" + i);\n            document.getElementById(\"gamepadSVG\" + i).style.display = \"\";\n        }\n    }\n}\nfunction togglePort(i) {\n    exports.playerType[i]++;\n    if (exports.playerType[i] == 3) {\n        exports.playerType[i] = -1;\n        if (exports.showDebug) {\n            document.getElementById(\"gamepadSVG\" + i).style.display = \"none\";\n        }\n    }\n    if (exports.playerType[i] == 0 && exports.ports <= i) {\n        exports.playerType[i] = 1;\n        (0, drawGamepad_1.setGamepadSVGColour)(i, \"black\");\n        if (exports.showDebug) {\n            (0, drawGamepad_1.updateGamepadSVGColour)(i, \"gamepadSVG\" + i);\n            document.getElementById(\"gamepadSVG\" + i).style.display = \"\";\n        }\n    }\n}\nfunction positionPlayersInCSS() {\n    for (var i = 0; i < 4; i++) {\n        var x = (-80 + i * 50) * 2 / 3;\n        var y = -30;\n        exports.player[i].phys.pos = new Vec2D_1.Vec2D(x, y);\n        exports.player[i].phys.hurtbox = new Box2D_1.Box2D([-4 + x, 18 + y], [4 + x, y]);\n    }\n}\n// 20:Startup\n// 14:Controller Menu\n// 13:Data Menu\n// 12:Keyboard Controls\n// 11:Gameplay Menu\n// 10:Sound Menu\n// 9: -\n// 8: -\n// 7:Target Select\n// 6:Stage Select (VS)\n// 5:Target Playing\n// 4:Target Builder\n// 3:Playing (VS)\n// 2:CSS\n// 1:Main Menu\n// 0:Title Screen\nfunction changeGamemode(newGamemode) {\n    exports.bg1.fillStyle = \"black\";\n    exports.bg1.fillRect(0, 0, exports.layers.BG1.width, exports.layers.BG1.height);\n    exports.fg1.clearRect(0, 0, exports.layers.FG1.width, exports.layers.FG1.height);\n    exports.gameMode = newGamemode;\n    switch (newGamemode) {\n        // TITLESCREEN\n        case 0:\n            (0, startscreen_1.drawStartScreenInit)();\n            break;\n        // MAIN MENU\n        case 1:\n            (0, jquery_1.default)(\"#logoVid\").remove();\n            (0, menu_1.drawMainMenuInit)();\n            break;\n        // CSS\n        case 2:\n            (0, css_1.drawCSSInit)();\n            break;\n        // Playing (VS)\n        case 3:\n            (0, stagerender_1.drawBackgroundInit)();\n            (0, stagerender_1.drawStageInit)();\n            break;\n        // Target Builder\n        case 4:\n            break;\n        // Target Playing\n        case 5:\n            (0, stagerender_1.drawBackgroundInit)();\n            (0, stagerender_1.drawStageInit)();\n            break;\n        // Stage select (vs)\n        case 6:\n            (0, stageselect_1.drawSSSInit)();\n            break;\n        // Target Select\n        case 7:\n            // drawTSSInit();\n            break;\n        // sound menu\n        case 10:\n            (0, audiomenu_1.drawAudioMenuInit)();\n            break;\n        // gameplay menu\n        case 11:\n            (0, gameplaymenu_1.drawGameplayMenuInit)();\n            break;\n        // keyboard menu\n        case 12:\n            (0, keyboardmenu_1.drawKeyboardMenuInit)();\n            break;\n        // credits\n        case 13:\n            // drawCreditsInit();\n            break;\n        // Multiplayer Modes\n        case 14:\n            (0, controllermenu_1.drawControllerMenuInit)();\n            break;\n        case 15:\n            (0, css_1.drawCSSInit)();\n            (0, streamclient_1.connectToMPServer)();\n            break;\n        // startup\n        case 20:\n            break;\n        default:\n            break;\n    }\n}\n/*export const addPlayer (i,gType,pType){\n  console.log(i,gType,pType);\n\n  currentPlayers.push(i);\n  if (pType == 0){\n    ports++;\n    mType[ports-1] = gType;\n    playerType[ports-1] = pType;\n\n    costumeTimeout.push(false);\n    pPal.push(ports-1);\n    buildPlayerObject(ports-1);\n    player[playerAmount-1].phys.pos = new Vec2D(-100+25*(playerAmount=1),-40);\n    player[ports-1].phys.face = 1;\n    player[ports-1].actionState = 0;\n    $(\"#currentPlayers\").append('<div class=\"pBoxBox\"><div class=\"playerBox\" id=\"pBox'+(ports-1)+'\" style=\"background-color:'+palettes[pPal[ports-1]][0]+';border:5px solid '+palettes[pPal[ports-1]][2]+'0.8)\"><p>P'+ports+'<br><span class=\"cont\">(Cont. '+i+')</span></p></div><div id=\"pTag'+(ports-1)+'\" class=\"pTag\"><textarea id=\"pTagEdit'+(ports-1)+'\" class=\"pTagEdit\" maxlength=\"10\"></textarea></div></div>');\n  }\n  else {\n    mType[i] = gType;\n\n    costumeTimeout.push(false);\n    pPal.push(i);\n    buildPlayerObject(i);\n    player[playerAmount-1].phys.pos = new Vec2D(-100+25*(playerAmount=1),-40);\n    player[i].phys.face = 1;\n    player[i].actionState = 0;\n    $(\"#currentPlayers\").append('<div class=\"pBoxBox\"><div class=\"playerBox\" id=\"pBox'+i+'\" style=\"background-color:'+palettes[pPal[i]][0]+';border:5px solid '+palettes[pPal[i]][2]+'0.8)\"><p>P'+(i+1)+'<br><span class=\"cont\">(Cont. '+i+')</span></p></div><div id=\"pTag'+i+'\" class=\"pTag\"><textarea id=\"pTagEdit'+i+'\" class=\"pTagEdit\" maxlength=\"10\"></textarea></div></div>');\n  }\n  playerAmount++;\n}\n\nexport const removePlayer (i){\n  playerType[i] = -1;\n  playerAmount--;\n}*/\nfunction interpretInputs(i, active, playertype, inputBuffer) {\n    let tempBuffer = (0, input_1.nullInputs)();\n    // keep updating Z and Start all the time, even when paused\n    for (var k = 0; k < 7; k++) {\n        tempBuffer[7 - k].z = inputBuffer[6 - k].z;\n        tempBuffer[7 - k].s = inputBuffer[6 - k].s;\n    }\n    tempBuffer[0] = (0, input_1.pollInputs)(exports.gameMode, exports.frameByFrame, exports.mType[i], i, exports.currentPlayers[i], exports.keys, playertype);\n    let pastOffset = 0;\n    if ((exports.gameMode !== 3 && exports.gameMode !== 5) || (exports.playing && (exports.pause[i][1] || !exports.pause[i][0]))\n        || exports.wasFrameByFrame\n        || (!exports.playing && exports.pause[i][0] && !exports.pause[i][1])) {\n        pastOffset = 1;\n    }\n    exports.pause[i][1] = exports.pause[i][0];\n    exports.wasFrameByFrame = false;\n    exports.frameAdvance[i][1] = exports.frameAdvance[i][0];\n    for (var k = 0; k < 7; k++) {\n        tempBuffer[7 - k].lsX = inputBuffer[7 - k - pastOffset].lsX;\n        tempBuffer[7 - k].lsY = inputBuffer[7 - k - pastOffset].lsY;\n        tempBuffer[7 - k].rawX = inputBuffer[7 - k - pastOffset].rawX;\n        tempBuffer[7 - k].rawY = inputBuffer[7 - k - pastOffset].rawY;\n        tempBuffer[7 - k].csX = inputBuffer[7 - k - pastOffset].csX;\n        tempBuffer[7 - k].csY = inputBuffer[7 - k - pastOffset].csY;\n        tempBuffer[7 - k].rawcsX = inputBuffer[7 - k - pastOffset].rawcsX;\n        tempBuffer[7 - k].rawcsY = inputBuffer[7 - k - pastOffset].rawcsY;\n        tempBuffer[7 - k].lA = inputBuffer[7 - k - pastOffset].lA;\n        tempBuffer[7 - k].rA = inputBuffer[7 - k - pastOffset].rA;\n        tempBuffer[7 - k].a = inputBuffer[7 - k - pastOffset].a;\n        tempBuffer[7 - k].b = inputBuffer[7 - k - pastOffset].b;\n        tempBuffer[7 - k].x = inputBuffer[7 - k - pastOffset].x;\n        tempBuffer[7 - k].y = inputBuffer[7 - k - pastOffset].y;\n        tempBuffer[7 - k].r = inputBuffer[7 - k - pastOffset].r;\n        tempBuffer[7 - k].l = inputBuffer[7 - k - pastOffset].l;\n        tempBuffer[7 - k].dl = inputBuffer[7 - k - pastOffset].dl;\n        tempBuffer[7 - k].dd = inputBuffer[7 - k - pastOffset].dd;\n        tempBuffer[7 - k].dr = inputBuffer[7 - k - pastOffset].dr;\n        tempBuffer[7 - k].du = inputBuffer[7 - k - pastOffset].du;\n    }\n    if (exports.mType !== null) {\n        if ((exports.mType[i] === \"keyboard\" && (tempBuffer[0].z || tempBuffer[1].z))\n            || (exports.mType[i] !== \"keyboard\" && (tempBuffer[0].z && !tempBuffer[1].z))) {\n            exports.frameAdvance[i][0] = true;\n        }\n        else {\n            exports.frameAdvance[i][0] = false;\n        }\n    }\n    if (exports.frameAdvance[i][0] && !exports.frameAdvance[i][1] && !exports.playing && exports.gameMode !== 4) {\n        exports.frameByFrame = true;\n    }\n    if (exports.mType[i] === \"keyboard\") { // keyboard controls\n        if (tempBuffer[0].s || tempBuffer[1].s || (exports.gameMode === 5 && (tempBuffer[0].du || tempBuffer[1].du))) {\n            exports.pause[i][0] = true;\n        }\n        else {\n            exports.pause[i][0] = false;\n        }\n        if (!exports.playing && (exports.gameMode == 3 || exports.gameMode == 5)\n            && (tempBuffer[0].a || tempBuffer[1].a) && (tempBuffer[0].l || tempBuffer[1].l)\n            && (tempBuffer[0].r || tempBuffer[1].r) && (tempBuffer[0].s || tempBuffer[1].s)) {\n            if (tempBuffer[0].b || tempBuffer[1].b) {\n                startGame();\n            }\n            else {\n                endGame(inputBuffer);\n            }\n        }\n        interpretPause(exports.pause[i][0], exports.pause[i][1]);\n    }\n    else if (exports.mType[i] !== null) { // gamepad controls\n        if (!exports.playing && (exports.gameMode == 3 || exports.gameMode == 5) &&\n            (tempBuffer[0].a && tempBuffer[0].l && tempBuffer[0].r && tempBuffer[0].s)\n            && (!(tempBuffer[1].a && tempBuffer[1].l && tempBuffer[1].r && tempBuffer[1].s))) {\n            if (tempBuffer[0].b) {\n                startGame();\n            }\n            else {\n                endGame(inputBuffer);\n            }\n        }\n        if (tempBuffer[0].s || tempBuffer[0].du && exports.gameMode == 5) {\n            exports.pause[i][0] = true;\n        }\n        else {\n            exports.pause[i][0] = false;\n        }\n        // Controller reset functionality\n        if ((tempBuffer[0].z || tempBuffer[0].du) && tempBuffer[0].x && tempBuffer[0].y) {\n            exports.controllerResetCountdowns[i] -= 1;\n            if (exports.controllerResetCountdowns[i] === 0) {\n                // triggers code in input.js\n                console.log(\"Controller #\" + (i + 1) + \" was reset!\");\n                (0, jquery_1.default)(\"#resetIndicator\" + i).fadeIn(100);\n                (0, jquery_1.default)(\"#resetIndicator\" + i).fadeOut(500);\n            }\n        }\n        else {\n            exports.controllerResetCountdowns[i] = 125;\n        }\n        interpretPause(exports.pause[i][0], exports.pause[i][1]);\n    }\n    else { // AI\n        tempBuffer[0].rawX = tempBuffer[0].lsX;\n        tempBuffer[0].rawY = tempBuffer[0].lsY;\n        tempBuffer[0].rawcsX = tempBuffer[0].csX;\n        tempBuffer[0].rawcsY = tempBuffer[0].csY;\n        tempBuffer[0].lsX = (0, meleeInputs_1.deaden)(tempBuffer[0].rawX);\n        tempBuffer[0].lsY = (0, meleeInputs_1.deaden)(tempBuffer[0].rawY);\n        tempBuffer[0].csX = (0, meleeInputs_1.deaden)(tempBuffer[0].rawcsX);\n        tempBuffer[0].csY = (0, meleeInputs_1.deaden)(tempBuffer[0].rawcsY);\n    }\n    if (exports.showDebug) {\n        (0, jquery_1.default)(\"#lsAxisX\" + i).empty().append(tempBuffer[0].lsX.toFixed(3));\n        (0, jquery_1.default)(\"#lsAxisY\" + i).empty().append(tempBuffer[0].lsY.toFixed(3));\n        (0, jquery_1.default)(\"#csAxisX\" + i).empty().append(tempBuffer[0].csX.toFixed(3));\n        (0, jquery_1.default)(\"#csAxisY\" + i).empty().append(tempBuffer[0].csY.toFixed(3));\n        (0, jquery_1.default)(\"#lAnalog\" + i).empty().append(tempBuffer[0].lA.toFixed(3));\n        (0, jquery_1.default)(\"#rAnalog\" + i).empty().append(tempBuffer[0].rA.toFixed(3));\n        (0, drawGamepad_1.updateGamepadSVGState)(i, \"gamepadSVG\" + i, tempBuffer[0]);\n    }\n    if (exports.gameMode === 14) { // controller calibration screen\n        (0, drawGamepad_1.updateGamepadSVGState)(i, \"gamepadSVGCalibration\", tempBuffer[0]);\n    }\n    if (exports.showDebug || exports.gameMode === 14) {\n        const which = (exports.showDebug && exports.gameMode === 14) ? \"both\" : exports.showDebug ? \"debug\" : \"calibration\";\n        if (tempBuffer[0].x && !tempBuffer[1].x && tempBuffer[0].du) {\n            (0, drawGamepad_1.cycleGamepadColour)(i, which, true);\n        }\n        if (tempBuffer[0].y && !tempBuffer[1].y && tempBuffer[0].du) {\n            (0, drawGamepad_1.cycleGamepadColour)(i, which, false);\n        }\n    }\n    if (streamclient_1.giveInputs[i] === true) {\n        //turns out keyboards leave gaps in the input buffer\n        (0, deepCopyObject_1.deepObjectMerge)(true, (0, input_1.nullInput)(), tempBuffer[0]);\n        (0, streamclient_1.updateNetworkInputs)(tempBuffer[0], i);\n    }\n    if (active) {\n        if (tempBuffer[0].dl && !tempBuffer[1].dl) {\n            exports.player[i].showLedgeGrabBox ^= true;\n        }\n        if (tempBuffer[0].dd && !tempBuffer[1].dd) {\n            exports.player[i].showECB ^= true;\n        }\n        if (tempBuffer[0].dr && !tempBuffer[1].dr) {\n            exports.player[i].showHitbox ^= true;\n        }\n    }\n    if (exports.frameByFrame) {\n        tempBuffer[0].z = false;\n    }\n    return tempBuffer;\n}\nfunction interpretPause(pause0, pause1) {\n    if (pause0 && !pause1) {\n        if (exports.gameMode == 3 || exports.gameMode == 5) {\n            exports.playing ^= true;\n            if (!exports.playing) {\n                sfx_1.sounds.pause.play();\n                changeVolume(music_1.MusicManager, audiomenu_1.masterVolume[1] * 0.3, 1);\n                (0, render_1.renderForeground)();\n            }\n            else {\n                changeVolume(music_1.MusicManager, audiomenu_1.masterVolume[1], 1);\n            }\n        }\n    }\n}\nexports.bg1 = 0;\nexports.bg2 = 0;\nexports.fg1 = 0;\nexports.fg2 = 0;\nexports.ui = 0;\nexports.c = 0;\nexports.canvasMain = 0;\nexports.layers = {\n    BG1: null,\n    BG2: null,\n    FG1: null,\n    FG2: null,\n    UI: null\n};\nexports.layerSwitches = {\n    BG1: true,\n    BG2: true,\n    FG1: true,\n    FG2: true,\n    UI: true\n};\nfunction renderToMain() {\n    var keys = Object.keys(exports.layers);\n    for (var i = 0; i < keys.length; i++) {\n        if (exports.layerSwitches[keys[i]]) {\n            exports.c.drawImage(exports.layers[keys[i]], 0, 0);\n        }\n    }\n}\nfunction update(i, inputBuffers) {\n    if (!exports.starting) {\n        if (exports.currentPlayers[i] != -1) {\n            if (exports.playerType[i] == 0) {\n                // do nothing, use the provided player i inputs\n            }\n            else if (exports.playerType[i] === 1) {\n                if (exports.player[i].actionState != \"SLEEP\") {\n                    (0, ai_1.runAI)(i); // no need to return input since polling returns ai input if they are active\n                }\n            }\n        }\n    }\n    (0, physics_1.physics)(i, inputBuffers);\n}\nlet delta = 0;\nlet lastFrameTimeMs = 0;\nlet lastUpdate = performance.now();\nfunction gameTick(oldInputBuffers) {\n    var start = performance.now();\n    var diff = 0;\n    let input = [(0, input_1.nullInputs)(), (0, input_1.nullInputs)(), (0, input_1.nullInputs)(), (0, input_1.nullInputs)()];\n    if (exports.gameMode == 0 || exports.gameMode == 20) {\n        findPlayers();\n    }\n    else if (exports.gameMode == 1) {\n        //console.log(playerType);\n        for (var i = 0; i < exports.ports; i++) {\n            input[i] = interpretInputs(i, true, exports.playerType[i], oldInputBuffers[i]);\n            (0, menu_1.menuMove)(i, input);\n        }\n    }\n    else if (exports.gameMode == 10) {\n        for (var i = 0; i < exports.ports; i++) {\n            input[i] = interpretInputs(i, true, exports.playerType[i], oldInputBuffers[i]);\n            (0, audiomenu_1.audioMenuControls)(i, input);\n        }\n    }\n    else if (exports.gameMode == 11) {\n        for (var i = 0; i < exports.ports; i++) {\n            input[i] = interpretInputs(i, true, exports.playerType[i], oldInputBuffers[i]);\n            (0, gameplaymenu_1.gameplayMenuControls)(i, input);\n        }\n    }\n    else if (exports.gameMode == 12) {\n        for (var i = 0; i < exports.ports; i++) {\n            input[i] = interpretInputs(i, true, exports.playerType[i], oldInputBuffers[i]);\n            (0, keyboardmenu_1.keyboardMenuControls)(i, input);\n        }\n    }\n    else if (exports.gameMode == 13) {\n        //target\n    }\n    else if (exports.gameMode == 14) {\n        // controller calibration\n        input[exports.calibrationPlayer] = interpretInputs(exports.calibrationPlayer, true, exports.playerType[exports.calibrationPlayer], oldInputBuffers[exports.calibrationPlayer]);\n    }\n    else if (exports.gameMode == 15) {\n        for (var i = 0; i < exports.ports; i++) {\n            input[i] = interpretInputs(i, true, exports.playerType[i], oldInputBuffers[i]);\n            (0, menu_1.menuMove)(i, input);\n        }\n    }\n    else if (exports.gameMode == 2) {\n        for (var i = 0; i < 4; i++) {\n            if (i < exports.ports) {\n                input[i] = interpretInputs(i, true, exports.playerType[i], oldInputBuffers[i]);\n                (0, css_1.cssControls)(i, input);\n            }\n            actionStateShortcuts_1.actionStates[exports.characterSelections[i]][exports.player[i].actionState].main(i, input);\n        }\n        for (var i = 0; i < 4; i++) {\n            if (exports.playerType[i] > -1) {\n                (0, hitDetection_1.hitDetect)(i, input);\n            }\n        }\n        (0, hitDetection_1.executeHits)(input);\n        (0, hitDetection_1.resetHitQueue)();\n        findPlayers();\n    }\n    else if (exports.gameMode == 6) {\n        // stage select\n        for (var i = 0; i < 4; i++) {\n            if (i < exports.ports) {\n                input[i] = interpretInputs(i, true, exports.playerType[i], oldInputBuffers[i]);\n                (0, stageselect_1.sssControls)(i, input);\n            }\n        }\n    }\n    else if (exports.playing || exports.frameByFrame) {\n        //console.log(\"test0\");\n        /*delta = timestamp - lastFrameTimeMs; // get the delta time since last frame\n        lastFrameTimeMs = timestamp;\n        console.log(delta);*/\n        var now = performance.now();\n        var dt = now - lastUpdate;\n        //console.log(now);\n        //console.log(dt);\n        lastUpdate = now;\n        (0, hitDetection_1.resetHitQueue)();\n        (0, activeStage_1.getActiveStage)().movingPlatforms();\n        (0, article_1.destroyArticles)();\n        (0, article_1.executeArticles)();\n        for (var i = 0; i < 4; i++) {\n            if (exports.playerType[i] > -1) {\n                if (!exports.starting) {\n                    input[i] = interpretInputs(i, true, exports.playerType[i], oldInputBuffers[i]);\n                }\n                update(i, input);\n            }\n        }\n        (0, hitDetection_1.checkPhantoms)();\n        for (var i = 0; i < 4; i++) {\n            if (exports.playerType[i] > -1) {\n                (0, hitDetection_1.hitDetect)(i, input);\n            }\n        }\n        (0, hitDetection_1.executeHits)(input);\n        (0, article_1.articlesHitDetection)();\n        (0, article_1.executeArticleHits)(input);\n        if (!exports.starting && !exports.versusMode) {\n            matchTimerTick(input);\n        }\n        else {\n            exports.startTimer -= 0.01666667;\n            if (exports.startTimer < 0) {\n                exports.starting = false;\n            }\n        }\n        if (exports.frameByFrame) {\n            exports.frameByFrameRender = true;\n            exports.wasFrameByFrame = true;\n        }\n        exports.frameByFrame = false;\n        if (exports.showDebug) {\n            diff = performance.now() - start;\n            exports.gamelogicTime[0] += diff;\n            exports.gamelogicTime[0] /= 2;\n            if (diff >= 10) {\n                exports.gamelogicTime[3]++;\n            }\n            if (diff < exports.gamelogicTime[2]) {\n                exports.gamelogicTime[2] = diff;\n            }\n            if (diff > exports.gamelogicTime[1]) {\n                exports.gamelogicTime[1] = diff;\n            }\n            dom.gamelogicAvg.innerHTML = Math.round(exports.gamelogicTime[0]);\n            dom.gamelogicHigh.innerHTML = Math.round(exports.gamelogicTime[1]);\n            dom.gamelogicLow.innerHTML = Math.round(exports.gamelogicTime[2]);\n            dom.gamelogicPeak.innerHTML = exports.gamelogicTime[3];\n        }\n    }\n    else if (exports.findingPlayers) {\n        findPlayers();\n    }\n    else {\n        if (!exports.gameEnd) {\n            for (var i = 0; i < 4; i++) {\n                if (exports.playerType[i] == 0 || exports.playerType[i] == 2) {\n                    if (exports.currentPlayers[i] != -1) {\n                        input[i] = interpretInputs(i, false, exports.playerType[i], oldInputBuffers[i]);\n                    }\n                }\n            }\n        }\n    }\n    /*\n  \n    var beforeWaster = performance.now();\n    // neeed to waste 0.666ms\n    var timeWasted = false;\n    var t = 0;\n    var o = performance.now();\n    while(!timeWasted){\n      var n = performance.now();\n      t += n - o;\n      //console.log(t);\n      if (t > 0.6666){\n        timeWasted = true;\n      }\n      o = n;\n      //console.log(\".\");\n    }\n    //console.log(performance.now() - beforeWaster);*/\n    (0, replay_1.saveGameState)(input, exports.ports);\n    setTimeout(gameTick, 16, input);\n}\nfunction clearScreen() {\n    //bg1.fillStyle = \"rgb(0, 0, 0)\";\n    //bg1.fillRect(0,0,layers.BG1.width,layers.BG1.height);\n    exports.bg2.clearRect(0, 0, exports.layers.BG2.width, exports.layers.BG2.height);\n    //fg1.clearRect(0,0,layers.FG1.width,layers.FG1.height);\n    exports.fg2.clearRect(0, 0, exports.layers.FG2.width, exports.layers.FG2.height);\n    exports.ui.clearRect(0, 0, exports.layers.UI.width, exports.layers.UI.height);\n}\nlet otherFrame = true;\nlet fps30 = false;\nfunction renderTick() {\n    window.requestAnimationFrame(renderTick);\n    otherFrame ^= true;\n    if ((fps30 && otherFrame) || !fps30) {\n        //console.log(\"------\");\n        if (exports.gameMode == 20) {\n            (0, startup_1.drawStartUp)();\n        }\n        else if (exports.gameMode == 10) {\n            (0, audiomenu_1.drawAudioMenu)();\n        }\n        else if (exports.gameMode == 11) {\n            (0, gameplaymenu_1.drawGameplayMenu)();\n        }\n        else if (exports.gameMode == 12) {\n            (0, keyboardmenu_1.drawKeyboardMenu)();\n        }\n        else if (exports.gameMode == 13) {\n            // drawCredits();\n        }\n        else if (exports.gameMode == 14) {\n            (0, controllermenu_1.drawControllerMenu)();\n        }\n        else if (exports.gameMode == 0) {\n            (0, startscreen_1.drawStartScreen)();\n        }\n        else if (exports.gameMode == 1) {\n            (0, menu_1.drawMainMenu)();\n        }\n        else if (exports.gameMode == 2) {\n            (0, css_1.drawCSS)();\n            //renderVfx();\n        }\n        else if (exports.gameMode == 6) {\n            (0, stageselect_1.drawSSS)();\n        }\n        else if (exports.playing || exports.frameByFrameRender) {\n            /*delta = timestamp - lastFrameTimeMs; // get the delta time since last frame\n            lastFrameTimeMs = timestamp;\n            console.log(delta);*/\n            //console.log(\"test2\");\n            var rStart = performance.now();\n            clearScreen();\n            if ((0, vfx_1.isShowSFX)()) {\n                (0, stagerender_1.drawBackground)();\n            }\n            (0, stagerender_1.drawStage)();\n            for (var i = 0; i < 4; i++) {\n                if (exports.playerType[i] > -1) {\n                    (0, render_1.renderPlayer)(i);\n                }\n            }\n            (0, article_1.renderArticles)();\n            (0, renderVfx_1.renderVfx)();\n            (0, render_1.renderOverlay)(true);\n            if (exports.showDebug) {\n                var diff = performance.now() - rStart;\n                exports.renderTime[0] += diff;\n                exports.renderTime[0] /= 2;\n                if (diff >= 10) {\n                    exports.renderTime[3]++;\n                }\n                if (diff > exports.renderTime[1]) {\n                    exports.renderTime[1] = diff;\n                }\n                if (diff < exports.renderTime[2]) {\n                    exports.renderTime[2] = diff;\n                }\n                dom.renderAvg.innerHTML = Math.round(exports.renderTime[0]);\n                dom.renderHigh.innerHTML = Math.round(exports.renderTime[1]);\n                dom.renderLow.innerHTML = Math.round(exports.renderTime[2]);\n                dom.renderPeak.innerHTML = exports.renderTime[3];\n            }\n        }\n        if (exports.frameByFrameRender) {\n            (0, render_1.renderForeground)();\n        }\n        exports.frameByFrameRender = false;\n        //renderToMain();\n        //console.log(performance.now());\n    }\n    else {\n        if (exports.playing) {\n            (0, renderVfx_1.renderVfx)(true);\n        }\n    }\n}\nfunction buildPlayerObject(i) {\n    exports.player[i] = new player_1.playerObject(exports.characterSelections[i], exports.startingPoint[i], exports.startingFace[i]);\n    exports.player[i].phys.ECB1 = [new Vec2D_1.Vec2D(exports.startingPoint[i].x, exports.startingPoint[i].y), new Vec2D_1.Vec2D(exports.startingPoint[i].x, exports.startingPoint[i].y), new Vec2D_1.Vec2D(exports.startingPoint[i].x, exports.startingPoint[i].y), new Vec2D_1.Vec2D(exports.startingPoint[i].x, exports.startingPoint[i].y)];\n    exports.player[i].phys.ECBp = [new Vec2D_1.Vec2D(exports.startingPoint[i].x, exports.startingPoint[i].y), new Vec2D_1.Vec2D(exports.startingPoint[i].x, exports.startingPoint[i].y), new Vec2D_1.Vec2D(exports.startingPoint[i].x, exports.startingPoint[i].y), new Vec2D_1.Vec2D(exports.startingPoint[i].x, exports.startingPoint[i].y)];\n    exports.player[i].difficulty = exports.cpuDifficulty[i];\n}\nfunction initializePlayers(i, target) {\n    buildPlayerObject(i);\n    if (target) {\n        (0, drawVfx_1.drawVfx)({\n            name: \"entrance\",\n            pos: new Vec2D_1.Vec2D(activeStage_1.activeStage.startingPoint[0].x, activeStage_1.activeStage.startingPoint[0].y)\n        });\n    }\n    else {\n        (0, drawVfx_1.drawVfx)({\n            name: \"entrance\",\n            pos: new Vec2D_1.Vec2D(exports.startingPoint[i][0], exports.startingPoint[i][1])\n        });\n    }\n}\nfunction startGame() {\n    (0, activeStage_1.setVsStage)(exports.stageSelect);\n    (0, stagerender_1.setBackgroundType)(Math.round(Math.random()));\n    changeGamemode(3);\n    (0, vfxQueue_1.resetVfxQueue)();\n    for (var n = 0; n < 4; n++) {\n        if (exports.playerType[n] > -1) {\n            initializePlayers(n, false);\n            (0, render_1.renderPlayer)(n);\n            exports.player[n].inCSS = false;\n        }\n        if (exports.versusMode) {\n            exports.player[n].stocks = 1;\n        }\n    }\n    exports.matchTimer = 480;\n    exports.startTimer = 1.5;\n    exports.starting = true;\n    music_1.MusicManager.stopWhatisPlaying();\n    switch (exports.stageSelect) {\n        case 0:\n            music_1.MusicManager.playBattleFieldLoop();\n            break;\n        case 1:\n            music_1.MusicManager.playyStoryLoop();\n            break;\n        case 2:\n            music_1.MusicManager.playpStadiumLoop();\n            break;\n        case 3:\n            music_1.MusicManager.playDreamLandLoop();\n            break;\n        case 4:\n            music_1.MusicManager.playfinaldLoop();\n            break;\n        case 5:\n            music_1.MusicManager.playfodLoop();\n            break;\n        default:\n            break;\n    }\n    (0, drawVfx_1.drawVfx)({\n        name: \"start\",\n        pos: new Vec2D_1.Vec2D(0, 0)\n    });\n    exports.findingPlayers = false;\n    exports.playing = true;\n}\nfunction endGame(input) {\n    exports.gameEnd = false;\n    (0, render_1.resetLostStockQueue)();\n    (0, hitDetection_1.setPhantonQueue)([]);\n    (0, article_1.resetAArticles)();\n    music_1.MusicManager.stopWhatisPlaying();\n    changeVolume(music_1.MusicManager, audiomenu_1.masterVolume[1], 1);\n    exports.playing = false;\n    clearScreen();\n    (0, stagerender_1.drawStage)();\n    (0, css_2.setTokenPosSnapToChar)(0);\n    (0, css_2.setTokenPosSnapToChar)(1);\n    (0, css_2.setTokenPosSnapToChar)(2);\n    (0, css_2.setTokenPosSnapToChar)(3);\n    if (exports.gameMode == 3) {\n        changeGamemode(2);\n        music_1.MusicManager.playMenuLoop();\n        exports.pause = [[true, true], [true, true], [true, true], [true, true]];\n        exports.frameAdvance = [\n            [true, true],\n            [true, true],\n            [true, true],\n            [true, true]\n        ];\n        exports.findingPlayers = true;\n        positionPlayersInCSS();\n        for (var i = 0; i < 4; i++) {\n            if (exports.playerType[i] > -1) {\n                if (exports.player[i].actionState == \"FURAFURA\") {\n                    sfx_1.sounds.furaloop.stop(exports.player[i].furaLoopID);\n                }\n                //input[i][0].a = true; // do\n                //input[i][1].a = true; // not\n                exports.player[i].inCSS = true;\n                exports.player[i].phys.face = 1;\n                exports.player[i].actionState = \"WAIT\";\n                exports.player[i].timer = 0;\n            }\n        }\n    }\n}\nfunction finishGame(input) {\n    exports.gameEnd = true;\n    exports.playing = false;\n    exports.fg2.save();\n    exports.fg2.textAlign = \"center\";\n    var text = \"Game!\";\n    var size = 300;\n    var textScale = 1;\n    var textGrad = exports.fg2.createLinearGradient(0, 200, 0, 520);\n    if (exports.matchTimer <= 0) {\n        text = \"Time!\";\n        sfx_1.sounds.time.play();\n        textGrad.addColorStop(0, \"black\");\n        textGrad.addColorStop(0.5, \"black\");\n        textGrad.addColorStop(0.7, \"rgb(21, 51, 180)\");\n        textGrad.addColorStop(1, \"rgb(71, 94, 250)\");\n    }\n    else {\n        sfx_1.sounds.game.play();\n        textGrad.addColorStop(0, \"black\");\n        textGrad.addColorStop(0.4, \"black\");\n        textGrad.addColorStop(0.7, \"rgb(167, 27, 40)\");\n        textGrad.addColorStop(1, \"rgb(255, 31, 52)\");\n    }\n    exports.fg2.scale(1, textScale);\n    exports.fg2.fillStyle = textGrad;\n    exports.fg2.lineWidth = 40;\n    exports.fg2.strokeStyle = \"black\";\n    exports.fg2.font = \"900 \" + size + \"px Arial\";\n    exports.fg2.strokeText(text, 600, 470 / textScale);\n    exports.fg2.lineWidth = 20;\n    exports.fg2.strokeStyle = \"white\";\n    exports.fg2.font = \"900 \" + size + \"px Arial\";\n    exports.fg2.strokeText(text, 600, 470 / textScale);\n    exports.fg2.font = \"900 \" + size + \"px Arial\";\n    exports.fg2.fillText(text, 600, 470 / textScale);\n    exports.fg2.restore();\n    music_1.MusicManager.stopWhatisPlaying();\n    setTimeout(function () {\n        endGame(input);\n    }, 2500);\n}\nfunction onFullScreenChange() {\n    var fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n    // if in fullscreen mode fullscreenElement won't be null\n    var cont = document.getElementById(\"topButtonContainer\");\n    var icn = document.querySelectorAll(\".topButton\");\n    if (fullscreenElement != null) {\n        cont.style.transition = \"opacity 0.5s linear 0s\";\n        cont.style.opacity = 0;\n        ;\n        setTimeout(function () {\n            var i;\n            for (i = 0; i < icn.length; i++) {\n                icn[i].style.height = \"5px\";\n            }\n            cont.style.height = \"5px\";\n            resize();\n        }, 500);\n        (0, jquery_1.default)(\"#keyboardPrompt\").hide();\n        (0, jquery_1.default)(\"#keyboardControlsImg\").hide();\n        (0, jquery_1.default)(\"#controllerSupportContainer\").hide();\n        (0, jquery_1.default)(\"#debugButtonEdit\").empty().append(\"OFF\");\n        (0, jquery_1.default)(\"#debug\").hide();\n        (0, jquery_1.default)(\"#players\").hide();\n        (0, jquery_1.default)(\"body\").css(\"overflow\", \"hidden\");\n        showHeader = false;\n    }\n    else {\n        var i;\n        for (i = 0; i < icn.length; i++) {\n            icn[i].style.height = \"25px\";\n        }\n        cont.style.height = \"31px\";\n        cont.style.transition = \"opacity 0.5s linear 0s\";\n        cont.style.opacity = 1;\n    }\n}\nfunction start() {\n    if (exports.holiday === 1) {\n        (0, jquery_1.default)(\"#layerButton\").after('<div id=\"snowButton\" class=\"gameButton\" style=\"width:90px\"><img src=\"assets/christmas/snowflake.png\" height=17 width=17 style=\"display:inline-block\"/><p style=\"width:30px;display:inline-block\"><span id=\"snowButtonEdit\">150</span></p><div id=\"snowMinus\" class=\"snowControl\" style=\"display:inline-block;padding:3px\"><p style=\"padding:0;font-size:20px\">-</p></div><div id=\"snowPlus\" style=\"display:inline-block;padding:3px\"><p style=\"padding:0;font-size:17px\">+</p></div></div>');\n    }\n    for (var i = 0; i < 4; i++) {\n        buildPlayerObject(i);\n        exports.player[i].phys.face = 1;\n        exports.player[i].actionState = \"WAIT\";\n    }\n    cacheDom();\n    (0, keyboardmenu_1.getKeyboardCookie)();\n    giveMedals();\n    (0, audiomenu_1.getAudioCookies)();\n    (0, gameplaymenu_1.getGameplayCookies)();\n    (0, jquery_1.default)(\"#keyboardButton\").click(function () {\n        (0, jquery_1.default)(\"#keyboardControlsImg\").toggle();\n        (0, jquery_1.default)(\"#keyboardPrompt\").hide();\n    });\n    (0, jquery_1.default)(\"#controllerButton\").click(function () {\n        (0, jquery_1.default)(\"#controllerSupportContainer\").toggle();\n    });\n    exports.layers.BG1 = document.getElementById(\"background1Canvas\");\n    exports.bg1 = exports.layers.BG1.getContext(\"2d\");\n    exports.layers.BG2 = document.getElementById(\"background2Canvas\");\n    exports.bg2 = exports.layers.BG2.getContext(\"2d\");\n    exports.layers.FG1 = document.getElementById(\"foreground1Canvas\");\n    exports.fg1 = exports.layers.FG1.getContext(\"2d\");\n    exports.layers.FG2 = document.getElementById(\"foreground2Canvas\");\n    exports.fg2 = exports.layers.FG2.getContext(\"2d\");\n    exports.layers.UI = document.getElementById(\"uiCanvas\");\n    exports.ui = exports.layers.UI.getContext(\"2d\");\n    exports.bg1.fillStyle = \"rgb(0, 0, 0)\";\n    exports.bg1.fillRect(0, 0, exports.layers.BG1.width, exports.layers.BG1.height);\n    let nullInputBuffers = [(0, input_1.nullInputs)(), (0, input_1.nullInputs)(), (0, input_1.nullInputs)(), (0, input_1.nullInputs)()];\n    gameTick(nullInputBuffers);\n    renderTick();\n    (0, jquery_1.default)(\"#effectsButton\").click(function () {\n        if ((0, vfx_1.isShowSFX)()) {\n            (0, jquery_1.default)(\"#effectsButtonEdit\").empty().append(\"OFF\");\n        }\n        else {\n            (0, jquery_1.default)(\"#effectsButtonEdit\").empty().append(\"ON\");\n        }\n        (0, vfx_1.toggleShowSFX)();\n    });\n    (0, jquery_1.default)(\"#fpsButton\").click(function () {\n        if (fps30) {\n            (0, jquery_1.default)(\"#fpsButtonEdit\").empty().append(\"60\");\n        }\n        else {\n            (0, jquery_1.default)(\"#fpsButtonEdit\").empty().append(\"30\");\n        }\n        fps30 ^= true;\n    });\n    (0, jquery_1.default)(\"#alphaButton\").click(function () {\n        if ((0, transparency_1.getTransparency)()) {\n            (0, jquery_1.default)(\"#alphaButtonEdit\").empty().append(\"OFF\");\n        }\n        else {\n            (0, jquery_1.default)(\"#alphaButtonEdit\").empty().append(\"ON\");\n        }\n        (0, transparency_1.toggleTransparency)();\n    });\n    (0, jquery_1.default)(\"#layerButton\").hover(function () {\n        (0, jquery_1.default)(\"#layerDropdown\").toggle();\n    });\n    (0, jquery_1.default)(\".layer\").click(function () {\n        var id = (0, jquery_1.default)(this).attr(\"id\");\n        switch (id) {\n            case \"layer1\":\n                exports.layerSwitches.BG1 ^= true;\n                (0, jquery_1.default)(\"#background1Canvas\").toggle();\n                break;\n            case \"layer2\":\n                exports.layerSwitches.BG2 ^= true;\n                (0, jquery_1.default)(\"#background2Canvas\").toggle();\n                break;\n            case \"layer3\":\n                exports.layerSwitches.FG1 ^= true;\n                (0, jquery_1.default)(\"#foreground1Canvas\").toggle();\n                break;\n            case \"layer4\":\n                exports.layerSwitches.FG2 ^= true;\n                (0, jquery_1.default)(\"#foreground2Canvas\").toggle();\n                break;\n            case \"layer5\":\n                exports.layerSwitches.UI ^= true;\n                (0, jquery_1.default)(\"#uiCanvas\").toggle();\n                break;\n            default:\n                break;\n        }\n        (0, jquery_1.default)(this).toggleClass(\"layerOn\");\n    });\n    (0, jquery_1.default)(\"#debugButton\").click(function () {\n        if (exports.showDebug) {\n            for (let i = 0; i < 4; i++) {\n                document.getElementById(\"gamepadSVG\" + i).style.display = \"none\";\n            }\n            (0, jquery_1.default)(\"#debugButtonEdit\").empty().append(\"OFF\");\n            (0, jquery_1.default)(\"#debug\").hide();\n            (0, jquery_1.default)(\"#players\").hide();\n            (0, jquery_1.default)(\"body\").css(\"overflow\", \"hidden\");\n            //var mY = Math.max(($(window).height()-750)/2,0);\n            //$(\"#display\").css(\"margin\",mY+\"px 0px 0px \"+mX+\"px\");\n        }\n        else {\n            for (let i = 0; i < 4; i++) {\n                if (exports.playerType[i] !== -1) {\n                    (0, drawGamepad_1.updateGamepadSVGColour)(i, \"gamepadSVG\" + i);\n                    document.getElementById(\"gamepadSVG\" + i).style.display = \"\";\n                }\n            }\n            (0, jquery_1.default)(\"#debugButtonEdit\").empty().append(\"ON\");\n            (0, jquery_1.default)(\"#debug\").show();\n            (0, jquery_1.default)(\"#players\").show();\n            (0, jquery_1.default)(\"body\").css(\"overflow\", \"scroll\");\n            //var mY = Math.max(($(window).height()-900)/2,0);\n            //$(\"#display\").css(\"margin\",mY+\" 0px 0px px \"+mX+\"px\");\n        }\n        exports.showDebug ^= true;\n        resize();\n    });\n    (0, jquery_1.default)(\"#hideButton\").click(function () {\n        (0, jquery_1.default)(\"#header\").toggle();\n        showHeader ^= true;\n        resize();\n    });\n    (0, jquery_1.default)(\"#fullscreenButton\").click(function () {\n        if ((document.fullScreenElement && document.fullScreenElement !== null) || (!document.mozFullScreen && !document.webkitIsFullScreen)) {\n            if (document.documentElement.requestFullScreen) {\n                document.documentElement.requestFullScreen();\n            }\n            else if (document.documentElement.mozRequestFullScreen) {\n                document.documentElement.mozRequestFullScreen();\n            }\n            else if (document.documentElement.webkitRequestFullScreen) {\n                document.documentElement.webkitRequestFullScreen(Element.ALLOW_KEYBOARD_INPUT);\n            }\n        }\n        else {\n            if (document.cancelFullScreen) {\n                document.cancelFullScreen();\n            }\n            else if (document.mozCancelFullScreen) {\n                document.mozCancelFullScreen();\n            }\n            else if (document.webkitCancelFullScreen) {\n                document.webkitCancelFullScreen();\n            }\n        }\n        // resize();\n    });\n    document.addEventListener(\"fullscreenchange\", onFullScreenChange, false);\n    document.addEventListener(\"webkitfullscreenchange\", onFullScreenChange, false);\n    document.addEventListener(\"mozfullscreenchange\", onFullScreenChange, false);\n    (0, jquery_1.default)(\".topButton\").hover(function () {\n        (0, jquery_1.default)(this).children(\".buttonDetails\").toggle();\n    });\n    if (mobile === false) {\n        (0, jquery_1.default)(\".button\").hover(function () {\n            (0, jquery_1.default)(this).toggleClass(\"buttonhighlighted\");\n        });\n        (0, jquery_1.default)(\".socialmedia\").hover(function () {\n            (0, jquery_1.default)(this).toggleClass(\"socialmediahighlight\");\n        });\n        (0, jquery_1.default)(\".sugbtn\").hover(function () {\n            (0, jquery_1.default)(this).toggleClass(\"sugbtnhighlight\");\n        });\n    }\n    (0, jquery_1.default)(\"#appsButton\").hover(function () {\n        (0, jquery_1.default)(\"#appsDropdown\").show();\n    }, function () {\n        (0, jquery_1.default)(\"#appsDropdown\").hide();\n    });\n    if (exports.holiday === 1) {\n        (0, jquery_1.default)(\"#snowMinus\").click(function () {\n            exports.snowCount -= 20;\n            if (exports.snowCount < 0) {\n                exports.snowCount = 0;\n            }\n            (0, jquery_1.default)(\"#snowButtonEdit\").text(exports.snowCount);\n        });\n        (0, jquery_1.default)(\"#snowPlus\").click(function () {\n            exports.snowCount += 20;\n            if (exports.snowCount > 1200) {\n                exports.snowCount = 1200;\n            }\n            (0, jquery_1.default)(\"#snowButtonEdit\").text(exports.snowCount);\n        });\n    }\n    (0, jquery_1.default)(\"#replay\").change(function () {\n        // grab the first image in the FileList object and pass it to the function\n        (0, replay_1.loadReplay)(this.files[0]);\n    });\n    resize();\n}\nwindow.start = start;\nfunction customDeadzone() {\n    this.ls = new Vec2D_1.Vec2D(0, 0);\n    this.cs = new Vec2D_1.Vec2D(0, 0);\n    this.l = 0;\n    this.r = 0;\n}\nfunction addShine(val) {\n    exports.shine += val;\n}\nfunction setShine(val) {\n    exports.shine = val;\n}\nfunction setFindingPlayers(val) {\n    exports.findingPlayers = val;\n}\nfunction setPlaying(val) {\n    exports.playing = val;\n}\nfunction setCalibrationPlayer(val) {\n    exports.calibrationPlayer = val;\n}\nconst dom = {};\nfunction cacheDom() {\n    const elementIds = [\n        \"matchMinutes\",\n        \"matchSeconds\",\n        \"gamelogicAvg\",\n        \"gamelogicHigh\",\n        \"gamelogicLow\",\n        \"gamelogicPeak\",\n        \"renderAvg\",\n        \"renderHigh\",\n        \"renderLow\",\n        \"renderPeak\",\n    ];\n    elementIds.forEach((id) => {\n        dom[id] = document.getElementById(id);\n    });\n}\n;\nfunction setCS(index, val) {\n    exports.characterSelections[index] = val;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/main/main.ts\n");

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ /* webpack/runtime/getFullHash */
/******/ (() => {
/******/ 	__webpack_require__.h = () => ("047b2251353afa07618f")
/******/ })();
/******/ 
/******/ }
);